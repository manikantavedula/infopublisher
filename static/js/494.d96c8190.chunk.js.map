{"version":3,"file":"static/js/494.d96c8190.chunk.js","mappings":"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","sources":["layouts/school/schoolTableNew.js","layouts/school/modals/schoolAddModal.js","layouts/school/modals/schoolEditModal.js","layouts/school/modals/schoolDeleteModal.js","layouts/school/modals/schoolViewModal.js","layouts/school/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction SchoolModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function SchoolTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"school\", accessor: \"school\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"contact\", accessor: \"contact\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        school: <SchoolModule name={`${v.name}`} />,\r\n        series: (\r\n          <List>\r\n            {v.formatted_series &&\r\n              v.formatted_series.length > 0 &&\r\n              v.formatted_series.map((w, j) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <ListItem disablePadding key={i + j} dense>\r\n                  <ListItemButton sx={{ paddingLeft: 0 }}>\r\n                    <ListItemText primary={w.series_name} />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        ),\r\n        contact: <SchoolModule name={`${v.contact}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align={columns[0].align}>S.No</StyledTableCell>\r\n            <StyledTableCell align={columns[1].align}>School</StyledTableCell>\r\n            <StyledTableCell align={columns[2].align}>Series</StyledTableCell>\r\n            <StyledTableCell align={columns[3].align}>contact</StyledTableCell>\r\n            <StyledTableCell align={columns[4].align}>Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.series}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.school}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.contact}</StyledTableCell>\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n// import { google } from \"googleapis\";\r\nimport axios from \"axios\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nexport function SchoolAddModal({ isOpen, onClose, onCloseEmpty, errorEmail }) {\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorEmail);\r\n  }, [errorEmail]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    school: yup.string().required(\"School is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .test(\"email-check\", \"Email Already Exists\", function (value) {\r\n        if (value === errorEmail) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Email is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .required(\"Phone number is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  const initialValues = { school: \"\", email: \"\", contact: \"\", address: \"\" };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const newCheckedItems = [];\r\n    series &&\r\n      series.length > 0 &&\r\n      series.forEach((parent) => {\r\n        const children =\r\n          schoolSeries &&\r\n          schoolSeries.length > 0 &&\r\n          schoolSeries.filter((item) => item.series === parent.name);\r\n        if (\r\n          children &&\r\n          children.length > 0 &&\r\n          children.every((child) =>\r\n            checkedItems.some(\r\n              (item) => item.standard === child.standard && item.series === parent.name\r\n            )\r\n          )\r\n        ) {\r\n          // newCheckedItems.push(parent.name);\r\n          newCheckedItems.push(...children);\r\n        }\r\n      });\r\n    setCheckedItems(newCheckedItems);\r\n  }, [series, schoolSeries]);\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue=\"\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                              // sx={{\r\n                              //   borderTopRightRadius: \"13px\",\r\n                              //   borderTopLeftRadius: \"13px\",\r\n                              //   marginBottom: \"16px\",\r\n                              //   border: \"none\",\r\n                              // }}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                                // sx={{\r\n                                //   borderTopRightRadius: \"13px\",\r\n                                //   borderTopLeftRadius: \"13px\",\r\n                                // }}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            onChange={() => handleChildCheckboxChange(child)}\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    {series && series !== null && series.length > 0 && (\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"tags-standard\"\r\n                        options={series && series !== null && series.length > 0 && series}\r\n                        getOptionLabel={(option) => option.name}\r\n                        isOptionEqualToValue={(option, value) => option.name === value.name}\r\n                        filterSelectedOptions\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.school_series && Boolean(errors.school_series)}\r\n                            helperText={touched.school_series && errors.school_series}\r\n                            variant=\"outlined\"\r\n                            focused\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolAddModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            onChange={() => handleChildCheckboxChange(child)}\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    {series && series !== null && series.length > 0 && (\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"tags-school\"\r\n                        options={series && series !== null && series.length > 0 && series}\r\n                        getOptionLabel={(option) => option.name}\r\n                        isOptionEqualToValue={(option, value) => option.name === value.name}\r\n                        filterSelectedOptions\r\n                        // eslint-disable-next-line camelcase\r\n                        defaultValue={[\r\n                          ...series.filter((v) => values.school_series.includes(v.name)),\r\n                        ]}\r\n                        value={selectedSeries}\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue, values);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                          setSelectedSeries([...newInputValue]);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.school_series && Boolean(errors.school_series)}\r\n                            helperText={touched.school_series && errors.school_series}\r\n                            variant=\"outlined\"\r\n                            focused\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolEditModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete School?\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                      disabled\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      // onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                      disabled\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            // onChange={() => handleChildCheckboxChange(child)}\r\n                                            disabled\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolDeleteModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolViewModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  // const onSubmit = (values) => {\r\n  //   console.log(values, checkedItems);\r\n  //   onClose(values, checkedItems);\r\n  // };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            View School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        // onSubmit={(values) => {\r\n        //   console.log(values);\r\n        //   onSubmit(values);\r\n        // }}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form\r\n          // onSubmit={(v) => {\r\n          //   console.log(v);\r\n          //   handleSubmit(v);\r\n          // }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                      disabled\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      // onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                      disabled\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            // onChange={() => handleChildCheckboxChange(child)}\r\n                                            disabled\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolViewModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback, useEffect } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SchoolTableNew from \"./schoolTableNew\";\r\nimport { SchoolAddModal } from \"./modals/schoolAddModal\";\r\nimport { SchoolEditModal } from \"./modals/schoolEditModal\";\r\nimport { SchoolDeleteModal } from \"./modals/schoolDeleteModal\";\r\nimport { SchoolViewModal } from \"./modals/schoolViewModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction School() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [errorMessageEmailToAddModal, setErrorMessageEmailToAddModal] = useState(\"\");\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n  const accessRole = decryptedObject.role;\r\n\r\n  useEffect(() => {\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/+918639693342/AUTOGEN2/INFOPB\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY3/918639693342/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY/f18eaa75-fa37-11ed-addf-0200cd936042/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(schoolActions.getAll());\r\n  }, []);\r\n\r\n  const school = useSelector((state) => state.school.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return school;\r\n    }\r\n\r\n    const filteredSchool = school.filter(\r\n      (item) =>\r\n        item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n        item.school_series.join(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredSchool;\r\n  }, [searchQuery, school]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = useCallback(() => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  });\r\n\r\n  const onOpenEditModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenViewModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenDeleteModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onCloseEmptyModal = useCallback(() => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessageEmailToAddModal);\r\n  }, [errorMessageEmailToAddModal]);\r\n\r\n  const onCloseAddModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-form`,\r\n        {\r\n          ...values,\r\n          checkedItems,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Email already exists\") {\r\n        setErrorMessageEmailToAddModal(values.email);\r\n      } else {\r\n        setErrorMessageEmailToAddModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        dispatch(schoolActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n          checkedItems,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(schoolActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(schoolActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <SchoolAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          errorEmail={errorMessageEmailToAddModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <SchoolEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <SchoolViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <SchoolDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                School List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Series\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <SchoolTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default School;\r\n"],"names":["SchoolModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","theme","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref3","palette","action","hover","border","SchoolTableNew","_ref4","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","rows","setRows","useState","columns","Header","accessor","align","useEffect","console","log","row","map","v","i","sno","school","series","List","formatted_series","length","w","j","ListItem","disablePadding","dense","ListItemButton","sx","paddingLeft","ListItemText","primary","series_name","contact","_jsxs","_Fragment","Tooltip","title","placement","IconButton","type","onClick","IconEye","size","IconEditCircle","IconTrash","TableContainer","Table","minWidth","boxShadow","TableHead","TableBody","component","scope","Accordion","props","MuiAccordion","disableGutters","elevation","square","divider","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","mode","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","borderTop","SchoolAddModal","isOpen","onClose","onCloseEmpty","errorEmail","checkedItems","setCheckedItems","validationSchema","yup","shape","required","email","matches","test","value","address","dispatch","useDispatch","useLayoutEffect","seriesActions","schoolActions","useSelector","state","data","schoolSeries","dataSchoolSeries","filter","newCheckedItems","forEach","parent","item","every","child","some","standard","push","isParentChecked","isParentIndeterminate","childItems","checkedChildItems","expandedSeries","setExpandedSeries","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","initialValues","onSubmit","values","_ref5","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","xs","TextField","label","error","Boolean","helperText","onChange","event","target","inputProps","maxLength","marginBottom","multiline","placeholder","defaultValue","width","borderRadius","overflow","margin","expanded","panel","newExpanded","id","FormControlLabel","control","Checkbox","checked","parentIndex","childCount","childIndex","findIndex","splice","handleParentCheckboxChange","indeterminate","handleChildCheckboxChange","DialogActions","Button","SchoolEditModal","editModalData","school_series","selectedSeries","setSelectedSeries","format","series_id","standards","standard_id","standard_name","SchoolDeleteModal","disabled","SchoolViewModal","createTheme","main","secondary","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","controller","useMaterialUIController","darkMode","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","errorMessageEmailToAddModal","setErrorMessageEmailToAddModal","key","localStorage","getItem","ciphertext","secretKey","plaintext","CryptoJS","toString","JSON","parse","decryptObject","role","filteredData","useMemo","trim","toLowerCase","includes","join","searchInputRef","React","onOpenAddModal","useCallback","val","onCloseEmptyModal","searchTable","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","async","response","axios","process","headers","Card","CardContent","bgcolor","p","ml","flex","autoFocus","toggleSearch","prevSearch","IconSearch","IconPlus","Divider"],"sourceRoot":""}