{"version":3,"file":"static/js/656.b8ce5489.chunk.js","mappings":"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","sources":["layouts/lesson/lessonTableNew.js","layouts/lesson/modals/lessonAddModal.js","layouts/lesson/modals/lessonEditModal.js","layouts/lesson/modals/lessonViewModal.js","layouts/lesson/modals/lessonVideoModal.js","layouts/lesson/modals/lessonDeleteModal.js","layouts/lesson/index.js","layouts/videoplayer/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\n\r\nfunction LessonModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function LessonTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n  onOpenVideoModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"lesson\", accessor: \"lesson\", align: \"left\" },\r\n    // { Header: \"Lesson Name\", accessor: \"lessonname\", align: \"left\" },\r\n    { Header: \"Main/Part\", accessor: \"mainorpart\", align: \"left\" },\r\n    { Header: \"Part No\", accessor: \"partno\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"right\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(filtereddata);\r\n  }, [filtereddata]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography\r\n            key={`${v.name}-${i}-sno`}\r\n            color=\"text\"\r\n            variant=\"h6\"\r\n            fontSize={\"16px\"}\r\n            fontWeight={400}\r\n          >\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        lesson: <LessonModule key={`${v.name}-${i}-lesson`} name={`${v.name}`} />,\r\n        mainorpart: <LessonModule key={`${v.name}-${i}-mainorpart`} name={`${v.type}`} />,\r\n        partno: (\r\n          <LessonModule\r\n            key={`${v.name}-${i}-partno`}\r\n            name={`${v.part_no === null ? \"-\" : v.part_no}`}\r\n          />\r\n        ),\r\n        // lessonname: (\r\n        //   <LessonModule\r\n        //     name={`${\r\n        //       v.type === \"main\"\r\n        //         ? \"-\"\r\n        //         : filtereddata.filter(\r\n        //             (w) =>\r\n        //               w.id == v.lesson_id &&\r\n        //               w.series === v.series &&\r\n        //               w.standard === v.standard &&\r\n        //               w.subject === v.subject\r\n        //           )[0]?.name\r\n        //     }`}\r\n        //   />\r\n        // ),\r\n        action: (\r\n          <>\r\n            {v.type === \"part\" && v.live_video_id !== null ? (\r\n              <Tooltip title=\"Live Video\" placement=\"top\" key={`${v.name}-${i}-action1`}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"live\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconVideo size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            {v.type === \"part\" && v.animation_video_id !== null ? (\r\n              <Tooltip title=\"Animation Video\" placement=\"top\" key={`${v.name}-${i}-action2`}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"animation\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconSlideshow size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            <Tooltip title=\"View\" placement=\"top\" key={`${v.name}-${i}-action3`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\" key={`${v.name}-${i}-action4`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\" key={`${v.name}-${i}-action5`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Main or Part</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Part No</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Lesson Id</StyledTableCell> */}\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row, i) => (\r\n              <StyledTableRow key={`${row.lesson}-${row.action}-${i}`}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.lesson}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.mainorpart}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.partno}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[4].align}>{row.lessonname}</StyledTableCell> */}\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonAddModal({\r\n  isOpen,\r\n  onClose,\r\n  onCloseEmpty,\r\n  selectedValues: { selectedSeries, selectedStandard, selectedSubject },\r\n}) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: selectedSeries || \"\",\r\n    standard: selectedStandard || \"\",\r\n    subject: selectedSubject || \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    lesson: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    lessonId: \"\",\r\n    liveVideoId: \"\",\r\n    animationVideoId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonAddModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.seriesEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.standardEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                        defaultValue={values.subjectEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                            defaultValue={values.lessonId}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonEditModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  videoId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"video ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function LessonVideoModal({ isOpen, onCloseEmpty, editModalData, videoType }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (${editModalData.type} ${editModalData.part_no}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {videoType === \"live\" ? (\r\n          <VideoPlayer videoId={editModalData.live_video_id} />\r\n        ) : (\r\n          <VideoPlayer videoId={editModalData.animation_video_id} />\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonVideoModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nexport function LessonDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport LessonTableNew from \"./lessonTableNew\";\r\nimport { LessonAddModal } from \"./modals/lessonAddModal\";\r\nimport { LessonEditModal } from \"./modals/lessonEditModal\";\r\nimport { LessonViewModal } from \"./modals/lessonViewModal\";\r\nimport { LessonVideoModal } from \"./modals/lessonVideoModal\";\r\nimport { LessonDeleteModal } from \"./modals/lessonDeleteModal\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Select,\r\n  Menu,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormGroup,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ArchiveIcon from \"@mui/icons-material/Archive\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus, IconFilter } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"right\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  \"& .MuiPaper-root\": {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    minWidth: 180,\r\n    color: theme.palette.mode === \"light\" ? \"rgb(55, 65, 81)\" : theme.palette.grey[300],\r\n    boxShadow:\r\n      \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n    \"& .MuiMenu-list\": {\r\n      padding: \"4px 0\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      \"&:active\": {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Lesson() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [selectedSeries, setSelectedSeries] = useState(\"\");\r\n  const [selectedStandard, setSelectedStandard] = useState(\"\");\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(lessonActions.getAll());\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n  }, []);\r\n\r\n  const lesson = useSelector((state) => state.lesson.data);\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (\r\n      searchQuery.trim() === \"\" &&\r\n      selectedSeries === \"\" &&\r\n      selectedStandard === \"\" &&\r\n      selectedSubject === \"\"\r\n    ) {\r\n      return lesson;\r\n    }\r\n\r\n    const filteredLesson = lesson.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      const queryEmpty = searchQuery === \"\";\r\n      const seriesEmpty = selectedSeries === \"\";\r\n      const standardEmpty = selectedStandard === \"\";\r\n      const subjectEmpty = selectedSubject === \"\";\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return `${item.standard}` === `${selectedStandard}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return `${item.subject}` === `${selectedSubject}`;\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Additional Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Remaining Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n    });\r\n\r\n    return filteredLesson;\r\n  }, [searchQuery, lesson, selectedSeries, selectedStandard, selectedSubject]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenViewModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <LessonAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          selectedValues={{\r\n            selectedSeries,\r\n            selectedStandard,\r\n            selectedSubject,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <LessonEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <LessonDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <LessonViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"video\" ? (\r\n        <LessonVideoModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Lesson List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Tooltip title=\"Filter Table\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <IconFilter size=\"28px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <StyledMenu\r\n                  id=\"demo-customized-menu\"\r\n                  MenuListProps={{\r\n                    \"aria-labelledby\": \"demo-customized-button\",\r\n                  }}\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <Typography variant=\"h6\" fontWeight={500} color=\"primary\">\r\n                    Filter Table\r\n                  </Typography>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={selectedSeries}\r\n                        label=\"Series\"\r\n                        onChange={(event) => {\r\n                          setSelectedSeries(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={selectedStandard}\r\n                        label=\"Standard\"\r\n                        onChange={(event) => {\r\n                          setSelectedStandard(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={selectedSubject}\r\n                        label=\"Subject\"\r\n                        onChange={(event) => {\r\n                          setSelectedSubject(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                </StyledMenu>\r\n\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"outlined\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"25px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Lesson\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"28px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <LessonTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n            onOpenVideoModal={onOpenVideoModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"names":["LessonModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref4","palette","action","hover","border","LessonTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","onOpenVideoModal","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","Header","accessor","align","columns","useEffect","console","log","row","map","v","i","sno","lesson","mainorpart","type","partno","part_no","_jsxs","_Fragment","live_video_id","Tooltip","title","placement","IconButton","onClick","_objectSpread","videoType","lessonIdName","filter","w","id","lesson_id","series","standard","subject","IconVideo","size","animation_video_id","IconSlideshow","IconEye","IconEditCircle","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","validationSchema","yup","shape","required","lessonId","when","is","then","otherwise","partNo","LessonAddModal","isOpen","onClose","onCloseEmpty","_ref$selectedValues","selectedValues","selectedSeries","selectedStandard","selectedSubject","fetchedOptions","setFetchedOptions","_useState4","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","subjectActions","typeOfVideosActions","useSelector","state","data","fetchData","typeOfVideos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","headers","sent","t0","stop","_x","apply","arguments","fetchPart","_callee2","cb","_context2","length","_x2","_x3","initialValues","partName","liveVideoId","animationVideoId","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","FormControl","InputLabel","Select","labelId","value","label","error","Boolean","helperText","onChange","event","target","MenuItem","FormHelperText","disabled","option","TextField","focused","DialogActions","Button","LessonEditModal","editModalData","seriesEdit","standardEdit","subjectEdit","defaultValue","videoId","LessonViewModal","LessonVideoModal","VideoPlayer","LessonDeleteModal","StyledMenu","createTheme","primary","main","secondary","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","textAlign","mode","grey","text","marginRight","alpha","selectedOpacity","useTheme","setIsOpen","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","_useState13","_useState14","setSelectedSeries","_useState15","_useState16","setSelectedStandard","_useState17","_useState18","setSelectedSubject","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","lessonActions","filteredData","useMemo","trim","toLowerCase","queryEmpty","seriesEmpty","standardEmpty","subjectEmpty","includes","searchInputRef","onCloseEmptyModal","onCloseAddModal","onCloseEditModal","onCloseDeleteModal","_callee3","_context3","searchTable","useCallback","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","p","currentTarget","IconFilter","MenuListProps","disableRipple","ml","flex","placeholder","inputProps","autoFocus","prevSearch","IconSearch","IconPlus","Divider","val","ref","useRef","plyr","play","videoSrc","sources","src","provider","Plyr","source","options","autoplay"],"sourceRoot":""}