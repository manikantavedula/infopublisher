{"version":3,"file":"static/js/669.6ebfe1d1.chunk.js","mappings":"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","sources":["../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\n\n// third party\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\n\n// project imports\nimport useScriptRef from \"hooks/useScriptRef\";\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\n\n// assets\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport Google from \"assets/images/icons/social-google.svg\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport jwt_decode from \"jwt-decode\";\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst FirebaseLogin = ({ ...others }) => {\n  const theme = useTheme();\n\n  const scriptedRef = useScriptRef();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const customization = useSelector((state) => state.customization);\n  const [checked, setChecked] = useState(true);\n\n  const googleHandler = async () => {\n    console.error(\"Login\");\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const responseGoogle = (response) => {\n    // Handle the response from Google Sign-In\n    console.log(response);\n  };\n\n  const responseGoogleError = (response) => {\n    // Handle the response from Google Sign-In\n    console.error(response);\n  };\n  const handleGoogleLogin = () => {\n    // Handle the Google Sign-In logic\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <GoogleLogin\n            onSuccess={(credentialResponse) => {\n              const decodedCredential = jwt_decode(credentialResponse.credential);\n              console.log(credentialResponse, decodedCredential);\n            }}\n            onError={() => {\n              console.log(\"Login Failed\");\n            }}\n            useOneTap\n            width=\"100%\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n\n            <Button\n              variant=\"outlined\"\n              sx={{\n                cursor: \"unset\",\n                m: 2,\n                py: 0.5,\n                px: 7,\n                borderColor: `${theme.palette.grey[100]} !important`,\n                color: `${theme.palette.grey[900]}!important`,\n                fontWeight: 500,\n                borderRadius: `${customization.borderRadius}px`,\n              }}\n              disableRipple\n              disabled\n            >\n              OR\n            </Button>\n\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n          </Box>\n        </Grid>\n        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          email: \"info@codedthemes.com\",\n          password: \"123456\",\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n          password: Yup.string().max(255).required(\"Password is required\"),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-email-login\">\n                Email Address / Username\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-login\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                label=\"Email Address / Username\"\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-login\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n                inputProps={{}}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={(event) => setChecked(event.target.checked)}\n                    name=\"checked\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Remember me\"\n              />\n              <Typography\n                variant=\"subtitle1\"\n                color=\"secondary\"\n                sx={{ textDecoration: \"none\", cursor: \"pointer\" }}\n              >\n                Forgot Password?\n              </Typography>\n            </Stack>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  disableElevation\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Sign in\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirebaseLogin;\n","import { Link } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from \"@mui/material\";\n\n// project imports\nimport AuthWrapper1 from \"../AuthWrapper1\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport AuthLogin from \"../auth-forms/AuthLogin\";\nimport Logo from \"ui-component/Logo\";\nimport AuthFooter from \"ui-component/cards/AuthFooter\";\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: \"100vh\" }}>\n        <Grid item xs={12}>\n          <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\n          >\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  {/* <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\n                          >\n                            Hi, Welcome Back\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            fontSize=\"16px\"\n                            textAlign={matchDownSM ? \"center\" : \"inherit\"}\n                          >\n                            Enter your credentials to continue\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid> */}\n                  <Grid item xs={12}>\n                    <AuthLogin />\n                  </Grid>\n                  {/* <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Typography\n                        component={Link}\n                        to=\"/pages/register/register3\"\n                        variant=\"subtitle1\"\n                        sx={{ textDecoration: \"none\" }}\n                      >\n                        Don&apos;t have an account?\n                      </Typography>\n                    </Grid>\n                  </Grid> */}\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid> */}\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Login;\n"],"names":["e","this","message","prototype","Error","name","r","window","atob","bind","t","String","replace","length","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","JSON","parse","split","_ref","others","Object","assign","_objectDestructuringEmpty","theme","useTheme","scriptedRef","useScriptRef","customization","useMediaQuery","breakpoints","down","useSelector","state","_useState","useState","_useState2","_slicedToArray","checked","setChecked","_useState3","_useState4","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","_jsxs","_Fragment","children","Grid","container","direction","justifyContent","spacing","_jsx","item","xs","GoogleLogin","onSuccess","credentialResponse","decodedCredential","jwt_decode","credential","console","log","onError","useOneTap","width","Box","sx","alignItems","display","Divider","flexGrow","orientation","Button","variant","cursor","m","py","px","borderColor","concat","palette","grey","color","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","values","_ref3","setErrors","setStatus","setSubmitting","wrap","_context2","prev","next","current","success","err","error","stop","_x","_x2","apply","arguments","_ref5","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_objectSpread","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Stack","FormControlLabel","control","Checkbox","target","textDecoration","mt","AnimateButton","disableElevation","AuthWrapper1","minHeight","sm","AuthCardWrapper","Link","to","Logo","AuthLogin"],"sourceRoot":""}