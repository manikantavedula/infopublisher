{"version":3,"file":"static/js/35.a44446cc.chunk.js","mappings":"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","sources":["layouts/series/seriesTableNew.js","layouts/series/modals/seriesAddModal.js","layouts/series/modals/seriesEditModal.js","layouts/series/modals/seriesDeleteModal.js","layouts/series/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction SeriesModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function SeriesTableNew({ filtereddata, onOpenEditModal, onOpenDeleteModal }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        series: <SeriesModule name={`${v.name}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Series</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.series}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const initialValues = {\r\n    series: \"\",\r\n    //  status: \"on\"\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesAddModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesEditModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  disabled\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={values.status !== \"off\"} disabled />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Icon from \"@mui/material/Icon\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// Material Dashboard 2 React components\r\n// import Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SeriesTable from \"./seriesTable\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport SeriesTableNew from \"./seriesTableNew\";\r\nimport { SeriesAddModal } from \"./modals/seriesAddModal\";\r\nimport { SeriesEditModal } from \"./modals/seriesEditModal\";\r\nimport { SeriesDeleteModal } from \"./modals/seriesDeleteModal\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Series() {\r\n  console.log(\"In Series\");\r\n\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return series;\r\n    }\r\n\r\n    const filteredSeries = series.filter((item) =>\r\n      item.name.toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredSeries;\r\n  }, [searchQuery, series]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <SeriesAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <SeriesEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <SeriesDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Series List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Series\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <SeriesTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Series;\r\n"],"names":["SeriesModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","theme","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref3","palette","action","hover","border","SeriesTableNew","_ref4","filtereddata","onOpenEditModal","onOpenDeleteModal","rows","setRows","useState","columns","Header","accessor","align","useEffect","console","log","row","map","v","i","sno","series","_jsxs","_Fragment","Tooltip","title","placement","IconButton","type","onClick","IconEditCircle","size","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","validationSchema","yup","shape","required","SeriesAddModal","isOpen","onClose","onCloseEmpty","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","initialValues","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","TextField","label","error","Boolean","helperText","onChange","event","target","value","focused","DialogActions","Button","SeriesEditModal","editModalData","defaultValue","SeriesDeleteModal","disabled","createTheme","primary","main","secondary","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","dispatch","useDispatch","useLayoutEffect","seriesActions","useSelector","state","data","filteredData","useMemo","trim","filter","item","toLowerCase","includes","searchInputRef","React","onCloseEmptyModal","searchTable","useCallback","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","async","response","axios","process","headers","Grid","Card","CardContent","bgcolor","borderRadius","p","ml","flex","placeholder","inputProps","autoFocus","toggleSearch","prevSearch","IconSearch","onOpenAddModal","IconPlus","Divider","val"],"sourceRoot":""}