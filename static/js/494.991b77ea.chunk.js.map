{"version":3,"file":"static/js/494.991b77ea.chunk.js","mappings":"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","sources":["layouts/school/schoolTableNew.js","layouts/school/modals/schoolAddModal.js","layouts/school/modals/schoolEditModal.js","layouts/school/modals/schoolDeleteModal.js","layouts/school/modals/schoolViewModal.js","layouts/school/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction SchoolModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function SchoolTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"school\", accessor: \"school\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"contact\", accessor: \"contact\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        school: <SchoolModule name={`${v.name}`} />,\r\n        series: (\r\n          <List>\r\n            {v.formatted_series &&\r\n              v.formatted_series.length > 0 &&\r\n              v.formatted_series.map((w, j) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <ListItem disablePadding key={i + j} dense>\r\n                  <ListItemButton sx={{ paddingLeft: 0 }}>\r\n                    <ListItemText primary={w.series_name} />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        ),\r\n        contact: <SchoolModule name={`${v.contact}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align={columns[0].align}>S.No</StyledTableCell>\r\n            <StyledTableCell align={columns[1].align}>School</StyledTableCell>\r\n            <StyledTableCell align={columns[2].align}>Series</StyledTableCell>\r\n            <StyledTableCell align={columns[3].align}>contact</StyledTableCell>\r\n            <StyledTableCell align={columns[4].align}>Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.series}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.school}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.contact}</StyledTableCell>\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n// import { google } from \"googleapis\";\r\nimport axios from \"axios\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nexport function SchoolAddModal({ isOpen, onClose, onCloseEmpty, errorEmail }) {\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorEmail);\r\n  }, [errorEmail]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    school: yup.string().required(\"School is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .test(\"email-check\", \"Email Already Exists\", function (value) {\r\n        if (value === errorEmail) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Email is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .required(\"Phone number is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  const initialValues = { school: \"\", email: \"\", contact: \"\", address: \"\" };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const newCheckedItems = [];\r\n    series &&\r\n      series.length > 0 &&\r\n      series.forEach((parent) => {\r\n        const children =\r\n          schoolSeries &&\r\n          schoolSeries.length > 0 &&\r\n          schoolSeries.filter((item) => item.series === parent.name);\r\n        if (\r\n          children &&\r\n          children.length > 0 &&\r\n          children.every((child) =>\r\n            checkedItems.some(\r\n              (item) => item.standard === child.standard && item.series === parent.name\r\n            )\r\n          )\r\n        ) {\r\n          // newCheckedItems.push(parent.name);\r\n          newCheckedItems.push(...children);\r\n        }\r\n      });\r\n    setCheckedItems(newCheckedItems);\r\n  }, [series, schoolSeries]);\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue=\"\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                              // sx={{\r\n                              //   borderTopRightRadius: \"13px\",\r\n                              //   borderTopLeftRadius: \"13px\",\r\n                              //   marginBottom: \"16px\",\r\n                              //   border: \"none\",\r\n                              // }}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                                // sx={{\r\n                                //   borderTopRightRadius: \"13px\",\r\n                                //   borderTopLeftRadius: \"13px\",\r\n                                // }}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            onChange={() => handleChildCheckboxChange(child)}\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    {series && series !== null && series.length > 0 && (\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"tags-standard\"\r\n                        options={series && series !== null && series.length > 0 && series}\r\n                        getOptionLabel={(option) => option.name}\r\n                        isOptionEqualToValue={(option, value) => option.name === value.name}\r\n                        filterSelectedOptions\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.school_series && Boolean(errors.school_series)}\r\n                            helperText={touched.school_series && errors.school_series}\r\n                            variant=\"outlined\"\r\n                            focused\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolAddModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            onChange={() => handleChildCheckboxChange(child)}\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    {series && series !== null && series.length > 0 && (\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"tags-school\"\r\n                        options={series && series !== null && series.length > 0 && series}\r\n                        getOptionLabel={(option) => option.name}\r\n                        isOptionEqualToValue={(option, value) => option.name === value.name}\r\n                        filterSelectedOptions\r\n                        // eslint-disable-next-line camelcase\r\n                        defaultValue={[\r\n                          ...series.filter((v) => values.school_series.includes(v.name)),\r\n                        ]}\r\n                        value={selectedSeries}\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue, values);\r\n                          setFieldValue(\"school_series\", newInputValue);\r\n                          setSelectedSeries([...newInputValue]);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.school_series && Boolean(errors.school_series)}\r\n                            helperText={touched.school_series && errors.school_series}\r\n                            variant=\"outlined\"\r\n                            focused\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolEditModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, checkedItems);\r\n    onClose(values, checkedItems);\r\n  };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete School?\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                      disabled\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      // onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                      disabled\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            // onChange={() => handleChildCheckboxChange(child)}\r\n                                            disabled\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolDeleteModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  // flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  school: yup.string().required(\"School is required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n    .required(\"Email is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n});\r\n\r\nexport function SchoolViewModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, email, contact, address, school_series, formatted_series } = editModalData;\r\n\r\n  const initialValues = {\r\n    school: name,\r\n    email,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    school_series,\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [selectedSeries, setSelectedSeries] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(schoolActions.getSchoolSeries());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const schoolSeries = useSelector((state) => state.school.dataSchoolSeries);\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    console.log(checkedItems);\r\n  }, [checkedItems]);\r\n\r\n  useEffect(() => {\r\n    const format = [];\r\n\r\n    formatted_series &&\r\n      formatted_series.length > 0 &&\r\n      formatted_series.forEach((series) => {\r\n        const { series_id, series_name, standards } = series;\r\n        standards.forEach((standard) => {\r\n          const { standard_id, standard_name } = standard;\r\n          format.push({\r\n            series: series_name,\r\n            series_id,\r\n            standard: standard_name,\r\n            standard_id,\r\n          });\r\n        });\r\n      });\r\n\r\n    console.log(format);\r\n    setCheckedItems(format);\r\n  }, [formatted_series]);\r\n\r\n  useEffect(() => {\r\n    console.log(series, schoolSeries);\r\n\r\n    console.log(\r\n      series &&\r\n        series.length > 0 &&\r\n        series.map(\r\n          (v) =>\r\n            schoolSeries &&\r\n            schoolSeries.length > 0 &&\r\n            schoolSeries.filter((w) => w.series === v.name).map((w) => w)\r\n        )\r\n    );\r\n  }, [series, schoolSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedSeries);\r\n  }, [selectedSeries]);\r\n\r\n  // const onSubmit = (values) => {\r\n  //   console.log(values, checkedItems);\r\n  //   onClose(values, checkedItems);\r\n  // };\r\n\r\n  const handleParentCheckboxChange = (parent) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const parentIndex = newCheckedItems.filter((item) => item.series === parent);\r\n\r\n    const childCount = schoolSeries.filter((item) => item.series === parent);\r\n\r\n    if (parentIndex.length < childCount.length) {\r\n      // Parent checkbox was unchecked, so add it and its associated children to checkedItems\r\n      // newCheckedItems.push(parent);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      console.log(children);\r\n      children.forEach((child) => {\r\n        if (\r\n          !newCheckedItems.some(\r\n            (item) => item.standard === child.standard && item.series === child.series\r\n          )\r\n        ) {\r\n          newCheckedItems.push(child);\r\n        }\r\n      });\r\n    } else {\r\n      // Parent checkbox was checked, so remove it and its associated children from checkedItems\r\n      // newCheckedItems.splice(parentIndex, 1);\r\n      const children = schoolSeries.filter((item) => item.series === parent);\r\n      children.forEach((child) => {\r\n        const childIndex = newCheckedItems.findIndex(\r\n          (item) => item.standard === child.standard && item.series === child.series\r\n        );\r\n        if (childIndex !== -1) {\r\n          newCheckedItems.splice(childIndex, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleChildCheckboxChange = (child) => {\r\n    let newCheckedItems = [...checkedItems];\r\n    const childIndex = newCheckedItems.findIndex(\r\n      (item) => item.standard === child.standard && item.series === child.series\r\n    );\r\n\r\n    if (childIndex === -1) {\r\n      // Child checkbox was unchecked, so add it to checkedItems\r\n      newCheckedItems.push(child);\r\n    } else {\r\n      // Child checkbox was checked, so remove it from checkedItems\r\n      newCheckedItems.splice(childIndex, 1);\r\n    }\r\n\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const isParentChecked = (parent) => {\r\n    const children =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((item) => item.series === parent);\r\n\r\n    console.log(\r\n      children,\r\n      parent,\r\n      children &&\r\n        children.length > 0 &&\r\n        children.every((child) =>\r\n          checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n        )\r\n    );\r\n\r\n    return (\r\n      children &&\r\n      children.length > 0 &&\r\n      children.every((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      )\r\n    );\r\n  };\r\n\r\n  const isParentIndeterminate = (parent) => {\r\n    const childItems =\r\n      schoolSeries &&\r\n      schoolSeries.length > 0 &&\r\n      schoolSeries.filter((child) => child.series === parent);\r\n\r\n    console.log(childItems);\r\n\r\n    const checkedChildItems =\r\n      childItems &&\r\n      childItems.length > 0 &&\r\n      childItems.filter((child) =>\r\n        checkedItems.some((item) => item.standard === child.standard && item.series === parent)\r\n      );\r\n\r\n    console.log(checkedChildItems);\r\n\r\n    return (\r\n      checkedChildItems &&\r\n      checkedChildItems.length > 0 &&\r\n      checkedChildItems.length !== childItems.length\r\n    );\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            View School\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        // onSubmit={(values) => {\r\n        //   console.log(values);\r\n        //   onSubmit(values);\r\n        // }}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form\r\n          // onSubmit={(v) => {\r\n          //   console.log(v);\r\n          //   handleSubmit(v);\r\n          // }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"school\"\r\n                      label=\"School\"\r\n                      variant=\"outlined\"\r\n                      error={touched.school && Boolean(errors.school)}\r\n                      helperText={touched.school && errors.school}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"school\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.school}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                      disabled\r\n                    />\r\n\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <Box\r\n                      sx={{\r\n                        border: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        overflow: \"hidden\",\r\n                        backgroundColor: \"#f8fafc\",\r\n                      }}\r\n                    >\r\n                      <Typography sx={{ margin: \"15.5px 14px\" }}>Class Access</Typography>\r\n                      <FormGroup sx={{ borderRadius: \"13px\" }}>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((parent, i) => (\r\n                            <Accordion\r\n                              expanded={expandedSeries === `panelseries${i + 1}`}\r\n                              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                              key={`panelseries${i + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelseries${i + 1}d-content`}\r\n                                id={`panelseries${i + 1}d-header`}\r\n                              >\r\n                                <FormControlLabel\r\n                                  control={\r\n                                    <Checkbox\r\n                                      checked={isParentChecked(parent.name)}\r\n                                      // onChange={() => handleParentCheckboxChange(parent.name)}\r\n                                      indeterminate={isParentIndeterminate(parent.name)}\r\n                                      disabled\r\n                                    />\r\n                                  }\r\n                                  label={parent.name}\r\n                                />\r\n                              </AccordionSummary>\r\n                              <AccordionDetails sx={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}>\r\n                                {schoolSeries &&\r\n                                  schoolSeries.length > 0 &&\r\n                                  schoolSeries\r\n                                    .filter((item) => item.series === parent.name)\r\n                                    .map((child) => (\r\n                                      <FormControlLabel\r\n                                        key={`${child.standard}-${child.series}`}\r\n                                        control={\r\n                                          <Checkbox\r\n                                            checked={checkedItems.some(\r\n                                              (item) =>\r\n                                                item.standard === child.standard &&\r\n                                                item.series === parent.name\r\n                                            )}\r\n                                            // onChange={() => handleChildCheckboxChange(child)}\r\n                                            disabled\r\n                                          />\r\n                                        }\r\n                                        label={child.standard}\r\n                                      />\r\n                                    ))}\r\n                              </AccordionDetails>\r\n                              {/* </FormGroup> */}\r\n                            </Accordion>\r\n                          ))}\r\n                      </FormGroup>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SchoolViewModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback, useEffect } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { schoolActions } from \"slices/school\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SchoolTableNew from \"./schoolTableNew\";\r\nimport { SchoolAddModal } from \"./modals/schoolAddModal\";\r\nimport { SchoolEditModal } from \"./modals/schoolEditModal\";\r\nimport { SchoolDeleteModal } from \"./modals/schoolDeleteModal\";\r\nimport { SchoolViewModal } from \"./modals/schoolViewModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction School() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [errorMessageEmailToAddModal, setErrorMessageEmailToAddModal] = useState(\"\");\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n  const accessRole = decryptedObject.role;\r\n\r\n  useEffect(() => {\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/+918639693342/AUTOGEN2/INFOPB\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY3/918639693342/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY/f18eaa75-fa37-11ed-addf-0200cd936042/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(schoolActions.getAll());\r\n  }, []);\r\n\r\n  const school = useSelector((state) => state.school.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return school;\r\n    }\r\n\r\n    const filteredSchool = school.filter(\r\n      (item) =>\r\n        item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n        item.school_series.join(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredSchool;\r\n  }, [searchQuery, school]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = useCallback(() => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  });\r\n\r\n  const onOpenEditModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenViewModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenDeleteModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onCloseEmptyModal = useCallback(() => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessageEmailToAddModal);\r\n  }, [errorMessageEmailToAddModal]);\r\n\r\n  const onCloseAddModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-form`,\r\n        {\r\n          ...values,\r\n          checkedItems,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Email already exists\") {\r\n        setErrorMessageEmailToAddModal(values.email);\r\n      } else {\r\n        setErrorMessageEmailToAddModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        dispatch(schoolActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n          checkedItems,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(schoolActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/school/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(schoolActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <SchoolAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          errorEmail={errorMessageEmailToAddModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <SchoolEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <SchoolViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <SchoolDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                School List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Series\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <SchoolTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default School;\r\n"],"names":["SchoolModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref4","palette","action","hover","border","SchoolTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","Header","accessor","align","columns","useEffect","console","log","row","map","v","i","sno","school","series","List","formatted_series","length","w","j","ListItem","disablePadding","dense","ListItemButton","sx","paddingLeft","ListItemText","primary","series_name","contact","_jsxs","_Fragment","Tooltip","title","placement","IconButton","type","onClick","IconEye","size","IconEditCircle","IconTrash","TableContainer","Table","minWidth","boxShadow","TableHead","TableBody","component","scope","Accordion","props","MuiAccordion","_objectSpread","disableGutters","elevation","square","divider","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","mode","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","borderTop","SchoolAddModal","isOpen","onClose","onCloseEmpty","errorEmail","checkedItems","setCheckedItems","validationSchema","yup","shape","required","email","matches","test","value","address","dispatch","useDispatch","useLayoutEffect","seriesActions","schoolActions","useSelector","state","data","schoolSeries","dataSchoolSeries","filter","newCheckedItems","forEach","parent","item","every","child","some","standard","push","apply","_toConsumableArray","isParentChecked","isParentIndeterminate","childItems","checkedChildItems","_useState4","expandedSeries","setExpandedSeries","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","initialValues","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","xs","TextField","label","error","Boolean","helperText","onChange","event","target","inputProps","maxLength","marginBottom","multiline","placeholder","defaultValue","width","borderRadius","overflow","margin","expanded","panel","newExpanded","id","FormControlLabel","control","Checkbox","checked","parentIndex","childCount","childIndex","findIndex","splice","handleParentCheckboxChange","indeterminate","handleChildCheckboxChange","DialogActions","Button","SchoolEditModal","editModalData","school_series","selectedSeries","format","series_id","standards","standard_id","standard_name","_useState5","_useState6","SchoolDeleteModal","disabled","SchoolViewModal","createTheme","main","secondary","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useMaterialUIControl","useMaterialUIController","_useState9","darkMode","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","_useState13","_useState14","errorMessageEmailToAddModal","setErrorMessageEmailToAddModal","key","localStorage","getItem","ciphertext","secretKey","plaintext","CryptoJS","toString","JSON","parse","decryptObject","role","filteredData","useMemo","trim","toLowerCase","includes","join","searchInputRef","React","onOpenAddModal","useCallback","val","onCloseEmptyModal","onCloseAddModal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","headers","sent","t0","finish","stop","_x","_x2","arguments","onCloseEditModal","_callee2","_context2","_x3","_x4","onCloseDeleteModal","_callee3","_context3","_x5","searchTable","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","p","ml","flex","autoFocus","prevSearch","IconSearch","IconPlus","Divider"],"sourceRoot":""}