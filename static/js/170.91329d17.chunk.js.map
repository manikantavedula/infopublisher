{"version":3,"file":"static/js/170.91329d17.chunk.js","mappings":"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","sources":["utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["/**\n * Password validator for login pages\n */\nimport value from \"assets/scss/_themes-vars.module.scss\";\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n  if (count < 2) return { label: \"Poor\", color: value.errorMain };\n  if (count < 3) return { label: \"Weak\", color: value.warningDark };\n  if (count < 4) return { label: \"Normal\", color: value.orangeMain };\n  if (count < 5) return { label: \"Good\", color: value.successMain };\n  if (count < 6) return { label: \"Strong\", color: value.successDark };\n  return { label: \"Poor\", color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n  let strengths = 0;\n  if (number.length > 5) strengths += 1;\n  if (number.length > 7) strengths += 1;\n  if (hasNumber(number)) strengths += 1;\n  if (hasSpecial(number)) strengths += 1;\n  if (hasMixed(number)) strengths += 1;\n  return strengths;\n};\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\n\n// third party\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\n\n// project imports\nimport useScriptRef from \"hooks/useScriptRef\";\nimport Google from \"assets/images/icons/social-google.svg\";\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\nimport { strengthColor, strengthIndicator } from \"utils/password-strength\";\n\n// assets\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nconst FirebaseRegister = ({ ...others }) => {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const customization = useSelector((state) => state.customization);\n  const [showPassword, setShowPassword] = useState(false);\n  const [checked, setChecked] = useState(true);\n\n  const [strength, setStrength] = useState(0);\n  const [level, setLevel] = useState();\n\n  const googleHandler = async () => {\n    console.error(\"Register\");\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword(\"123456\");\n  }, []);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <AnimateButton>\n            <Button\n              variant=\"outlined\"\n              fullWidth\n              onClick={googleHandler}\n              size=\"large\"\n              sx={{\n                color: \"grey.700\",\n                backgroundColor: theme.palette.grey[50],\n                borderColor: theme.palette.grey[100],\n              }}\n            >\n              <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                <img\n                  src={Google}\n                  alt=\"google\"\n                  width={16}\n                  height={16}\n                  style={{ marginRight: matchDownSM ? 8 : 16 }}\n                />\n              </Box>\n              Sign up with Google\n            </Button>\n          </AnimateButton>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ alignItems: \"center\", display: \"flex\" }}>\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n            <Button\n              variant=\"outlined\"\n              sx={{\n                cursor: \"unset\",\n                m: 2,\n                py: 0.5,\n                px: 7,\n                borderColor: `${theme.palette.grey[100]} !important`,\n                color: `${theme.palette.grey[900]}!important`,\n                fontWeight: 500,\n                borderRadius: `${customization.borderRadius}px`,\n              }}\n              disableRipple\n              disabled\n            >\n              OR\n            </Button>\n            <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n          </Box>\n        </Grid>\n        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n          password: Yup.string().max(255).required(\"Password is required\"),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <Grid container spacing={matchDownSM ? 0 : 2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  margin=\"normal\"\n                  name=\"fname\"\n                  type=\"text\"\n                  defaultValue=\"\"\n                  sx={{ ...theme.typography.customInput }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  margin=\"normal\"\n                  name=\"lname\"\n                  type=\"text\"\n                  defaultValue=\"\"\n                  sx={{ ...theme.typography.customInput }}\n                />\n              </Grid>\n            </Grid>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-email-register\">\n                Email Address / Username\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-register\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                inputProps={{}}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                  {errors.email}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              sx={{ ...theme.typography.customInput }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-register\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                name=\"password\"\n                label=\"Password\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e);\n                  changePassword(e.target.value);\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                      size=\"large\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                inputProps={{}}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                  {errors.password}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            {strength !== 0 && (\n              <FormControl fullWidth>\n                <Box sx={{ mb: 2 }}>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item>\n                      <Box\n                        style={{ backgroundColor: level?.color }}\n                        sx={{ width: 85, height: 8, borderRadius: \"7px\" }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                        {level?.label}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </FormControl>\n            )}\n\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checked}\n                      onChange={(event) => setChecked(event.target.checked)}\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"subtitle1\">\n                      Agree with &nbsp;\n                      <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                        Terms & Condition.\n                      </Typography>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box sx={{ mt: 2 }}>\n              <AnimateButton>\n                <Button\n                  disableElevation\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Sign up\n                </Button>\n              </AnimateButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirebaseRegister;\n","import { Link } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from \"@mui/material/styles\";\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from \"@mui/material\";\n\n// project imports\nimport AuthWrapper1 from \"../AuthWrapper1\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport Logo from \"ui-component/Logo\";\nimport AuthRegister from \"../auth-forms/AuthRegister\";\nimport AuthFooter from \"ui-component/cards/AuthFooter\";\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: \"100vh\" }}>\n        <Grid item xs={12}>\n          <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\n          >\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\n                          >\n                            Sign up\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            fontSize=\"16px\"\n                            textAlign={matchDownSM ? \"center\" : \"inherit\"}\n                          >\n                            Enter your credentials to continue\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthRegister />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Typography\n                        component={Link}\n                        to=\"/pages/login/login3\"\n                        variant=\"subtitle1\"\n                        sx={{ textDecoration: \"none\" }}\n                      >\n                        Already have an account?\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Register;\n"],"names":["strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","_ref","others","Object","assign","_objectDestructuringEmpty","theme","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","customization","useSelector","state","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","checked","setChecked","_useState5","_useState6","strength","setStrength","_useState7","_useState8","level","setLevel","googleHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","error","stop","apply","arguments","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","label","color","useEffect","_jsxs","_Fragment","children","Grid","container","direction","justifyContent","spacing","_jsx","item","xs","AnimateButton","Button","variant","fullWidth","onClick","size","sx","backgroundColor","palette","grey","borderColor","Box","mr","sm","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","flexGrow","orientation","cursor","m","py","px","concat","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref4","_callee2","values","_ref3","setErrors","setStatus","setSubmitting","_context2","current","success","err","message","_x","_x2","_ref5","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_objectSpread","noValidate","TextField","margin","name","type","defaultValue","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","fontSize","FormControlLabel","control","Checkbox","component","Link","to","mt","disableElevation","AuthWrapper1","minHeight","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration","AuthFooter"],"sourceRoot":""}