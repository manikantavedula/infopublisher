{"version":3,"file":"static/js/136.69d919a5.chunk.js","mappings":"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","sources":["components/MDBox/MDBoxRoot.js","components/MDBox/index.js","components/MDButton/MDButtonRoot.js","components/MDButton/index.js","components/MDTypography/MDTypographyRoot.js","components/MDTypography/index.js","components/MDInput/MDInputRoot.js","components/MDInput/index.js","components/MDPagination/MDPaginationItemRoot.js","components/MDPagination/index.js","examples/Tables/DataTable/DataTableHeadCell.js","examples/Tables/DataTable/DataTableBodyCell.js","examples/Tables/DataTable/index.js","layouts/series/seriesTable.js","layouts/series/seriesTableNew.js","layouts/series/modals/seriesAddModal.js","layouts/series/modals/seriesEditModal.js","layouts/series/modals/seriesDeleteModal.js","layouts/series/index.js"],"sourcesContent":["// @mui material components\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Box)(({ theme, ownerState }) => {\n  const { palette, functions, borders, boxShadows } = theme;\n  const { variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow } = ownerState;\n\n  const { gradients, grey, white } = palette || {};\n  const { linearGradient } = functions || {};\n  const { borderRadius: radius } = borders || {};\n  const { colored } = boxShadows || {};\n\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900],\n  };\n\n  const validGradients = [\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"dark\",\n    \"light\",\n  ];\n\n  const validColors = [\n    \"transparent\",\n    \"white\",\n    \"black\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"grey-100\",\n    \"grey-200\",\n    \"grey-300\",\n    \"grey-400\",\n    \"grey-500\",\n    \"grey-600\",\n    \"grey-700\",\n    \"grey-800\",\n    \"grey-900\",\n  ];\n\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"];\n\n  // background value\n  let backgroundValue = bgColor;\n\n  if (variant === \"gradient\") {\n    backgroundValue = validGradients.find((el) => el === bgColor)\n      ? linearGradient(gradients[bgColor].main, gradients[bgColor].state)\n      : white.main;\n  } else if (validColors.find((el) => el === bgColor)) {\n    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];\n  } else {\n    backgroundValue = bgColor;\n  }\n\n  // color value\n  let colorValue = color;\n\n  if (validColors.find((el) => el === color)) {\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\n  }\n\n  // borderRadius value\n  let borderRadiusValue = borderRadius;\n\n  if (validBorderRadius.find((el) => el === borderRadius)) {\n    borderRadiusValue = radius[borderRadius];\n  }\n\n  // boxShadow value\n  let boxShadowValue = \"none\";\n\n  if (validBoxShadows.find((el) => el === shadow)) {\n    boxShadowValue = boxShadows[shadow];\n  } else if (coloredShadow) {\n    boxShadowValue = colored[coloredShadow] ? colored[coloredShadow] : \"none\";\n  }\n\n  return {\n    opacity,\n    background: backgroundValue,\n    color: colorValue,\n    borderRadius: borderRadiusValue,\n    boxShadow: boxShadowValue,\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDBox\nimport MDBoxRoot from \"components/MDBox/MDBoxRoot\";\n\nconst MDBox = forwardRef(\n  ({ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow, ...rest }, ref) => (\n    <MDBoxRoot\n      {...rest}\n      ref={ref}\n      ownerState={{ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow }}\n    />\n  )\n);\n\n// Setting default values for the props of MDBox\nMDBox.defaultProps = {\n  variant: \"contained\",\n  bgColor: \"transparent\",\n  color: \"dark\",\n  opacity: 1,\n  borderRadius: \"none\",\n  shadow: \"none\",\n  coloredShadow: \"none\",\n};\n\n// Typechecking props for the MDBox\nMDBox.propTypes = {\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.number,\n  borderRadius: PropTypes.string,\n  shadow: PropTypes.string,\n  coloredShadow: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"none\",\n  ]),\n};\n\nexport default MDBox;\n","/* eslint-disable prefer-destructuring */\n\n// @mui material components\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Button)(({ theme, ownerState }) => {\n  const { palette, functions, borders, boxShadows } = theme;\n  const { color, variant, size, circular, iconOnly, darkMode } = ownerState;\n\n  const { white, text, transparent, gradients, grey } = palette;\n  const { boxShadow, linearGradient, pxToRem, rgba } = functions;\n  const { borderRadius } = borders;\n  const { colored } = boxShadows;\n\n  // styles for the button with variant=\"contained\"\n  const containedStyles = () => {\n    // background color value\n    const backgroundValue = palette[color] ? palette[color].main : white.main;\n\n    // backgroundColor value when button is focused\n    const focusedBackgroundValue = palette[color] ? palette[color].focus : white.focus;\n\n    // boxShadow value\n    const boxShadowValue = colored[color]\n      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(\n          [0, 3],\n          [1, -2],\n          palette[color].main,\n          0.2\n        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`\n      : \"none\";\n\n    // boxShadow value when button is hovered\n    const hoveredBoxShadowValue = colored[color]\n      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(\n          [0, 4],\n          [23, 0],\n          palette[color].main,\n          0.15\n        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`\n      : \"none\";\n\n    // color value\n    let colorValue = white.main;\n\n    if (!darkMode && (color === \"white\" || color === \"light\" || !palette[color])) {\n      colorValue = text.main;\n    } else if (darkMode && (color === \"white\" || color === \"light\" || !palette[color])) {\n      colorValue = grey[600];\n    }\n\n    // color value when button is focused\n    let focusedColorValue = white.main;\n\n    if (color === \"white\") {\n      focusedColorValue = text.main;\n    } else if (color === \"primary\" || color === \"error\" || color === \"dark\") {\n      focusedColorValue = white.main;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      boxShadow: boxShadowValue,\n\n      \"&:hover\": {\n        backgroundColor: backgroundValue,\n        boxShadow: hoveredBoxShadowValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        backgroundColor: focusedBackgroundValue,\n        boxShadow: palette[color]\n          ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n          : boxShadow([0, 0], [0, 3.2], white.main, 0.5),\n      },\n\n      \"&:disabled\": {\n        backgroundColor: backgroundValue,\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"outlined\"\n  const outliedStyles = () => {\n    // background color value\n    const backgroundValue = color === \"white\" ? rgba(white.main, 0.1) : transparent.main;\n\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // boxShadow value\n    const boxShadowValue = palette[color]\n      ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n      : boxShadow([0, 0], [0, 3.2], white.main, 0.5);\n\n    // border color value\n    let borderColorValue = palette[color] ? palette[color].main : rgba(white.main, 0.75);\n\n    if (color === \"white\") {\n      borderColorValue = rgba(white.main, 0.75);\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      borderColor: borderColorValue,\n\n      \"&:hover\": {\n        background: transparent.main,\n        borderColor: colorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        background: transparent.main,\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:active:not(:hover)\": {\n        backgroundColor: colorValue,\n        color: white.main,\n        opacity: 0.85,\n      },\n\n      \"&:disabled\": {\n        color: colorValue,\n        borderColor: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"gradient\"\n  const gradientStyles = () => {\n    // background value\n    const backgroundValue =\n      color === \"white\" || !gradients[color]\n        ? white.main\n        : linearGradient(gradients[color].main, gradients[color].state);\n\n    // boxShadow value\n    const boxShadowValue = colored[color]\n      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(\n          [0, 3],\n          [1, -2],\n          palette[color].main,\n          0.2\n        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`\n      : \"none\";\n\n    // boxShadow value when button is hovered\n    const hoveredBoxShadowValue = colored[color]\n      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(\n          [0, 4],\n          [23, 0],\n          palette[color].main,\n          0.15\n        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`\n      : \"none\";\n\n    // color value\n    let colorValue = white.main;\n\n    if (color === \"white\") {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      boxShadow: boxShadowValue,\n\n      \"&:hover\": {\n        boxShadow: hoveredBoxShadowValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:disabled\": {\n        background: backgroundValue,\n        color: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"text\"\n  const textStyles = () => {\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // color value when button is focused\n    const focusedColorValue = palette[color] ? palette[color].focus : white.focus;\n\n    return {\n      color: colorValue,\n\n      \"&:hover\": {\n        color: focusedColorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with circular={true}\n  const circularStyles = () => ({\n    borderRadius: borderRadius.section,\n  });\n\n  // styles for the button with iconOnly={true}\n  const iconOnlyStyles = () => {\n    // width, height, minWidth and minHeight values\n    let sizeValue = pxToRem(38);\n\n    if (size === \"small\") {\n      sizeValue = pxToRem(25.4);\n    } else if (size === \"large\") {\n      sizeValue = pxToRem(52);\n    }\n\n    // padding value\n    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;\n\n    if (size === \"small\") {\n      paddingValue = pxToRem(4.5);\n    } else if (size === \"large\") {\n      paddingValue = pxToRem(16);\n    }\n\n    return {\n      width: sizeValue,\n      minWidth: sizeValue,\n      height: sizeValue,\n      minHeight: sizeValue,\n      padding: paddingValue,\n\n      \"& .material-icons\": {\n        marginTop: 0,\n      },\n\n      \"&:hover, &:focus, &:active\": {\n        transform: \"none\",\n      },\n    };\n  };\n\n  return {\n    ...(variant === \"contained\" && containedStyles()),\n    ...(variant === \"outlined\" && outliedStyles()),\n    ...(variant === \"gradient\" && gradientStyles()),\n    ...(variant === \"text\" && textStyles()),\n    ...(circular && circularStyles()),\n    ...(iconOnly && iconOnlyStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDButton\nimport MDButtonRoot from \"components/MDButton/MDButtonRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDButton = forwardRef(\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDButtonRoot\n        {...rest}\n        ref={ref}\n        color=\"primary\"\n        variant={variant === \"gradient\" ? \"contained\" : variant}\n        size={size}\n        ownerState={{ color, variant, size, circular, iconOnly, darkMode }}\n      >\n        {children}\n      </MDButtonRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDButton\nMDButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false,\n};\n\n// Typechecking props for the MDButton\nMDButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDButton;\n","// @mui material components\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Typography)(({ theme, ownerState }) => {\n  const { palette, typography, functions } = theme;\n  const { color, textTransform, verticalAlign, fontWeight, opacity, textGradient, darkMode } =\n    ownerState;\n\n  const { gradients, transparent, white } = palette;\n  const { fontWeightLight, fontWeightRegular, fontWeightMedium, fontWeightBold } = typography;\n  const { linearGradient } = functions;\n\n  // fontWeight styles\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold,\n  };\n\n  // styles for the typography with textGradient={true}\n  const gradientStyles = () => ({\n    backgroundImage:\n      color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color]\n        ? linearGradient(gradients[color].main, gradients[color].state)\n        : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1,\n  });\n\n  // color value\n  let colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n\n  if (darkMode && (color === \"inherit\" || !palette[color])) {\n    colorValue = \"inherit\";\n  } else if (darkMode && color === \"dark\") colorValue = white.main;\n\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDTypography\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDTypography = forwardRef(\n  (\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\n    ref\n  ) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDTypographyRoot\n        {...rest}\n        ref={ref}\n        ownerState={{\n          color,\n          textTransform,\n          verticalAlign,\n          fontWeight,\n          opacity,\n          textGradient,\n          darkMode,\n        }}\n      >\n        {children}\n      </MDTypographyRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDTypography\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1,\n};\n\n// Typechecking props for the MDTypography\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\n    \"inherit\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"white\",\n  ]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\n    \"unset\",\n    \"baseline\",\n    \"sub\",\n    \"super\",\n    \"text-top\",\n    \"text-bottom\",\n    \"middle\",\n    \"top\",\n    \"bottom\",\n  ]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number,\n};\n\nexport default MDTypography;\n","// @mui material components\nimport TextField from \"@mui/material/TextField\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(TextField)(({ theme, ownerState }) => {\n  const { palette, functions } = theme;\n  const { error, success, disabled } = ownerState;\n\n  const { grey, transparent, error: colorError, success: colorSuccess } = palette;\n  const { pxToRem } = functions;\n\n  // styles for the input with error={true}\n  const errorStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23F44335' viewBox='0 0 12 12'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3E%3Ccircle cx='6' cy='8.2' r='.6' fill='%23F44335' stroke='none'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorError.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorError.main,\n    },\n  });\n\n  // styles for the input with success={true}\n  const successStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 8'%3E%3Cpath fill='%234CAF50' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorSuccess.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorSuccess.main,\n    },\n  });\n\n  return {\n    backgroundColor: disabled ? `${grey[200]} !important` : transparent.main,\n    pointerEvents: disabled ? \"none\" : \"auto\",\n    ...(error && errorStyles()),\n    ...(success && successStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDInput\nimport MDInputRoot from \"components/MDInput/MDInputRoot\";\n\nconst MDInput = forwardRef(({ error, success, disabled, ...rest }, ref) => (\n  <MDInputRoot {...rest} ref={ref} ownerState={{ error, success, disabled }} />\n));\n\n// Setting default values for the props of MDInput\nMDInput.defaultProps = {\n  error: false,\n  success: false,\n  disabled: false,\n};\n\n// Typechecking props for the MDInput\nMDInput.propTypes = {\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default MDInput;\n","// @mui material components\nimport { styled } from \"@mui/material/styles\";\n\n// Material Dashboard 2 React components\nimport MDButton from \"components/MDButton\";\n\nexport default styled(MDButton)(({ theme, ownerState }) => {\n  const { borders, functions, typography, palette } = theme;\n  const { variant, paginationSize, active } = ownerState;\n\n  const { borderColor } = borders;\n  const { pxToRem } = functions;\n  const { fontWeightRegular, size: fontSize } = typography;\n  const { light } = palette;\n\n  // width, height, minWidth and minHeight values\n  let sizeValue = pxToRem(36);\n\n  if (paginationSize === \"small\") {\n    sizeValue = pxToRem(30);\n  } else if (paginationSize === \"large\") {\n    sizeValue = pxToRem(46);\n  }\n\n  return {\n    borderColor,\n    margin: `0 ${pxToRem(2)}`,\n    pointerEvents: active ? \"none\" : \"auto\",\n    fontWeight: fontWeightRegular,\n    fontSize: fontSize.sm,\n    width: sizeValue,\n    minWidth: sizeValue,\n    height: sizeValue,\n    minHeight: sizeValue,\n\n    \"&:hover, &:focus, &:active\": {\n      transform: \"none\",\n      boxShadow: (variant !== \"gradient\" || variant !== \"contained\") && \"none !important\",\n      opacity: \"1 !important\",\n    },\n\n    \"&:hover\": {\n      backgroundColor: light.main,\n      borderColor,\n    },\n  };\n});\n","import { forwardRef, createContext, useContext, useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Custom styles for MDPagination\nimport MDPaginationItemRoot from \"components/MDPagination/MDPaginationItemRoot\";\n\n// The Pagination main context\nconst Context = createContext();\n\nconst MDPagination = forwardRef(\n  ({ item, variant, color, size, active, children, ...rest }, ref) => {\n    const context = useContext(Context);\n    const paginationSize = context ? context.size : null;\n\n    const value = useMemo(() => ({ variant, color, size }), [variant, color, size]);\n\n    return (\n      <Context.Provider value={value}>\n        {item ? (\n          <MDPaginationItemRoot\n            {...rest}\n            ref={ref}\n            variant={active ? context.variant : \"outlined\"}\n            color={active ? context.color : \"secondary\"}\n            iconOnly\n            circular\n            ownerState={{ variant, active, paginationSize }}\n          >\n            {children}\n          </MDPaginationItemRoot>\n        ) : (\n          <MDBox\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            sx={{ listStyle: \"none\" }}\n          >\n            {children}\n          </MDBox>\n        )}\n      </Context.Provider>\n    );\n  }\n);\n\n// Setting default values for the props of MDPagination\nMDPagination.defaultProps = {\n  item: false,\n  variant: \"gradient\",\n  color: \"info\",\n  size: \"medium\",\n  active: false,\n};\n\n// Typechecking props for the MDPagination\nMDPagination.propTypes = {\n  item: PropTypes.bool,\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  active: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDPagination;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nfunction DataTableHeadCell({ width, children, sorted, align, ...rest }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  return (\n    <MDBox\n      component=\"th\"\n      width={width}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, borders: { borderWidth } }) => ({\n        borderBottom: `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        {...rest}\n        position=\"relative\"\n        textAlign={align}\n        color={darkMode ? \"white\" : \"secondary\"}\n        opacity={0.7}\n        sx={({ typography: { size, fontWeightBold } }) => ({\n          fontSize: size.xxs,\n          fontWeight: fontWeightBold,\n          textTransform: \"uppercase\",\n          cursor: sorted && \"pointer\",\n          userSelect: sorted && \"none\",\n        })}\n      >\n        {children}\n        {sorted && (\n          <MDBox\n            position=\"absolute\"\n            top={0}\n            right={align !== \"right\" ? \"16px\" : 0}\n            left={align === \"right\" ? \"-5px\" : \"unset\"}\n            sx={({ typography: { size } }) => ({\n              fontSize: size.lg,\n            })}\n          >\n            <MDBox\n              position=\"absolute\"\n              top={-6}\n              color={sorted === \"asce\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"asce\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_up</Icon>\n            </MDBox>\n            <MDBox\n              position=\"absolute\"\n              top={0}\n              color={sorted === \"desc\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"desc\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_down</Icon>\n            </MDBox>\n          </MDBox>\n        )}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableHeadCell\nDataTableHeadCell.defaultProps = {\n  width: \"auto\",\n  sorted: \"none\",\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableHeadCell\nDataTableHeadCell.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.node.isRequired,\n  sorted: PropTypes.oneOf([false, \"none\", \"asce\", \"desc\"]),\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableHeadCell;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\nfunction DataTableBodyCell({ noBorder, align, children }) {\n  return (\n    <MDBox\n      component=\"td\"\n      textAlign={align}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, typography: { size }, borders: { borderWidth } }) => ({\n        fontSize: size.sm,\n        borderBottom: noBorder ? \"none\" : `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        display=\"inline-block\"\n        width=\"max-content\"\n        color=\"text\"\n        sx={{ verticalAlign: \"middle\" }}\n      >\n        {children}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableBodyCell\nDataTableBodyCell.defaultProps = {\n  noBorder: false,\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableBodyCell\nDataTableBodyCell.propTypes = {\n  children: PropTypes.node.isRequired,\n  noBorder: PropTypes.bool,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableBodyCell;\n","import { useMemo, useEffect, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-table components\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\n\n// @mui material components\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Icon from \"@mui/material/Icon\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDPagination from \"components/MDPagination\";\n\n// Material Dashboard 2 React example components\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\n\nfunction DataTable({\n  entriesPerPage,\n  canSearch,\n  showTotalEntries,\n  table,\n  pagination,\n  isSorted,\n  noEndBorder,\n}) {\n  const defaultValue = entriesPerPage.defaultValue ? entriesPerPage.defaultValue : 10;\n  const entries = entriesPerPage.entries\n    ? entriesPerPage.entries.map((el) => el.toString())\n    : [\"5\", \"10\", \"15\", \"20\", \"25\"];\n  const columns = useMemo(() => table.columns, [table]);\n  const data = useMemo(() => table.rows, [table]);\n\n  const tableInstance = useTable(\n    { columns, data, initialState: { pageIndex: 0 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    pageOptions,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, globalFilter },\n  } = tableInstance;\n\n  // Set the default value for the entries per page when component mounts\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]);\n\n  // Set the entries per page value based on the select value\n  const setEntriesPerPage = (value) => setPageSize(value);\n\n  // Render the paginations\n  const renderPagination = pageOptions.map((option) => (\n    <MDPagination\n      item\n      key={option}\n      onClick={() => gotoPage(Number(option))}\n      active={pageIndex === option}\n    >\n      {option + 1}\n    </MDPagination>\n  ));\n\n  // Handler for the input to set the pagination index\n  const handleInputPagination = ({ target: { value } }) =>\n    value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\n\n  // Customized page options starting from 1\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\n\n  // Setting value for the pagination input\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value - 1));\n\n  // Search input value state\n  const [search, setSearch] = useState(globalFilter);\n\n  // Search input state handle\n  const onSearchChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 100);\n\n  // A function that sets the sorted value for the table\n  const setSortedValue = (column) => {\n    let sortedValue;\n\n    if (isSorted && column.isSorted) {\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\n    } else if (isSorted) {\n      sortedValue = \"none\";\n    } else {\n      sortedValue = false;\n    }\n\n    return sortedValue;\n  };\n\n  // Setting the entries starting point\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\n\n  // Setting the entries ending point\n  let entriesEnd;\n\n  if (pageIndex === 0) {\n    entriesEnd = pageSize;\n  } else if (pageIndex === pageOptions.length - 1) {\n    entriesEnd = rows.length;\n  } else {\n    entriesEnd = pageSize * (pageIndex + 1);\n  }\n\n  return (\n    <TableContainer sx={{ boxShadow: \"none\" }}>\n      {entriesPerPage || canSearch ? (\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\n          {entriesPerPage && (\n            <MDBox display=\"flex\" alignItems=\"center\">\n              <Autocomplete\n                disableClearable\n                value={pageSize.toString()}\n                options={entries}\n                onChange={(event, newValue) => {\n                  setEntriesPerPage(parseInt(newValue, 10));\n                }}\n                size=\"small\"\n                sx={{ width: \"5rem\" }}\n                renderInput={(params) => <MDInput {...params} />}\n              />\n              <MDTypography variant=\"caption\" color=\"secondary\">\n                &nbsp;&nbsp;entries per page\n              </MDTypography>\n            </MDBox>\n          )}\n          {canSearch && (\n            <MDBox width=\"12rem\" ml=\"auto\">\n              <MDInput\n                placeholder=\"Search...\"\n                value={search}\n                size=\"small\"\n                fullWidth\n                onChange={({ currentTarget }) => {\n                  setSearch(search);\n                  onSearchChange(currentTarget.value);\n                }}\n              />\n            </MDBox>\n          )}\n        </MDBox>\n      ) : null}\n      <Table stickyHeader {...getTableProps()}>\n        <MDBox component=\"thead\">\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <DataTableHeadCell\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\n                  width={column.width ? column.width : \"auto\"}\n                  align={column.align ? column.align : \"left\"}\n                  sorted={setSortedValue(column)}\n                >\n                  {column.render(\"Header\")}\n                </DataTableHeadCell>\n              ))}\n            </TableRow>\n          ))}\n        </MDBox>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row, key) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <DataTableBodyCell\n                    noBorder={noEndBorder && rows.length - 1 === key}\n                    align={cell.column.align ? cell.column.align : \"left\"}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render(\"Cell\")}\n                  </DataTableBodyCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n      <MDBox\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\n      >\n        {showTotalEntries && (\n          <MDBox mb={{ xs: 3, sm: 0 }}>\n            <MDTypography variant=\"button\" color=\"secondary\" fontWeight=\"regular\">\n              Showing {entriesStart} to {entriesEnd} of {rows.length} entries\n            </MDTypography>\n          </MDBox>\n        )}\n        {pageOptions.length > 1 && (\n          <MDPagination\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\n            color={pagination.color ? pagination.color : \"info\"}\n          >\n            {canPreviousPage && (\n              <MDPagination item onClick={() => previousPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_left</Icon>\n              </MDPagination>\n            )}\n            {renderPagination.length > 6 ? (\n              <MDBox width=\"5rem\" mx={1}>\n                <MDInput\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\n                  value={customizedPageOptions[pageIndex]}\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\n                />\n              </MDBox>\n            ) : (\n              renderPagination\n            )}\n            {canNextPage && (\n              <MDPagination item onClick={() => nextPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_right</Icon>\n              </MDPagination>\n            )}\n          </MDPagination>\n        )}\n      </MDBox>\n    </TableContainer>\n  );\n}\n\n// Setting default values for the props of DataTable\nDataTable.defaultProps = {\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\n  canSearch: false,\n  showTotalEntries: true,\n  pagination: { variant: \"gradient\", color: \"info\" },\n  isSorted: true,\n  noEndBorder: false,\n};\n\n// Typechecking props for the DataTable\nDataTable.propTypes = {\n  entriesPerPage: PropTypes.oneOfType([\n    PropTypes.shape({\n      defaultValue: PropTypes.number,\n      entries: PropTypes.arrayOf(PropTypes.number),\n    }),\n    PropTypes.bool,\n  ]),\n  canSearch: PropTypes.bool,\n  showTotalEntries: PropTypes.bool,\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\n  pagination: PropTypes.shape({\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"light\",\n    ]),\n  }),\n  isSorted: PropTypes.bool,\n  noEndBorder: PropTypes.bool,\n};\n\nexport default DataTable;\n","import { useState, useEffect } from \"react\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n\r\n// Data\r\nimport MDButton from \"components/MDButton\";\r\n// import MDBadge from \"components/MDBadge\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\n// import { useMaterialUIController } from \"context\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\n\r\nfunction SeriesModule({ name }) {\r\n  return (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDBox lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          {name}\r\n        </MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nfunction SeriesTable({ filtereddata, onOpenEditModal, onOpenDeleteModal }) {\r\n  // const [controller] = useMaterialUIController();\r\n  // const { darkMode } = controller;\r\n  const [rows, setRows] = useState([]);\r\n  // const [filtereddata, setFilteredData] = useState([]);\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    // { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            {i + 1}\r\n          </MDTypography>\r\n        ),\r\n        series: <SeriesModule name={`${v.name}`} />,\r\n        // status: (\r\n        //   <MDBox ml={-1}>\r\n        //     <MDBadge\r\n        //       badgeContent={`${v.status}`}\r\n        //       color={v.status === \"on\" ? \"success\" : \"error\"}\r\n        //       variant=\"gradient\"\r\n        //       size=\"sm\"\r\n        //     />\r\n        //   </MDBox>\r\n        // ),\r\n        action: (\r\n          <ButtonGroup size=\"small\" variant=\"text\" aria-label=\"outlined primary button group\">\r\n            <MDButton color=\"success\" onClick={() => onOpenEditModal(v)} size=\"small\">\r\n              <Edit />\r\n            </MDButton>\r\n            <MDButton color=\"error\" onClick={() => onOpenDeleteModal(v)} size=\"small\">\r\n              <Delete />\r\n            </MDButton>\r\n          </ButtonGroup>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <MDBox pt={3}>\r\n      <DataTable\r\n        table={{ columns, rows }}\r\n        isSorted={false}\r\n        entriesPerPage={false}\r\n        showTotalEntries={false}\r\n        noEndBorder\r\n      />\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nexport default SeriesTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction SeriesModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function SeriesTableNew({ filtereddata, onOpenEditModal, onOpenDeleteModal }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        series: <SeriesModule name={`${v.name}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Series</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.series}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const initialValues = {\r\n    series: \"\",\r\n    //  status: \"on\"\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesAddModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesEditModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  disabled\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={values.status !== \"off\"} disabled />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Icon from \"@mui/material/Icon\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// Material Dashboard 2 React components\r\n// import Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SeriesTable from \"./seriesTable\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport SeriesTableNew from \"./seriesTableNew\";\r\nimport { SeriesAddModal } from \"./modals/seriesAddModal\";\r\nimport { SeriesEditModal } from \"./modals/seriesEditModal\";\r\nimport { SeriesDeleteModal } from \"./modals/seriesDeleteModal\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Series() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return series;\r\n    }\r\n\r\n    const filteredSeries = series.filter((item) =>\r\n      item.name.toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredSeries;\r\n  }, [searchQuery, series]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <SeriesAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <SeriesEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <SeriesDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Series List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Series\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <SeriesTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Series;\r\n"],"names":["styled","Box","_ref","theme","ownerState","palette","functions","borders","boxShadows","variant","bgColor","color","opacity","borderRadius","shadow","coloredShadow","_ref2","gradients","grey","white","linearGradient","radius","colored","greyColors","validColors","backgroundValue","find","el","main","state","colorValue","borderRadiusValue","boxShadowValue","background","boxShadow","MDBox","forwardRef","ref","rest","_objectWithoutProperties","_excluded","_jsx","MDBoxRoot","_objectSpread","defaultProps","propTypes","PropTypes","Button","size","circular","iconOnly","darkMode","text","transparent","pxToRem","rgba","focusedBackgroundValue","focus","concat","hoveredBoxShadowValue","focusedColorValue","backgroundColor","containedStyles","borderColorValue","borderColor","outliedStyles","dark","gradientStyles","textStyles","section","sizeValue","paddingValue","width","minWidth","height","minHeight","padding","marginTop","transform","iconOnlyStyles","MDButton","children","_useMaterialUIControl","useMaterialUIController","_slicedToArray","MDButtonRoot","Typography","typography","textTransform","verticalAlign","fontWeight","textGradient","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","fontWeights","light","regular","medium","bold","textDecoration","backgroundImage","display","WebkitBackgroundClip","WebkitTextFillColor","position","zIndex","MDTypography","MDTypographyRoot","TextField","error","success","disabled","colorError","colorSuccess","pointerEvents","backgroundRepeat","backgroundPosition","backgroundSize","MDInput","MDInputRoot","paginationSize","active","fontSize","margin","sm","Context","createContext","MDPagination","item","context","useContext","value","useMemo","Provider","MDPaginationItemRoot","justifyContent","alignItems","sx","listStyle","DataTableHeadCell","sorted","align","component","py","px","borderWidth","borderBottom","_jsxs","textAlign","_ref3","_ref3$typography","xxs","cursor","userSelect","top","right","left","_ref4","lg","Icon","DataTableBodyCell","noBorder","DataTable","entriesPerPage","canSearch","showTotalEntries","table","pagination","isSorted","noEndBorder","defaultValue","entries","map","toString","columns","data","rows","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","canPreviousPage","canNextPage","gotoPage","nextPage","previousPage","setPageSize","setGlobalFilter","_tableInstance$state","pageSize","globalFilter","useEffect","entriesEnd","renderPagination","option","onClick","Number","customizedPageOptions","_useState","useState","_useState2","search","setSearch","onSearchChange","useAsyncDebounce","undefined","setSortedValue","column","isSortedDesc","entriesStart","length","TableContainer","p","Autocomplete","disableClearable","options","onChange","event","newValue","parseInt","renderInput","params","ml","placeholder","fullWidth","currentTarget","Table","stickyHeader","headerGroup","TableRow","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","TableBody","row","key","getRowProps","cells","cell","getCellProps","flexDirection","xs","mb","mx","inputProps","type","min","max","target","SeriesModule","name","StyledTableCell","TableCell","_defineProperty","tableCellClasses","StyledTableRow","action","hover","border","SeriesTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","setRows","_useState3","Header","accessor","console","log","v","i","sno","series","_Fragment","Tooltip","title","placement","IconButton","IconEditCircle","IconTrash","TableHead","scope","validationSchema","yup","shape","required","SeriesAddModal","isOpen","onClose","onCloseEmpty","Dialog","open","DialogTitle","className","Close","Formik","initialValues","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","label","Boolean","helperText","focused","DialogActions","SeriesEditModal","editModalData","SeriesDeleteModal","createTheme","primary","secondary","useTheme","setIsOpen","_useState4","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","dispatch","useDispatch","useLayoutEffect","seriesActions","useSelector","filteredData","trim","filter","toLowerCase","includes","searchInputRef","React","onCloseEmptyModal","onCloseAddModal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","sent","t0","stop","_x","apply","arguments","onCloseEditModal","_callee2","_context2","_x2","onCloseDeleteModal","_callee3","_context3","_x3","searchTable","useCallback","_searchInputRef$curre","current","ThemeProvider","Backdrop","drawer","CircularProgress","Grid","Card","CardContent","bgcolor","flex","autoFocus","prevSearch","IconSearch","IconPlus","Divider","val"],"sourceRoot":""}