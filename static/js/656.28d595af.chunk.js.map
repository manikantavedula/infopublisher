{"version":3,"file":"static/js/656.28d595af.chunk.js","mappings":"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","sources":["layouts/lesson/lessonTableNew.js","layouts/lesson/modals/lessonAddModal.js","layouts/lesson/modals/lessonEditModal.js","layouts/lesson/modals/lessonViewModal.js","layouts/lesson/modals/lessonVideoModal.js","layouts/lesson/modals/lessonDeleteModal.js","layouts/lesson/index.js","layouts/videoplayer/index.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\n\r\nfunction LessonModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function LessonTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n  onOpenVideoModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"lesson\", accessor: \"lesson\", align: \"left\" },\r\n    { Header: \"Lesson Name\", accessor: \"lessonname\", align: \"left\" },\r\n    { Header: \"Main/Part\", accessor: \"mainorpart\", align: \"left\" },\r\n    { Header: \"Part No\", accessor: \"partno\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"right\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(filtereddata);\r\n  }, [filtereddata]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        lesson: <LessonModule name={`${v.name}`} />,\r\n        mainorpart: <LessonModule name={`${v.type}`} />,\r\n        partno: <LessonModule name={`${v.part_no === null ? \"-\" : v.part_no}`} />,\r\n        lessonname: (\r\n          <LessonModule\r\n            name={`${\r\n              v.type === \"main\"\r\n                ? \"-\"\r\n                : filtereddata.filter(\r\n                    (w) =>\r\n                      w.id == v.lesson_id &&\r\n                      w.series === v.series &&\r\n                      w.standard === v.standard &&\r\n                      w.subject === v.subject\r\n                  )[0].name\r\n            }`}\r\n          />\r\n        ),\r\n        action: (\r\n          <>\r\n            {v.type === \"part\" && v.live_video_id !== null ? (\r\n              <Tooltip title=\"Live Video\" placement=\"top\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"live\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconVideo size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            {v.type === \"part\" && v.animation_video_id !== null ? (\r\n              <Tooltip title=\"Animation Video\" placement=\"top\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"animation\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconSlideshow size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Main or Part</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Part No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson Id</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.lesson}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.lesson}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.mainorpart}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.partno}</StyledTableCell>\r\n                <StyledTableCell align={columns[4].align}>{row.lessonname}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[5].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: \"\",\r\n    standard: \"\",\r\n    subject: \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    lesson: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    lessonId: \"\",\r\n    liveVideoId: \"\",\r\n    animationVideoId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonAddModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.seriesEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.standardEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                        defaultValue={values.subjectEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                            defaultValue={values.lessonId}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonEditModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  videoId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"video ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function LessonVideoModal({ isOpen, onCloseEmpty, editModalData, videoType }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (${editModalData.type} ${editModalData.part_no}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {videoType === \"live\" ? (\r\n          <VideoPlayer videoId={editModalData.live_video_id} />\r\n        ) : (\r\n          <VideoPlayer videoId={editModalData.animation_video_id} />\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonVideoModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nexport function LessonDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport LessonTableNew from \"./lessonTableNew\";\r\nimport { LessonAddModal } from \"./modals/lessonAddModal\";\r\nimport { LessonEditModal } from \"./modals/lessonEditModal\";\r\nimport { LessonViewModal } from \"./modals/lessonViewModal\";\r\nimport { LessonVideoModal } from \"./modals/lessonVideoModal\";\r\nimport { LessonDeleteModal } from \"./modals/lessonDeleteModal\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Lesson() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(lessonActions.getAll());\r\n  }, []);\r\n\r\n  const lesson = useSelector((state) => state.lesson.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return lesson;\r\n    }\r\n\r\n    const filteredLesson = lesson.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n    });\r\n\r\n    return filteredLesson;\r\n  }, [searchQuery, lesson]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenViewModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <LessonAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <LessonEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <LessonDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <LessonViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"video\" ? (\r\n        <LessonVideoModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Lesson List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"lesson\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Lesson\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <LessonTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n            onOpenVideoModal={onOpenVideoModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["LessonModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref4","palette","action","hover","border","LessonTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","onOpenVideoModal","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","Header","accessor","align","columns","useEffect","console","log","row","map","v","i","sno","lesson","mainorpart","type","partno","part_no","lessonname","filter","w","id","lesson_id","series","standard","subject","_jsxs","_Fragment","live_video_id","Tooltip","title","placement","IconButton","onClick","_objectSpread","videoType","lessonIdName","IconVideo","size","animation_video_id","IconSlideshow","IconEye","IconEditCircle","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","validationSchema","yup","shape","required","lessonId","when","is","then","otherwise","partNo","LessonAddModal","isOpen","onClose","onCloseEmpty","fetchedOptions","setFetchedOptions","_useState4","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","subjectActions","typeOfVideosActions","useSelector","state","data","fetchData","typeOfVideos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","headers","sent","t0","stop","_x","apply","arguments","fetchPart","_callee2","cb","_context2","length","_x2","_x3","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","initialValues","partName","liveVideoId","animationVideoId","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","FormControl","InputLabel","Select","labelId","value","label","error","Boolean","helperText","onChange","event","target","MenuItem","FormHelperText","disabled","option","TextField","focused","DialogActions","Button","LessonEditModal","editModalData","seriesEdit","standardEdit","subjectEdit","defaultValue","videoId","LessonViewModal","LessonVideoModal","VideoPlayer","LessonDeleteModal","createTheme","primary","main","secondary","useTheme","setIsOpen","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","lessonActions","filteredData","useMemo","trim","toLowerCase","includes","searchInputRef","React","onCloseEmptyModal","onCloseAddModal","onCloseEditModal","onCloseDeleteModal","_callee3","_context3","searchTable","useCallback","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","borderRadius","p","ml","flex","placeholder","inputProps","autoFocus","prevSearch","IconSearch","IconPlus","Divider","val","ref","useRef","plyr","play","videoSrc","sources","src","provider","Plyr","source","options","autoplay","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","props","styles","root","tablelvl2","defaultComponent","inProps","useThemeProps","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}