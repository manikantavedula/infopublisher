{"version":3,"file":"static/js/171.d3534775.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled.js","layouts/ems/index.js"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import React, { useState } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, Drawer, Button, Paper, Typography, IconButton, useMediaQuery } from \"@mui/material\";\r\nimport { CheckCircle, Error, Flag } from \"@mui/icons-material\";\r\nimport { questionsDrawerWidth } from \"store/constant\";\r\nimport { SET_MENU } from \"store/actions\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// third-party\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst FlagIcon = () => {\r\n  return <Flag color=\"primary\" fontSize=\"small\" />;\r\n};\r\n\r\nconst AttemptedIcon = () => {\r\n  return <CheckCircle color=\"primary\" fontSize=\"small\" />;\r\n};\r\n\r\nconst RootContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  margin: (theme) => theme.spacing(3),\r\n});\r\n\r\nconst NumberPanelRootContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  gap: \"15px\",\r\n  flexWrap: \"wrap\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst NumberPanelCircle = styled(\"div\")({\r\n  backgroundColor: \"white\",\r\n  border: \"1px solid black\",\r\n  borderRadius: \"50%\",\r\n  width: \"35px\",\r\n  height: \"35px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst questionsData = [\r\n  {\r\n    id: 1,\r\n    question: \"What is the capital of France?\",\r\n    options: [\"London\", \"Paris\", \"Berlin\", \"Rome\"],\r\n    answer: \"Paris\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Who painted the Mona Lisa?\",\r\n    options: [\"Leonardo da Vinci\", \"Vincent van Gogh\", \"Pablo Picasso\", \"Michelangelo\"],\r\n    answer: \"Leonardo da Vinci\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"What is the symbol for potassium?\",\r\n    options: [\"K\", \"P\", \"Pt\", \"Ka\"],\r\n    answer: \"K\",\r\n  },\r\n];\r\n\r\nconst ExaminationManagementSystem = () => {\r\n  const leftDrawerOpened = useSelector((state) => state.customization.opened);\r\n  const dispatch = useDispatch();\r\n  const handleLeftDrawerToggle = () => {\r\n    dispatch({ type: SET_MENU, opened: !leftDrawerOpened });\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\r\n  const [flaggedQuestions, setFlaggedQuestions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState(Array(questionsData.length).fill(null));\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const currentQuestion = questionsData[currentQuestionIndex];\r\n  const isLastQuestion = currentQuestionIndex === questionsData.length - 1;\r\n\r\n  const matchUpMd = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  useEffect(() => {\r\n    handleLeftDrawerToggle();\r\n  }, []);\r\n\r\n  const container = window !== undefined ? () => window.document.body + 260 : undefined;\r\n\r\n  const drawer = (\r\n    <>\r\n      <BrowserView>\r\n        <PerfectScrollbar\r\n          component=\"div\"\r\n          style={{\r\n            height: !matchUpMd ? \"calc(100vh - 56px)\" : \"calc(100vh - 88px)\",\r\n            paddingLeft: \"16px\",\r\n            paddingRight: \"16px\",\r\n          }}\r\n        >\r\n          <NumberPanelRootContainer>\r\n            {Array.from(Array(50).keys()).map((number) => (\r\n              <NumberPanelCircle key={number}>{number + 1}</NumberPanelCircle>\r\n            ))}\r\n          </NumberPanelRootContainer>\r\n        </PerfectScrollbar>\r\n      </BrowserView>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <Box\r\n        component=\"nav\"\r\n        sx={{ flexShrink: { md: 0 }, width: matchUpMd ? questionsDrawerWidth : \"auto\" }}\r\n        aria-label=\"mailbox folders\"\r\n      >\r\n        <Drawer\r\n          container={container}\r\n          variant={matchUpMd ? \"persistent\" : \"temporary\"}\r\n          anchor=\"left\"\r\n          sx={{\r\n            \"& .MuiDrawer-paper\": {\r\n              width: questionsDrawerWidth,\r\n              background: theme.palette.background.default,\r\n              color: theme.palette.text.primary,\r\n              borderRight: \"none\",\r\n              [theme.breakpoints.up(\"md\")]: {\r\n                top: \"88px\",\r\n              },\r\n            },\r\n          }}\r\n          ModalProps={{ keepMounted: true }}\r\n          color=\"inherit\"\r\n          open={true}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExaminationManagementSystem;\r\n"],"names":["createStyled","NumberPanelRootContainer","styled","display","flexDirection","alignItems","margin","theme","spacing","justifyContent","gap","flexWrap","NumberPanelCircle","backgroundColor","border","borderRadius","width","height","questionsData","id","question","options","answer","leftDrawerOpened","useSelector","state","customization","opened","dispatch","useDispatch","useTheme","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","Array","length","fill","_useState8","_useState9","_useState10","matchUpMd","useMediaQuery","breakpoints","up","useEffect","type","SET_MENU","container","undefined","window","document","body","drawer","_jsx","_Fragment","children","BrowserView","PerfectScrollbar","component","style","paddingLeft","paddingRight","from","keys","map","number","Box","sx","flexShrink","md","questionsDrawerWidth","Drawer","variant","anchor","_defineProperty","background","palette","default","color","text","primary","borderRight","top","ModalProps","keepMounted","open"],"sourceRoot":""}