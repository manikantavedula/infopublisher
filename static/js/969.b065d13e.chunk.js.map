{"version":3,"file":"static/js/969.b065d13e.chunk.js","mappings":"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","sources":["layouts/onlineclasses/onlineClassesTableNew.js","layouts/onlineclasses/modals/onlineClassesAddModal.js","layouts/onlineclasses/modals/onlineClassesEditModal.js","layouts/onlineclasses/modals/onlineClassesDeleteModal.js","layouts/onlineclasses/modals/onlineClassesViewModal.js","layouts/onlineclasses/modals/onlineClassesVideoModal.js","layouts/onlineclasses/index.js","layouts/videoplayer/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction OnlineClassesModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function OnlineClassesTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"onlineClasses\", accessor: \"onlineClasses\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        onlineClasses: <OnlineClassesModule name={`${v.name}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">OnlineClasses</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.onlineClasses}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.onlineClasses}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[2].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { onlineClassesActions } from \"slices/onlineClasses\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/onlineClasses/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/onlineClasses/dataByOnlineClassesId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: \"\",\r\n    standard: \"\",\r\n    subject: \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    onlineClasses: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    onlineClassesId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add OnlineClasses\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">OnlineClasses</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-onlineClasses\"\r\n                            value={values.onlineClassesId}\r\n                            label=\"OnlineClasses\"\r\n                            error={touched.onlineClassesId && Boolean(errors.onlineClassesId)}\r\n                            helperText={touched.onlineClassesId && errors.onlineClassesId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"onlineClassesId\", event.target.value);\r\n                              fetchPart({ onlineClassesId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.onlineClassesId && touched.onlineClassesId\r\n                              ? errors.onlineClassesId\r\n                              : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                          helperText={touched.onlineClasses && errors.onlineClasses}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"onlineClasses\"\r\n                          label=\"OnlineClasses\"\r\n                          variant=\"outlined\"\r\n                          error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                          helperText={touched.onlineClasses && errors.onlineClasses}\r\n                          value={values.onlineClasses}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"onlineClasses\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          focused={values.onlineClasses !== \"\"}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        name=\"onlineClasses\"\r\n                        label=\"OnlineClasses\"\r\n                        variant=\"outlined\"\r\n                        error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                        helperText={touched.onlineClasses && errors.onlineClasses}\r\n                        value={values.onlineClasses}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"onlineClasses\", event.target.value);\r\n                        }}\r\n                        fullWidth\r\n                        focused={values.onlineClasses !== \"\"}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesAddModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log({\r\n      ...values,\r\n    });\r\n    onClose({\r\n      ...values,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit OnlineClasses\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"onlineClasses\", event.target.value);\r\n                      }}\r\n                      focused\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesEditModal;\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesDeleteModal;\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function OnlineClassesVideoModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (Part ${editModalData.partNo}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <VideoPlayer videoId={editModalData.liveVideoId} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesVideoModal;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Button,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Grid,\r\n  Card,\r\n  Backdrop,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useCallback, useMemo, useEffect, useLayoutEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { commonActions } from \"slices/common\";\r\nimport { onlineClassesActions } from \"slices/onlineClasses\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport OnlineClassesTableNew from \"./onlineClassesTableNew\";\r\nimport { OnlineClassesAddModal } from \"./modals/onlineClassesAddModal\";\r\nimport { OnlineClassesEditModal } from \"./modals/onlineClassesEditModal\";\r\nimport { OnlineClassesDeleteModal } from \"./modals/onlineClassesDeleteModal\";\r\nimport { OnlineClassesViewModal } from \"./modals/onlineClassesViewModal\";\r\nimport { OnlineClassesVideoModal } from \"./modals/onlineClassesVideoModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RefreshToken } from \"layouts/callback\";\r\n\r\n// Create a custom theme with the desired color\r\nconst themes = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nfunction OnlineClasses() {\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const navigate = useNavigate;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(lessonActions.getAll());\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(onlineClassesActions.getAll());\r\n\r\n    dispatch(commonActions.getUserRole());\r\n\r\n    const storedAccessToken = localStorage.getItem(\"access_token\");\r\n    const storedRefreshToken = localStorage.getItem(\"refresh_token\");\r\n    const storedUserInfoResponse = localStorage.getItem(\"userinfo_response\");\r\n    const expirationTimestamp = localStorage.getItem(\"expiration_timestamp\");\r\n\r\n    if (\r\n      storedAccessToken &&\r\n      storedRefreshToken &&\r\n      expirationTimestamp &&\r\n      storedUserInfoResponse &&\r\n      Date.now() < expirationTimestamp\r\n    ) {\r\n      console.log(\"Auth is working fine.\");\r\n    } else if (expirationTimestamp && Date.now() > expirationTimestamp && storedRefreshToken) {\r\n      console.log(\"refresh token for main layout\");\r\n      let status;\r\n\r\n      (async () => {\r\n        status = await RefreshToken();\r\n\r\n        await dispatch(commonActions.storeTokens());\r\n\r\n        await console.log(\"refresh token status\", status);\r\n\r\n        if (status === \"error\") {\r\n          localStorage.removeItem(\"access_token\");\r\n          localStorage.removeItem(\"refresh_token\");\r\n          localStorage.removeItem(\"expiration_timestamp\");\r\n          localStorage.removeItem(\"userinfo_response\");\r\n\r\n          const storedAccessToken = localStorage.getItem(\"access_token\");\r\n          const storedRefreshToken = localStorage.getItem(\"refresh_token\");\r\n          const expirationTimestamp = localStorage.getItem(\"expiration_timestamp\");\r\n          const userInfoResponse = localStorage.getItem(\"userinfo_response\");\r\n\r\n          if (\r\n            !storedAccessToken ||\r\n            !storedRefreshToken ||\r\n            !expirationTimestamp ||\r\n            !userInfoResponse ||\r\n            !(Date.now() < expirationTimestamp)\r\n          ) {\r\n            navigate(\"/\");\r\n          }\r\n        }\r\n      })();\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const lesson = useSelector((state) => state.lesson.data);\r\n  const series = useSelector((state) => state.series.data);\r\n  const onlineClasses = useSelector((state) => state.onlineClasses.data);\r\n\r\n  useEffect(() => {\r\n    console.log(onlineClasses);\r\n  }, [onlineClasses]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return lesson;\r\n    }\r\n\r\n    const filteredOnlineClasses = lesson.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n    });\r\n\r\n    return filteredOnlineClasses;\r\n  }, [searchQuery, lesson]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenViewModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n  const [expandedStandard, setExpandedStandard] = useState(false);\r\n  const [expandedSubject, setExpandedSubject] = useState(false);\r\n  const [expandedLesson, setExpandedLesson] = useState(false);\r\n  const [expandedParts, setExpandedParts] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n    setExpandedStandard(false);\r\n    setExpandedSubject(false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccStandard = (panel) => (event, newExpanded) => {\r\n    setExpandedStandard(newExpanded ? panel : false);\r\n    setExpandedSubject(false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccSubject = (panel) => (event, newExpanded) => {\r\n    setExpandedSubject(newExpanded ? panel : false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccLesson = (panel) => (event, newExpanded) => {\r\n    setExpandedLesson(newExpanded ? panel : false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccParts = (panel) => (event, newExpanded) => {\r\n    setExpandedParts(newExpanded ? panel : false);\r\n  };\r\n\r\n  function extractVideoId(url) {\r\n    let videoId = null;\r\n\r\n    // Match the video ID using regular expressions\r\n    const match = url.match(\r\n      /(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([^&?/]+)/\r\n    );\r\n\r\n    if (match) {\r\n      videoId = match[1];\r\n    }\r\n\r\n    return videoId;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      {isOpen && whichModal === \"video\" ? (\r\n        <OnlineClassesVideoModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Box sx={{ bgcolor: \"background.paper\", width: \"100%\" }}>\r\n        {onlineClasses &&\r\n          onlineClasses.length > 0 &&\r\n          onlineClasses.map((v, i) => (\r\n            <Accordion\r\n              expanded={expandedSeries === `panelseries${i + 1}`}\r\n              onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n              key={`panelseries${i + 1}`}\r\n            >\r\n              <AccordionSummary\r\n                aria-controls={`panelseries${i + 1}d-content`}\r\n                id={`panelseries${i + 1}d-header`}\r\n              >\r\n                <Typography>{v.name}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                {v.data.length > 0 &&\r\n                  v.data.map((w, j) => (\r\n                    <Accordion\r\n                      expanded={expandedStandard === `panelstandard${i + j + 1}`}\r\n                      onChange={handleChangeAccStandard(`panelstandard${i + j + 1}`)}\r\n                      key={`panelstandard${i + j + 1}`}\r\n                    >\r\n                      <AccordionSummary\r\n                        aria-controls={`panelstandard${i + j + 1}d-content`}\r\n                        id={`panelstandard${i + j + 1}d-header`}\r\n                      >\r\n                        <Typography>{w.name}</Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        {w.data.length > 0 &&\r\n                          w.data.map((x, k) => (\r\n                            <Accordion\r\n                              expanded={expandedSubject === `panelsubject${i + j + k + 1}`}\r\n                              onChange={handleChangeAccSubject(`panelsubject${i + j + k + 1}`)}\r\n                              key={`panelsubject${i + j + k + 1}`}\r\n                            >\r\n                              <AccordionSummary\r\n                                aria-controls={`panelsubject${i + j + k + 1}d-content`}\r\n                                id={`panelsubject${i + j + k + 1}d-header`}\r\n                              >\r\n                                <Typography>{x.name}</Typography>\r\n                              </AccordionSummary>\r\n                              <AccordionDetails>\r\n                                {x.data.length > 0 &&\r\n                                  x.data.map((y, l) => (\r\n                                    <Accordion\r\n                                      expanded={\r\n                                        expandedLesson === `panellesson${i + j + k + l + 1}`\r\n                                      }\r\n                                      onChange={handleChangeAccLesson(\r\n                                        `panellesson${i + j + k + l + 1}`\r\n                                      )}\r\n                                      key={`panellesson${i + j + k + l + 1}`}\r\n                                    >\r\n                                      <AccordionSummary\r\n                                        aria-controls={`panellesson${i + j + k + l + 1}d-content`}\r\n                                        id={`panellesson${i + j + k + l + 1}d-header`}\r\n                                      >\r\n                                        <Typography>{y.name}</Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        {y.parts.length > 0 &&\r\n                                          y.parts.map((z, m) => (\r\n                                            <Accordion\r\n                                              expanded={\r\n                                                expandedParts ===\r\n                                                `panelparts${i + j + k + l + m + 1}`\r\n                                              }\r\n                                              onChange={handleChangeAccParts(\r\n                                                `panelparts${i + j + k + l + m + 1}`\r\n                                              )}\r\n                                              key={`panelparts${i + j + k + l + m + 1}`}\r\n                                            >\r\n                                              <AccordionSummary\r\n                                                aria-controls={`panelparts${\r\n                                                  i + j + k + l + m + 1\r\n                                                }d-content`}\r\n                                                id={`panelparts${i + j + k + l + m + 1}d-header`}\r\n                                              >\r\n                                                <Typography>{z.name}</Typography>\r\n                                              </AccordionSummary>\r\n                                              <AccordionDetails>\r\n                                                {!z.liveVideoId ? null : (\r\n                                                  <Tooltip\r\n                                                    title=\"Live Video\"\r\n                                                    placement=\"top\"\r\n                                                    className={z.liveVideoId}\r\n                                                  >\r\n                                                    <IconButton\r\n                                                      color=\"primary\"\r\n                                                      type=\"button\"\r\n                                                      onClick={() =>\r\n                                                        onOpenVideoModal({\r\n                                                          ...v,\r\n                                                          videoType: \"live\",\r\n                                                          lessonIdName: y.name,\r\n                                                          name: z.name,\r\n                                                          partNo: z.partNo,\r\n                                                          liveVideoId: extractVideoId(\r\n                                                            z.liveVideoId\r\n                                                          ),\r\n                                                        })\r\n                                                      }\r\n                                                    >\r\n                                                      <IconVideo size=\"24px\" />\r\n                                                    </IconButton>\r\n                                                  </Tooltip>\r\n                                                )}\r\n                                              </AccordionDetails>\r\n                                            </Accordion>\r\n                                          ))}\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                  ))}\r\n                              </AccordionDetails>\r\n                            </Accordion>\r\n                          ))}\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  ))}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default OnlineClasses;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"names":["styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","fontSize","TableRow","_ref4","palette","action","hover","border","yup","shape","series","required","standard","subject","type","onlineClasses","OnlineClassesVideoModal","_ref","isOpen","onCloseEmpty","editModalData","_jsxs","Dialog","open","fullWidth","children","_jsx","DialogTitle","className","Box","display","justifyContent","alignItems","lessonIdName","partNo","name","IconButton","onClick","Close","DialogContent","VideoPlayer","videoId","liveVideoId","createTheme","primary","main","secondary","Accordion","props","MuiAccordion","_objectSpread","disableGutters","elevation","square","divider","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","sx","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","borderTop","useTheme","_useState","useState","_useState2","_slicedToArray","navigate","useNavigate","_useState3","_useState4","setIsOpen","_useState5","_useState6","_useState7","_useState8","whichModal","setWhichModal","_useState9","_useState10","setEditModalData","_useState11","_useState12","searchQuery","setSearchQuery","_useState13","_useState14","dispatch","useDispatch","useLayoutEffect","lessonActions","seriesActions","onlineClassesActions","commonActions","storedAccessToken","localStorage","getItem","storedRefreshToken","storedUserInfoResponse","expirationTimestamp","Date","now","console","log","status","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_storedAccessToken","_storedRefreshToken","_expirationTimestamp","userInfoResponse","wrap","_context","prev","next","RefreshToken","sent","removeItem","stop","lesson","useSelector","state","data","useEffect","useMemo","trim","filter","item","toLowerCase","includes","searchInputRef","React","_useState15","useCallback","event","_searchInputRef$curre","target","value","current","focus","_useState16","expandedSeries","setExpandedSeries","_useState17","_useState18","expandedStandard","setExpandedStandard","_useState19","_useState20","expandedSubject","setExpandedSubject","_useState21","_useState22","expandedLesson","setExpandedLesson","_useState23","_useState24","expandedParts","setExpandedParts","handleChangeAccStandard","panel","newExpanded","handleChangeAccSubject","handleChangeAccLesson","handleChangeAccParts","extractVideoId","url","match","ThemeProvider","bgcolor","width","length","map","v","i","expanded","onChange","id","Typography","w","j","x","k","y","l","parts","z","m","Tooltip","title","placement","val","videoType","IconVideo","size","ref","useRef","plyr","play","videoSrc","sources","src","provider","Plyr","source","options","autoplay"],"sourceRoot":""}