{"version":3,"file":"static/js/656.d0b19d26.chunk.js","mappings":"4fAyBA,SAASA,EAAYC,GAAY,IAATC,EAAID,EAAJC,KACtB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,QAAQ,KAAKC,SAAU,OAAQC,WAAY,IAAIC,SACxEP,GAGP,CAEA,IAAMQ,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkB,SAAAE,GAAA,IAAAC,EAAQD,EAALE,MAAK,OAAAD,EAAA,IAAAE,EAAAA,EAAAA,GAAAF,EAAA,KAAAG,OAC1CC,EAAAA,EAAAA,MAA0B,CAC9BC,gBAAiB,kBACjBC,MAAO,OACPC,QAAS,UACVL,EAAAA,EAAAA,GAAAF,EAAC,KAADG,OACKC,EAAAA,EAAAA,MAA0B,CAC9BX,SAAU,KACXO,CAAA,IAGGQ,GAAiBX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,EAAiB,SAAAa,GAAQ,MAAQ,CACtD,qBAAsB,CACpBL,gBAF4CK,EAALT,MAEhBU,QAAQC,OAAOC,OAGxC,mCAAoC,CAClCC,OAAQ,GAEX,IAEc,SAASC,EAAcC,GAMlC,IALFC,EAAYD,EAAZC,aACAC,EAAeF,EAAfE,gBACAC,EAAiBH,EAAjBG,kBACAC,EAAeJ,EAAfI,gBACAC,EAAgBL,EAAhBK,iBAEAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,GAAkBL,EAAAA,EAAAA,UAAS,CACzB,CAAEM,OAAQ,OAAQC,SAAU,MAAOC,MAAO,QAC1C,CAAEF,OAAQ,SAAUC,SAAU,SAAUC,MAAO,QAC/C,CAAEF,OAAQ,cAAeC,SAAU,aAAcC,MAAO,QACxD,CAAEF,OAAQ,YAAaC,SAAU,aAAcC,MAAO,QACtD,CAAEF,OAAQ,UAAWC,SAAU,SAAUC,MAAO,QAChD,CAAEF,OAAQ,SAAUC,SAAU,SAAUC,MAAO,WAN1CC,GAOLP,EAAAA,EAAAA,GAAAG,EAAA,GAPY,GAyHd,OAhHAK,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIlB,EACd,GAAG,CAACA,KAEJgB,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIT,EACd,GAAG,CAACA,KAEJO,EAAAA,EAAAA,YAAU,WACR,IAAIG,EAAM,GACVF,QAAQC,IAAIlB,GAERA,GAAiC,OAAjBA,IAClBmB,EAAMnB,EAAaoB,KAAI,SAACC,EAAGC,GAAC,MAAM,CAChCC,KACEnD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgB,MAAM,OAAOd,QAAQ,KAAKC,SAAU,OAAQC,WAAY,IAAIC,SACrE4C,EAAI,IAGTE,QAAQpD,EAAAA,EAAAA,KAACH,EAAY,CAACE,KAAI,GAAAe,OAAKmC,EAAElD,QACjCsD,YAAYrD,EAAAA,EAAAA,KAACH,EAAY,CAACE,KAAI,GAAAe,OAAKmC,EAAEK,QACrCC,QAAQvD,EAAAA,EAAAA,KAACH,EAAY,CAACE,KAAI,GAAAe,OAAmB,OAAdmC,EAAEO,QAAmB,IAAMP,EAAEO,WAC5DC,YACEzD,EAAAA,EAAAA,KAACH,EAAY,CACXE,KAAI,GAAAe,OACS,SAAXmC,EAAEK,KACE,IACA1B,EAAa8B,QACX,SAACC,GAAC,OACAA,EAAEC,IAAMX,EAAEY,WACVF,EAAEG,SAAWb,EAAEa,QACfH,EAAEI,WAAad,EAAEc,UACjBJ,EAAEK,UAAYf,EAAEe,OAAO,IACzB,GAAGjE,QAIfwB,QACE0C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5D,SAAA,CACc,SAAX2C,EAAEK,MAAuC,OAApBL,EAAEkB,eACtBnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,aAAaC,UAAU,MAAKhE,UACzCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CACTtD,MAAM,UACNqC,KAAK,SACLkB,QAAS,kBACPxC,GAAgByC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbxB,GAAC,IACJyB,UAAW,OACXC,aAAc/C,EAAa8B,QACzB,SAACC,GAAC,OACAA,EAAEC,IAAMX,EAAEY,WACVF,EAAEG,SAAWb,EAAEa,QACfH,EAAEI,WAAad,EAAEc,UACjBJ,EAAEK,UAAYf,EAAEe,OAAO,IACzB,GAAGjE,OACL,EACHO,UAEDN,EAAAA,EAAAA,KAAC4E,EAAAA,IAAS,CAACC,KAAK,aAGlB,KAEQ,SAAX5B,EAAEK,MAA4C,OAAzBL,EAAE6B,oBACtB9E,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,kBAAkBC,UAAU,MAAKhE,UAC9CN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CACTtD,MAAM,UACNqC,KAAK,SACLkB,QAAS,kBACPxC,GAAgByC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbxB,GAAC,IACJyB,UAAW,YACXC,aAAc/C,EAAa8B,QACzB,SAACC,GAAC,OACAA,EAAEC,IAAMX,EAAEY,WACVF,EAAEG,SAAWb,EAAEa,QACfH,EAAEI,WAAad,EAAEc,UACjBJ,EAAEK,UAAYf,EAAEe,OAAO,IACzB,GAAGjE,OACL,EACHO,UAEDN,EAAAA,EAAAA,KAAC+E,EAAAA,IAAa,CAACF,KAAK,aAGtB,MAEJ7E,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,OAAOC,UAAU,MAAKhE,UACnCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACtD,MAAM,UAAUqC,KAAK,SAASkB,QAAS,kBAAMzC,EAAgBkB,EAAE,EAAC3C,UAC1EN,EAAAA,EAAAA,KAACgF,EAAAA,IAAO,CAACH,KAAK,cAIlB7E,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,OAAOC,UAAU,MAAKhE,UACnCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACtD,MAAM,UAAUqC,KAAK,SAASkB,QAAS,kBAAM3C,EAAgBoB,EAAE,EAAC3C,UAC1EN,EAAAA,EAAAA,KAACiF,EAAAA,IAAc,CAACJ,KAAK,cAIzB7E,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,SAASC,UAAU,MAAKhE,UACrCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACtD,MAAM,UAAUqC,KAAK,SAASkB,QAAS,kBAAM1C,EAAkBmB,EAAE,EAAC3C,UAC5EN,EAAAA,EAAAA,KAACkF,EAAAA,IAAS,CAACL,KAAK,gBAKzB,KAGHvC,EAAQS,EACV,GAAG,CAACnB,KAGF5B,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CAAA7E,UACb2D,EAAAA,EAAAA,MAACmB,EAAAA,EAAK,CAACC,GAAI,CAAEC,SAAU,IAAKC,UAAW,QAAUV,KAAK,QAAQ,aAAW,mBAAkBvE,SAAA,EACzFN,EAAAA,EAAAA,KAACwF,EAAAA,EAAS,CAAAlF,UACR2D,EAAAA,EAAAA,MAAC7C,EAAAA,EAAQ,CAAAd,SAAA,EACPN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,OAAMpC,SAAC,UAC9BN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,OAAMpC,SAAC,YAC9BN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,OAAMpC,SAAC,kBAC9BN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,OAAMpC,SAAC,aAC9BN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,OAAMpC,SAAC,eAE9BN,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAM,QAAOpC,SAAC,iBAGnCN,EAAAA,EAAAA,KAACyF,EAAAA,EAAS,CAAAnF,SACP+B,GACCA,EAAKW,KAAI,SAACD,GAAG,OACXkB,EAAAA,EAAAA,MAAC9C,EAAc,CAAAb,SAAA,EACbN,EAAAA,EAAAA,KAACO,EAAe,CAACmF,UAAU,KAAKC,MAAM,MAAMjD,MAAOC,EAAQ,GAAGD,MAAMpC,SACjEyC,EAAII,OAEPnD,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAOC,EAAQ,GAAGD,MAAMpC,SAAEyC,EAAIK,UAC/CpD,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAOC,EAAQ,GAAGD,MAAMpC,SAAEyC,EAAIM,cAC/CrD,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAOC,EAAQ,GAAGD,MAAMpC,SAAEyC,EAAIQ,UAC/CvD,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAOC,EAAQ,GAAGD,MAAMpC,SAAEyC,EAAIU,cAE/CzD,EAAAA,EAAAA,KAACO,EAAe,CAACmC,MAAOC,EAAQ,GAAGD,MAAMpC,SAAEyC,EAAIxB,WAT5BwB,EAAIK,OAUR,UAM/B,C,mKCzLMwC,GAAmBC,EAAAA,KAAaC,MAAM,CAC1ChC,OAAQ+B,EAAAA,KAAaE,SAAS,2BAC9BhC,SAAU8B,EAAAA,KAAaE,SAAS,2BAChC/B,QAAS6B,EAAAA,KAAaE,SAAS,2BAC/BzC,KAAMuC,EAAAA,KAAaE,SAAS,2BAE5B3C,OAAQyC,EAAAA,KAAaE,SAAS,sBAC9BC,SAAUH,EAAAA,KAAaI,KAAK,OAAQ,CAClCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,yBAC5BK,UAAWP,EAAAA,OAEbQ,OAAQR,EAAAA,KAAaI,KAAK,OAAQ,CAChCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,2BAC5BK,UAAWP,EAAAA,SAIR,SAASS,GAAcxG,GAK1B,IAJFyG,EAAMzG,EAANyG,OACAC,EAAO1G,EAAP0G,QACAC,EAAY3G,EAAZ2G,aAAYC,EAAA5G,EACZ6G,eAAkBC,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBAAkBC,EAAeJ,EAAfI,gBAEpD7E,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD8E,EAAc5E,EAAA,GAAE6E,EAAiB7E,EAAA,GACxCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAG+E,GAAA7E,EAAAA,EAAAA,GAAAG,EAAA,GAElC2E,GAFOD,EAAA,GAAWA,EAAA,IAEPE,EAAAA,EAAAA,QACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,UACTJ,EAASK,EAAAA,EAAAA,UACTL,EAASM,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAM1D,GAAS2D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM5D,OAAO6D,IAAI,IACjD5D,GAAW0D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM3D,SAAS4D,IAAI,IACrD3D,GAAUyD,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM1D,QAAQ2D,IAAI,IAGnDC,IAFeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,aAAaF,IAAI,IAEpD,eAAAjH,GAAAoH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOhF,GAAC,IAAAiF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAfzF,QAAQC,IAAIG,GAAGmF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,qBAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQE,EAAAM,KAgBd7F,QAAQC,IAAIoF,EAASP,MACrBX,EAAkBkB,EAASP,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjCvF,QAAQC,IAAGsF,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,gBAzBcY,GAAA,OAAAnI,EAAAoI,MAAA,KAAAC,UAAA,MA2BTC,EAAS,eAAArI,GAAAmH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAOhG,EAAGiG,GAAE,IAAAhB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACT,OAAnBzF,QAAQC,IAAIG,EAAGiG,GAAIC,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAGMC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,2BAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQiB,EAAAT,KAgBd7F,QAAQC,IAAIoF,EAASP,MAEjBO,EAASP,KAAKyB,OAAS,EAAGF,EAAGhB,EAASP,KAAKyB,OAAS,GACnDF,EAAG,GAAGC,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAAR,GAAAQ,EAAA,SAEXtG,QAAQC,IAAGqG,EAAAR,IAAQ,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,kBAEtB,gBA3BcI,EAAAC,GAAA,OAAA3I,EAAAmI,MAAA,KAAAC,UAAA,MA6BfnG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIgB,EAAQC,EAAUC,EAChC,GAAG,CAACF,EAAQC,EAAUC,IAEtB,IAAMuF,EAAgB,CACpBzF,OAAQ8C,GAAkB,GAC1B7C,SAAU8C,GAAoB,GAC9B7C,QAAS8C,GAAmB,GAC5BxD,KAAM,OACNuE,aAAc,GACdzE,OAAQ,GACRiD,OAAQ,GACRmD,SAAU,GACVxD,SAAU,GACVyD,YAAa,GACbC,iBAAkB,IAQpB,OACEzF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAM,CAACC,KAAMrD,EAAQsD,WAAS,EAAAvJ,SAAA,EAC7BN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAW,CAACC,UAAU,+BAA8BzJ,UACnD2D,EAAAA,EAAAA,MAAC+F,EAAAA,EAAG,CAAC9J,QAAQ,OAAO+J,eAAe,gBAAgBC,WAAW,SAAQ5J,SAAA,EACpEN,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAAC9I,QAAQ,MAAMd,SAAU,GAAGE,SAAC,gBAIjCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACC,QAASiC,EAAanG,UAChCN,EAAAA,EAAAA,KAACmK,EAAAA,EAAK,YAIZnK,EAAAA,EAAAA,KAACoK,EAAAA,GAAM,CAACb,cAAeA,EAAe3D,iBAAkBA,GAAkByE,SAlB7D,SAACC,GAChBzH,QAAQC,IAAIwH,GACZ9D,EAAQ8D,EACV,EAeiGhK,SAC1F,SAAAe,GAAA,IAAGiJ,EAAMjJ,EAANiJ,OAAQC,EAAYlJ,EAAZkJ,aAAcC,EAAMnJ,EAANmJ,OAAQC,EAAOpJ,EAAPoJ,QAASC,EAAarJ,EAAbqJ,cAAa,OACtDzG,EAAAA,EAAAA,MAAC0G,EAAAA,GAAI,CAACN,SAAUE,EAAajK,SAAA,EAC3BN,EAAAA,EAAAA,KAAC4K,EAAAA,EAAa,CAAAtK,UACZN,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAC9H,KAAG,EAAC+H,MAAO,CAAE5K,QAAS,OAAQ6K,cAAe,UAAWzK,UACjE2D,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SAAA,EACzBN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,qBACH6H,MAAOnB,EAAOxG,OACd4H,MAAM,SACNC,MAAOlB,EAAQ3G,QAAU8H,QAAQpB,EAAO1G,QACxC+H,WAAYpB,EAAQ3G,QAAU0G,EAAO1G,OACrCgI,SAAU,SAACC,GACTrB,EAAc,SAAUqB,EAAMC,OAAOP,OACrCf,EAAc,OAAQ,GACxB,EAAEpK,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELwD,GACCA,EAAOsF,OAAS,GAChBtF,EAAOd,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEhEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAO1G,QAAU2G,EAAQ3G,OAAS0G,EAAO1G,OAAS,WAKzD9D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,cAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,uBACH6H,MAAOnB,EAAOvG,SACd2H,MAAM,WACNC,MAAOlB,EAAQ1G,UAAY6H,QAAQpB,EAAOzG,UAC1C8H,WAAYpB,EAAQ1G,UAAYyG,EAAOzG,SACvC+H,SAAU,SAACC,GACTrB,EAAc,WAAYqB,EAAMC,OAAOP,OACvCf,EAAc,OAAQ,GACxB,EAAEpK,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyD,GACCA,EAASqF,OAAS,GAClBrF,EAASf,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAElEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOzG,UAAY0G,EAAQ1G,SAAWyG,EAAOzG,SAAW,WAK/D/D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,aAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,sBACH6H,MAAOnB,EAAOtG,QACd0H,MAAM,UACNC,MAAOlB,EAAQzG,SAAW4H,QAAQpB,EAAOxG,SACzC6H,WAAYpB,EAAQzG,SAAWwG,EAAOxG,QACtC8H,SAAU,SAACC,GACTrB,EAAc,UAAWqB,EAAMC,OAAOP,OACtCf,EAAc,OAAQ,IACtB7H,QAAQC,IAAIwH,EACd,EAAEhK,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL0D,GACCA,EAAQoF,OAAS,GACjBpF,EAAQhB,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEjEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxG,SAAWyG,EAAQzG,QAAUwG,EAAOxG,QAAU,WAK5DhE,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,UAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,mBACH6H,MAAOnB,EAAOhH,KACdoI,MAAM,OACNC,MAAOlB,EAAQnH,MAAQsI,QAAQpB,EAAOlH,MACtCuI,WAAYpB,EAAQnH,MAAQkH,EAAOlH,KACnCwI,SAAU,SAACC,GACTrB,EAAc,OAAQqB,EAAMC,OAAOP,OACnC7D,EAAU0C,GACVzH,QAAQC,IAAIwH,EACd,EACA6B,SACoB,KAAlB7B,EAAOxG,QAAqC,KAApBwG,EAAOvG,UAAsC,KAAnBuG,EAAOtG,QAC1D1D,SAAA,EAEDN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,YAENN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,UACvBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,aAEzBN,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOlH,MAAQmH,EAAQnH,KAAOkH,EAAOlH,KAAO,UAKlC,SAAhBgH,EAAOhH,MACNW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5D,SAAA,EACEN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,0BACH6H,MAAOnB,EAAOtE,SACd0F,MAAM,SACNC,MAAOlB,EAAQzE,UAAY4F,QAAQpB,EAAOxE,UAC1C6F,WAAYpB,EAAQzE,UAAYwE,EAAOxE,SACvC8F,SAAU,SAACC,GACTrB,EAAc,WAAYqB,EAAMC,OAAOP,OACvCzC,EAAU,CAAEhD,SAAU+F,EAAMC,OAAOP,QAAS,SAACpF,GAC3CqE,EAAc,SAAUrE,EAC1B,IACAxD,QAAQC,IAAIwH,EACd,EAAEhK,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyG,EAAe/D,KAAI,SAACoJ,GAAM,OACzBpM,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAiBR,MAAOW,EAAOxI,GAAGtD,SACxC8L,EAAOrM,MADKqM,EAAOxI,GAEX,QAGf5D,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxE,UAAYyE,EAAQzE,SAAWwE,EAAOxE,SAAW,WAK/DhG,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,UACL2L,MAAM,UACNvL,QAAQ,WACRwL,MAAOlB,EAAQpE,QAAUuF,QAAQpB,EAAOnE,QACxCwF,WAAYpB,EAAQpE,QAAUmE,EAAOnE,OACrCoF,MAAOnB,EAAOjE,OACdwD,WAAS,EACTsC,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,cACL2L,MAAM,gBACNvL,QAAQ,WACRwL,MAAOlB,EAAQhB,aAAemC,QAAQpB,EAAOf,aAC7CoC,WAAYpB,EAAQhB,aAAee,EAAOf,YAC1CgC,MAAOnB,EAAOb,YACdqC,SAAU,SAACC,GACTrB,EAAc,cAAeqB,EAAMC,OAAOP,MAC5C,EACA5B,WAAS,OAIb7J,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,mBACL2L,MAAM,qBACNvL,QAAQ,WACRwL,MAAOlB,EAAQf,kBAAoBkC,QAAQpB,EAAOd,kBAClDmC,WAAYpB,EAAQf,kBAAoBc,EAAOd,iBAC/C+B,MAAOnB,EAAOZ,iBACdoC,SAAU,SAACC,GACTrB,EAAc,mBAAoBqB,EAAMC,OAAOP,MACjD,EACA5B,WAAS,SAIb,MAEJ7J,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,SACL2L,MAAM,SACNvL,QAAQ,WACRwL,MAAOlB,EAAQrH,QAAUwI,QAAQpB,EAAOpH,QACxCyI,WAAYpB,EAAQrH,QAAUoH,EAAOpH,OACrCqI,MAAOnB,EAAOlH,OACd0I,SAAU,SAACC,GACTrB,EAAc,SAAUqB,EAAMC,OAAOP,MACvC,EACA5B,WAAS,EACTyC,QAA2B,KAAlBhC,EAAOlH,mBAoC1BpD,EAAAA,EAAAA,KAACuM,EAAAA,EAAa,CAAAjM,UACZN,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CAAClJ,KAAK,SAASrC,MAAM,UAASX,SAAC,eAInC,MAKjB,CAEA,IC3YMsF,GAAmBC,EAAAA,KAAaC,MAAM,CAC1ChC,OAAQ+B,EAAAA,KAAaE,SAAS,2BAC9BhC,SAAU8B,EAAAA,KAAaE,SAAS,2BAChC/B,QAAS6B,EAAAA,KAAaE,SAAS,2BAC/BzC,KAAMuC,EAAAA,KAAaE,SAAS,2BAE5B3C,OAAQyC,EAAAA,KAAaE,SAAS,sBAC9BC,SAAUH,EAAAA,KAAaI,KAAK,OAAQ,CAClCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,yBAC5BK,UAAWP,EAAAA,OAEbQ,OAAQR,EAAAA,KAAaI,KAAK,OAAQ,CAChCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,2BAC5BK,UAAWP,EAAAA,SAIR,SAAS4G,GAAe3M,GAAoD,IAAjDyG,EAAMzG,EAANyG,OAAQC,EAAO1G,EAAP0G,QAASC,EAAY3G,EAAZ2G,aAAciG,EAAa5M,EAAb4M,cAE7D3M,EASE2M,EATF3M,KACQ4M,EAQND,EARF5I,OACU8I,EAORF,EAPF3I,SACS8I,EAMPH,EANF1I,QACAV,EAKEoJ,EALFpJ,KACAE,EAIEkJ,EAJFlJ,QACAK,EAGE6I,EAHF7I,UACAM,EAEEuI,EAFFvI,cACAW,EACE4H,EADF5H,mBAGF7C,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD8E,EAAc5E,EAAA,GAAE6E,EAAiB7E,EAAA,GAElC+E,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,UACTJ,EAASK,EAAAA,EAAAA,UACTL,EAASM,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAM1D,GAAS2D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM5D,OAAO6D,IAAI,IACjD5D,GAAW0D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM3D,SAAS4D,IAAI,IACrD3D,GAAUyD,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM1D,QAAQ2D,IAAI,IAGnDC,IAFeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,aAAaF,IAAI,IAEpD,eAAAjH,GAAAoH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOhF,GAAC,IAAAiF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAfzF,QAAQC,IAAIG,GAAGmF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,qBAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQE,EAAAM,KAgBd7F,QAAQC,IAAIoF,EAASP,MACrBX,EAAkBkB,EAASP,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjCvF,QAAQC,IAAGsF,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,gBAzBcY,GAAA,OAAAnI,EAAAoI,MAAA,KAAAC,UAAA,MA2BTC,EAAS,eAAArI,GAAAmH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAOhG,EAAGiG,GAAE,IAAAhB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACT,OAAnBzF,QAAQC,IAAIG,EAAGiG,GAAIC,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAGMC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,2BAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQiB,EAAAT,KAgBd7F,QAAQC,IAAIoF,EAASP,MAEjBO,EAASP,KAAKyB,OAAS,EAAGF,EAAGhB,EAASP,KAAKyB,OAAS,GACnDF,EAAG,GAAGC,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAAR,GAAAQ,EAAA,SAEXtG,QAAQC,IAAGqG,EAAAR,IAAQ,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,kBAEtB,gBA3BcI,EAAAC,GAAA,OAAA3I,EAAAmI,MAAA,KAAAC,UAAA,MA6BfnG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIgB,EAAQC,EAAUC,EAChC,GAAG,CAACF,EAAQC,EAAUC,IAEtB,IAAMuF,EAAgB,CACpBzF,OAAQ6I,EACR5I,SAAU6I,EACV5I,QAAS6I,EACTvJ,KAAAA,EACAuE,aAAc,GACdzE,OAAQrD,EACRsG,OAAQ7C,EACRgG,SAAUzJ,EACViG,SAAUnC,EACV4F,YAAatF,EACbuF,iBAAkB5E,IAGpBsC,EAAAA,EAAAA,kBAAgB,WACD,SAAT9D,GACFsE,EAAU2B,EAEd,GAAG,IAOH,OACEtF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAM,CAACC,KAAMrD,EAAQsD,WAAS,EAAAvJ,SAAA,EAC7BN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAW,CAACC,UAAU,+BAA8BzJ,UACnD2D,EAAAA,EAAAA,MAAC+F,EAAAA,EAAG,CAAC9J,QAAQ,OAAO+J,eAAe,gBAAgBC,WAAW,SAAQ5J,SAAA,EACpEN,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAAC9I,QAAQ,MAAMd,SAAU,GAAGE,SAAC,iBAIjCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACC,QAASiC,EAAanG,UAChCN,EAAAA,EAAAA,KAACmK,EAAAA,EAAK,YAIZnK,EAAAA,EAAAA,KAACoK,EAAAA,GAAM,CAACb,cAAeA,EAAe3D,iBAAkBA,GAAkByE,SAlB7D,SAACC,GAChBzH,QAAQC,IAAIwH,GACZ9D,EAAQ8D,EACV,EAeiGhK,SAC1F,SAAAe,GAAA,IAAGiJ,EAAMjJ,EAANiJ,OAAQC,EAAYlJ,EAAZkJ,aAAcC,EAAMnJ,EAANmJ,OAAQC,EAAOpJ,EAAPoJ,QAASC,EAAarJ,EAAbqJ,cAAa,OACtDzG,EAAAA,EAAAA,MAAC0G,EAAAA,GAAI,CAACN,SAAUE,EAAajK,SAAA,EAC3BN,EAAAA,EAAAA,KAAC4K,EAAAA,EAAa,CAAAtK,UACZN,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAC9H,KAAG,EAAC+H,MAAO,CAAE5K,QAAS,OAAQ6K,cAAe,UAAWzK,UACjE2D,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SAAA,EACzBN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,qBACH6H,MAAOnB,EAAOxG,OACd4H,MAAM,SACNC,MAAOlB,EAAQ3G,QAAU8H,QAAQpB,EAAO1G,QACxC+H,WAAYpB,EAAQ3G,QAAU0G,EAAO1G,OACrCgI,SAAU,SAACC,GACTrB,EAAc,SAAUqB,EAAMC,OAAOP,MACvC,EACAqB,aAAcxC,EAAOqC,WAAWrM,SAAA,EAEhCN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELwD,GACCA,EAAOsF,OAAS,GAChBtF,EAAOd,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEhEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAO1G,QAAU2G,EAAQ3G,OAAS0G,EAAO1G,OAAS,WAKzD9D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,cAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,uBACH6H,MAAOnB,EAAOvG,SACd2H,MAAM,WACNC,MAAOlB,EAAQ1G,UAAY6H,QAAQpB,EAAOzG,UAC1C8H,WAAYpB,EAAQ1G,UAAYyG,EAAOzG,SACvC+H,SAAU,SAACC,GACTrB,EAAc,WAAYqB,EAAMC,OAAOP,MACzC,EACAqB,aAAcxC,EAAOsC,aAAatM,SAAA,EAElCN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyD,GACCA,EAASqF,OAAS,GAClBrF,EAASf,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAElEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOzG,UAAY0G,EAAQ1G,SAAWyG,EAAOzG,SAAW,WAK/D/D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,aAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,sBACH6H,MAAOnB,EAAOtG,QACd0H,MAAM,UACNC,MAAOlB,EAAQzG,SAAW4H,QAAQpB,EAAOxG,SACzC6H,WAAYpB,EAAQzG,SAAWwG,EAAOxG,QACtC8H,SAAU,SAACC,GACTrB,EAAc,UAAWqB,EAAMC,OAAOP,OACtC5I,QAAQC,IAAIwH,EACd,EACAwC,aAAcxC,EAAOuC,YAAYvM,SAAA,EAEjCN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL0D,GACCA,EAAQoF,OAAS,GACjBpF,EAAQhB,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEjEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxG,SAAWyG,EAAQzG,QAAUwG,EAAOxG,QAAU,WAK5DhE,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,UAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,mBACH6H,MAAOnB,EAAOhH,KACdoI,MAAM,OACNC,MAAOlB,EAAQnH,MAAQsI,QAAQpB,EAAOlH,MACtCuI,WAAYpB,EAAQnH,MAAQkH,EAAOlH,KACnCwI,SAAU,SAACC,GACTrB,EAAc,OAAQqB,EAAMC,OAAOP,OACnC7D,EAAU0C,GACVzH,QAAQC,IAAIwH,EACd,EACA6B,SACoB,KAAlB7B,EAAOxG,QAAqC,KAApBwG,EAAOvG,UAAsC,KAAnBuG,EAAOtG,QAE3D8I,aAAcxC,EAAOhH,KAAKhD,SAAA,EAE1BN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,YAENN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,UACvBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,aAEzBN,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOlH,MAAQmH,EAAQnH,KAAOkH,EAAOlH,KAAO,UAKlC,SAAhBgH,EAAOhH,MACNW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5D,SAAA,EACEN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,0BACH6H,MAAOnB,EAAOtE,SACd0F,MAAM,SACNC,MAAOlB,EAAQzE,UAAY4F,QAAQpB,EAAOxE,UAC1C6F,WAAYpB,EAAQzE,UAAYwE,EAAOxE,SACvC8F,SAAU,SAACC,GACTrB,EAAc,WAAYqB,EAAMC,OAAOP,OACvCzC,EAAU,CAAEhD,SAAU+F,EAAMC,OAAOP,QAAS,SAACpF,GAC3CqE,EAAc,SAAUrE,EAC1B,IACAxD,QAAQC,IAAIwH,EACd,EACAwC,aAAcxC,EAAOtE,SAAS1F,SAAA,EAE9BN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyG,EAAe/D,KAAI,SAACoJ,GAAM,OACzBpM,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAiBR,MAAOW,EAAOxI,GAAGtD,SACxC8L,EAAOrM,MADKqM,EAAOxI,GAEX,QAGf5D,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxE,UAAYyE,EAAQzE,SAAWwE,EAAOxE,SAAW,WAK/DhG,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,UACL2L,MAAM,UACNvL,QAAQ,WACRwL,MAAOlB,EAAQpE,QAAUuF,QAAQpB,EAAOnE,QACxCwF,WAAYpB,EAAQpE,QAAUmE,EAAOnE,OACrCoF,MAAOnB,EAAOjE,OACdyG,aAAcxC,EAAOjE,OACrBwD,WAAS,EACTsC,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,cACL2L,MAAM,gBACNvL,QAAQ,WACRwL,MAAOlB,EAAQhB,aAAemC,QAAQpB,EAAOf,aAC7CoC,WAAYpB,EAAQhB,aAAee,EAAOf,YAC1CgC,MAAOnB,EAAOb,YACdqC,SAAU,SAACC,GACTrB,EAAc,cAAeqB,EAAMC,OAAOP,MAC5C,EACA5B,WAAS,EACTiD,aAAcxC,EAAOb,iBAIzBzJ,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,mBACL2L,MAAM,qBACNvL,QAAQ,WACRwL,MAAOlB,EAAQf,kBAAoBkC,QAAQpB,EAAOd,kBAClDmC,WAAYpB,EAAQf,kBAAoBc,EAAOd,iBAC/C+B,MAAOnB,EAAOZ,iBACdoC,SAAU,SAACC,GACTrB,EAAc,mBAAoBqB,EAAMC,OAAOP,MACjD,EACA5B,WAAS,EACTiD,aAAcxC,EAAOZ,wBAIzB,MAEJ1J,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,SACL2L,MAAM,SACNvL,QAAQ,WACRwL,MAAOlB,EAAQrH,QAAUwI,QAAQpB,EAAOpH,QACxCyI,WAAYpB,EAAQrH,QAAUoH,EAAOpH,OACrCqI,MAAOnB,EAAOlH,OACd0I,SAAU,SAACC,GACTrB,EAAc,SAAUqB,EAAMC,OAAOP,MACvC,EACAqB,aAAcxC,EAAOvK,KACrB8J,WAAS,EACTyC,QAA2B,KAAlBhC,EAAOlH,mBAoC1BpD,EAAAA,EAAAA,KAACuM,EAAAA,EAAa,CAAAjM,UACZN,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CAAClJ,KAAK,SAASrC,MAAM,UAASX,SAAC,eAInC,MAKjB,CAEA,IC7ZMsF,GAAmBC,EAAAA,KAAaC,MAAM,CAC1ChC,OAAQ+B,EAAAA,KAAaE,SAAS,2BAC9BhC,SAAU8B,EAAAA,KAAaE,SAAS,2BAChC/B,QAAS6B,EAAAA,KAAaE,SAAS,2BAC/BzC,KAAMuC,EAAAA,KAAaE,SAAS,2BAE5B3C,OAAQyC,EAAAA,KAAaE,SAAS,sBAC9BC,SAAUH,EAAAA,KAAaI,KAAK,OAAQ,CAClCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,yBAC5BK,UAAWP,EAAAA,OAEbQ,OAAQR,EAAAA,KAAaI,KAAK,OAAQ,CAChCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,2BAC5BK,UAAWP,EAAAA,OAEbkH,QAASlH,EAAAA,KAAaI,KAAK,OAAQ,CACjCC,GAAI,OACJC,KAAMN,EAAAA,KAAaE,SAAS,wBAC5BK,UAAWP,EAAAA,SAIR,SAASmH,GAAelN,GAA2C,IAAxCyG,EAAMzG,EAANyG,OAAQE,EAAY3G,EAAZ2G,aAAciG,EAAa5M,EAAb4M,cAEpD3M,EASE2M,EATF3M,KACQ4M,EAQND,EARF5I,OACU8I,EAORF,EAPF3I,SACS8I,EAMPH,EANF1I,QACAV,EAKEoJ,EALFpJ,KACAE,EAIEkJ,EAJFlJ,QACAK,EAGE6I,EAHF7I,UACAM,EAEEuI,EAFFvI,cACAW,EACE4H,EADF5H,mBAGF7C,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD8E,EAAc5E,EAAA,GAAE6E,EAAiB7E,EAAA,GAElC+E,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,UACTJ,EAASK,EAAAA,EAAAA,UACTL,EAASM,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAM1D,GAAS2D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM5D,OAAO6D,IAAI,IACjD5D,GAAW0D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM3D,SAAS4D,IAAI,IACrD3D,GAAUyD,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM1D,QAAQ2D,IAAI,IAGnDC,IAFeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,aAAaF,IAAI,IAEpD,eAAAjH,GAAAoH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOhF,GAAC,IAAAiF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAfzF,QAAQC,IAAIG,GAAGmF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,qBAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQE,EAAAM,KAgBd7F,QAAQC,IAAIoF,EAASP,MACrBX,EAAkBkB,EAASP,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjCvF,QAAQC,IAAGsF,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,gBAzBcY,GAAA,OAAAnI,EAAAoI,MAAA,KAAAC,UAAA,OAwDfnG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIgB,EAAQC,EAAUC,EAChC,GAAG,CAACF,EAAQC,EAAUC,IAEtB,IAAMuF,EAAgB,CACpBzF,OAAQ6I,EACR5I,SAAU6I,EACV5I,QAAS6I,EACTvJ,KAAAA,EACAuE,aAAc,GACdzE,OAAQrD,EACRsG,OAAQ7C,EACRgG,SAAUzJ,EACViG,SAAUnC,EACV4F,YAAatF,EACbuF,iBAAkB5E,IAGpBsC,EAAAA,EAAAA,kBAAgB,WACD,SAAT9D,GACFsE,EAAU2B,EAEd,GAAG,IAOH,OACEtF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAM,CAACC,KAAMrD,EAAQsD,WAAS,EAAAvJ,SAAA,EAC7BN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAW,CAACC,UAAU,+BAA8BzJ,UACnD2D,EAAAA,EAAAA,MAAC+F,EAAAA,EAAG,CAAC9J,QAAQ,OAAO+J,eAAe,gBAAgBC,WAAW,SAAQ5J,SAAA,EACpEN,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAAC9I,QAAQ,MAAMd,SAAU,GAAGE,SAAC,iBAIjCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACC,QAASiC,EAAanG,UAChCN,EAAAA,EAAAA,KAACmK,EAAAA,EAAK,YAIZnK,EAAAA,EAAAA,KAACoK,EAAAA,GAAM,CAACb,cAAeA,EAAe3D,iBAAkBA,GAAiBtF,SACtE,SAAAe,GAAA,IAAGiJ,EAAMjJ,EAANiJ,OAAQE,EAAMnJ,EAANmJ,OAAQC,EAAOpJ,EAAPoJ,QAAsBpJ,EAAbqJ,cAAa,OACxC1K,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CAAArK,UACHN,EAAAA,EAAAA,KAAC4K,EAAAA,EAAa,CAAAtK,UACZN,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAC9H,KAAG,EAAC+H,MAAO,CAAE5K,QAAS,OAAQ6K,cAAe,UAAWzK,UACjE2D,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SAAA,EACzBN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,qBACH6H,MAAOnB,EAAOxG,OACd4H,MAAM,SACNC,MAAOlB,EAAQ3G,QAAU8H,QAAQpB,EAAO1G,QACxC+H,WAAYpB,EAAQ3G,QAAU0G,EAAO1G,OAIrCgJ,aAAcxC,EAAOqC,WACrBR,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELwD,GACCA,EAAOsF,OAAS,GAChBtF,EAAOd,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEhEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAO1G,QAAU2G,EAAQ3G,OAAS0G,EAAO1G,OAAS,WAKzD9D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,cAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,uBACH6H,MAAOnB,EAAOvG,SACd2H,MAAM,WACNC,MAAOlB,EAAQ1G,UAAY6H,QAAQpB,EAAOzG,UAC1C8H,WAAYpB,EAAQ1G,UAAYyG,EAAOzG,SAIvC+I,aAAcxC,EAAOsC,aACrBT,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyD,GACCA,EAASqF,OAAS,GAClBrF,EAASf,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAElEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOzG,UAAY0G,EAAQ1G,SAAWyG,EAAOzG,SAAW,WAK/D/D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,aAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,sBACH6H,MAAOnB,EAAOtG,QACd0H,MAAM,UACNC,MAAOlB,EAAQzG,SAAW4H,QAAQpB,EAAOxG,SACzC6H,WAAYpB,EAAQzG,SAAWwG,EAAOxG,QAKtC8I,aAAcxC,EAAOuC,YACrBV,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL0D,GACCA,EAAQoF,OAAS,GACjBpF,EAAQhB,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEjEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxG,SAAWyG,EAAQzG,QAAUwG,EAAOxG,QAAU,WAK5DhE,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,UAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,mBACH6H,MAAOnB,EAAOhH,KACdoI,MAAM,OACNC,MAAOlB,EAAQnH,MAAQsI,QAAQpB,EAAOlH,MACtCuI,WAAYpB,EAAQnH,MAAQkH,EAAOlH,KAMnC6I,UAAQ,EACRW,aAAcxC,EAAOhH,KAAKhD,SAAA,EAE1BN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,YAENN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,UACvBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,aAEzBN,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOlH,MAAQmH,EAAQnH,KAAOkH,EAAOlH,KAAO,UAKlC,SAAhBgH,EAAOhH,MACNW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5D,SAAA,EACEN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,0BACH6H,MAAOnB,EAAOtE,SACd0F,MAAM,SACNC,MAAOlB,EAAQzE,UAAY4F,QAAQpB,EAAOxE,UAC1C6F,WAAYpB,EAAQzE,UAAYwE,EAAOxE,SAQvC8G,aAAcxC,EAAOtE,SACrBmG,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyG,EAAe/D,KAAI,SAACoJ,GAAM,OACzBpM,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAiBR,MAAOW,EAAOxI,GAAGtD,SACxC8L,EAAOrM,MADKqM,EAAOxI,GAEX,QAGf5D,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxE,UAAYyE,EAAQzE,SAAWwE,EAAOxE,SAAW,WAK/DhG,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,UACL2L,MAAM,UACNvL,QAAQ,WACRwL,MAAOlB,EAAQpE,QAAUuF,QAAQpB,EAAOnE,QACxCwF,WAAYpB,EAAQpE,QAAUmE,EAAOnE,OACrCoF,MAAOnB,EAAOjE,OACdyG,aAAcxC,EAAOjE,OACrBwD,WAAS,EACTsC,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,cACL2L,MAAM,WACNvL,QAAQ,WACRwL,MAAOlB,EAAQhB,aAAemC,QAAQpB,EAAOf,aAC7CoC,WAAYpB,EAAQhB,aAAee,EAAOf,YAC1CgC,MAAOnB,EAAOb,YAIdI,WAAS,EACTiD,aAAcxC,EAAOb,YACrB0C,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,mBACL2L,MAAM,WACNvL,QAAQ,WACRwL,MAAOlB,EAAQf,kBAAoBkC,QAAQpB,EAAOd,kBAClDmC,WAAYpB,EAAQf,kBAAoBc,EAAOd,iBAC/C+B,MAAOnB,EAAOZ,iBAIdG,WAAS,EACTiD,aAAcxC,EAAOZ,iBACrByC,UAAQ,SAIZ,MAEJnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,SACL2L,MAAM,SACNvL,QAAQ,WACRwL,MAAOlB,EAAQrH,QAAUwI,QAAQpB,EAAOpH,QACxCyI,WAAYpB,EAAQrH,QAAUoH,EAAOpH,OACrCqI,MAAOnB,EAAOlH,OAId0J,aAAcxC,EAAOvK,KACrB8J,WAAS,EACTyC,QAA2B,KAAlBhC,EAAOlH,OAChB+I,UAAQ,cAMb,MAKjB,CAEA,I,WCnYO,SAASc,GAAgBnN,GAAsD,IAAnDyG,EAAMzG,EAANyG,OAAQE,EAAY3G,EAAZ2G,aAAciG,EAAa5M,EAAb4M,cAAehI,EAAS5E,EAAT4E,UACtE,OACET,EAAAA,EAAAA,MAAC0F,EAAAA,EAAM,CAACC,KAAMrD,EAAQsD,WAAS,EAAAvJ,SAAA,EAC7BN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAW,CAACC,UAAU,+BAA8BzJ,UACnD2D,EAAAA,EAAAA,MAAC+F,EAAAA,EAAG,CAAC9J,QAAQ,OAAO+J,eAAe,gBAAgBC,WAAW,SAAQ5J,SAAA,EACpEN,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAAC9I,QAAQ,MAAMd,SAAU,GAAGE,SAAA,GAAAQ,OAC1B4L,EAAc/H,aAAY,MAAA7D,OAAK4L,EAAcpJ,KAAI,KAAAxC,OAAI4L,EAAclJ,QAAO,QAAA1C,OAAO4L,EAAc3M,SAGrGC,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACC,QAASiC,EAAanG,UAChCN,EAAAA,EAAAA,KAACmK,EAAAA,EAAK,YAKZnK,EAAAA,EAAAA,KAAC4K,EAAAA,EAAa,CAAAtK,SACG,SAAdoE,GACC1E,EAAAA,EAAAA,KAACkN,GAAAA,EAAW,CAACH,QAASL,EAAcvI,iBAEpCnE,EAAAA,EAAAA,KAACkN,GAAAA,EAAW,CAACH,QAASL,EAAc5H,yBAK9C,CCzBO,SAASqI,GAAiBrN,GAAoD,IAAjDyG,EAAMzG,EAANyG,OAAQC,EAAO1G,EAAP0G,QAASC,EAAY3G,EAAZ2G,aAAciG,EAAa5M,EAAb4M,cAE/D3M,EASE2M,EATF3M,KACQ4M,EAQND,EARF5I,OACU8I,EAORF,EAPF3I,SACS8I,EAMPH,EANF1I,QACAV,EAKEoJ,EALFpJ,KACAE,EAIEkJ,EAJFlJ,QACAK,EAGE6I,EAHF7I,UACAM,EAEEuI,EAFFvI,cACAW,EACE4H,EADF5H,mBAGF7C,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD8E,EAAc5E,EAAA,GAAE6E,EAAiB7E,EAAA,GAElC+E,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,UACTJ,EAASK,EAAAA,EAAAA,UACTL,EAASM,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAM1D,GAAS2D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM5D,OAAO6D,IAAI,IACjD5D,GAAW0D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM3D,SAAS4D,IAAI,IACrD3D,GAAUyD,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM1D,QAAQ2D,IAAI,IAGnDC,IAFeH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,aAAaF,IAAI,IAEpD,eAAAjH,GAAAoH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOhF,GAAC,IAAAiF,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAfzF,QAAQC,IAAIG,GAAGmF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,qBAAA/D,EAAAA,EAAAA,GAAA,GAE3BxB,GAEL,CACEwF,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQE,EAAAM,KAgBd7F,QAAQC,IAAIoF,EAASP,MACrBX,EAAkBkB,EAASP,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjCvF,QAAQC,IAAGsF,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,gBAzBcY,GAAA,OAAAnI,EAAAoI,MAAA,KAAAC,UAAA,OAwDfnG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIgB,EAAQC,EAAUC,EAChC,GAAG,CAACF,EAAQC,EAAUC,IAEtB,IAAMuF,EAAgB,CACpBzF,OAAQ6I,EACR5I,SAAU6I,EACV5I,QAAS6I,EACTvJ,KAAAA,EACAuE,aAAc,GACdzE,OAAQrD,EACRsG,OAAQ7C,EACRgG,SAAUzJ,EACViG,SAAUnC,EACV4F,YAAatF,EACbuF,iBAAkB5E,IAGpBsC,EAAAA,EAAAA,kBAAgB,WACD,SAAT9D,GACFsE,EAAU2B,EAEd,GAAG,IAOH,OACEtF,EAAAA,EAAAA,MAAC0F,EAAAA,EAAM,CAACC,KAAMrD,EAAQsD,WAAS,EAAAvJ,SAAA,EAC7BN,EAAAA,EAAAA,KAAC8J,EAAAA,EAAW,CAACC,UAAU,+BAA8BzJ,UACnD2D,EAAAA,EAAAA,MAAC+F,EAAAA,EAAG,CAAC9J,QAAQ,OAAO+J,eAAe,gBAAgBC,WAAW,SAAQ5J,SAAA,EACpEN,EAAAA,EAAAA,KAACgK,EAAAA,EAAG,CAAC9I,QAAQ,MAAMd,SAAU,GAAGE,SAAC,oBAIjCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACC,QAASiC,EAAanG,UAChCN,EAAAA,EAAAA,KAACmK,EAAAA,EAAK,YAIZnK,EAAAA,EAAAA,KAACoK,EAAAA,GAAM,CAACb,cAAeA,EAAec,SAlBzB,SAACC,GAChBzH,QAAQC,IAAIwH,GACZ9D,EAAQ8D,EACV,EAe6DhK,SACtD,SAAAe,GAAA,IAAGiJ,EAAMjJ,EAANiJ,OAAQC,EAAYlJ,EAAZkJ,aAAcC,EAAMnJ,EAANmJ,OAAQC,EAAOpJ,EAAPoJ,QAAsBpJ,EAAbqJ,cAAa,OACtDzG,EAAAA,EAAAA,MAAC0G,EAAAA,GAAI,CAACN,SAAUE,EAAajK,SAAA,EAC3BN,EAAAA,EAAAA,KAAC4K,EAAAA,EAAa,CAAAtK,UACZN,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAC9H,KAAG,EAAC+H,MAAO,CAAE5K,QAAS,OAAQ6K,cAAe,UAAWzK,UACjE2D,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE5K,SAAA,EACzBN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,qBACH6H,MAAOnB,EAAOxG,OACd4H,MAAM,SACNC,MAAOlB,EAAQ3G,QAAU8H,QAAQpB,EAAO1G,QACxC+H,WAAYpB,EAAQ3G,QAAU0G,EAAO1G,OAIrCgJ,aAAcxC,EAAOqC,WACrBR,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELwD,GACCA,EAAOsF,OAAS,GAChBtF,EAAOd,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEhEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAO1G,QAAU2G,EAAQ3G,OAAS0G,EAAO1G,OAAS,WAKzD9D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,cAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,uBACH6H,MAAOnB,EAAOvG,SACd2H,MAAM,WACNC,MAAOlB,EAAQ1G,UAAY6H,QAAQpB,EAAOzG,UAC1C8H,WAAYpB,EAAQ1G,UAAYyG,EAAOzG,SAIvC+I,aAAcxC,EAAOsC,aACrBT,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyD,GACCA,EAASqF,OAAS,GAClBrF,EAASf,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAElEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOzG,UAAY0G,EAAQ1G,SAAWyG,EAAOzG,SAAW,WAK/D/D,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,aAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,sBACH6H,MAAOnB,EAAOtG,QACd0H,MAAM,UACNC,MAAOlB,EAAQzG,SAAW4H,QAAQpB,EAAOxG,SACzC6H,WAAYpB,EAAQzG,SAAWwG,EAAOxG,QAKtC8I,aAAcxC,EAAOuC,YACrBV,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL0D,GACCA,EAAQoF,OAAS,GACjBpF,EAAQhB,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,QAEjEC,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxG,SAAWyG,EAAQzG,QAAUwG,EAAOxG,QAAU,WAK5DhE,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,UAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,mBACH6H,MAAOnB,EAAOhH,KACdoI,MAAM,OACNC,MAAOlB,EAAQnH,MAAQsI,QAAQpB,EAAOlH,MACtCuI,WAAYpB,EAAQnH,MAAQkH,EAAOlH,KAMnC6I,UAAQ,EACRW,aAAcxC,EAAOhH,KAAKhD,SAAA,EAE1BN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,YAENN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,UACvBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,OAAMnL,SAAC,aAEzBN,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOlH,MAAQmH,EAAQnH,KAAOkH,EAAOlH,KAAO,UAKlC,SAAhBgH,EAAOhH,MACNW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5D,SAAA,EACEN,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACf2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,0BACH6H,MAAOnB,EAAOtE,SACd0F,MAAM,SACNC,MAAOlB,EAAQzE,UAAY4F,QAAQpB,EAAOxE,UAC1C6F,WAAYpB,EAAQzE,UAAYwE,EAAOxE,SAQvC8G,aAAcxC,EAAOtE,SACrBmG,UAAQ,EAAA7L,SAAA,EAERN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyG,EAAe/D,KAAI,SAACoJ,GAAM,OACzBpM,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAiBR,MAAOW,EAAOxI,GAAGtD,SACxC8L,EAAOrM,MADKqM,EAAOxI,GAEX,QAGf5D,EAAAA,EAAAA,KAACkM,EAAAA,EAAc,CAAC7G,GAAI,CAAEpE,MAAO,OAAQX,SAClCkK,EAAOxE,UAAYyE,EAAQzE,SAAWwE,EAAOxE,SAAW,WAK/DhG,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,UACL2L,MAAM,UACNvL,QAAQ,WACRwL,MAAOlB,EAAQpE,QAAUuF,QAAQpB,EAAOnE,QACxCwF,WAAYpB,EAAQpE,QAAUmE,EAAOnE,OACrCoF,MAAOnB,EAAOjE,OACdyG,aAAcxC,EAAOjE,OACrBwD,WAAS,EACTsC,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,cACL2L,MAAM,gBACNvL,QAAQ,WACRwL,MAAOlB,EAAQhB,aAAemC,QAAQpB,EAAOf,aAC7CoC,WAAYpB,EAAQhB,aAAee,EAAOf,YAC1CgC,MAAOnB,EAAOb,YAIdI,WAAS,EACTiD,aAAcxC,EAAOb,YACrB0C,UAAQ,OAIZnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,mBACL2L,MAAM,qBACNvL,QAAQ,WACRwL,MAAOlB,EAAQf,kBAAoBkC,QAAQpB,EAAOd,kBAClDmC,WAAYpB,EAAQf,kBAAoBc,EAAOd,iBAC/C+B,MAAOnB,EAAOZ,iBAIdG,WAAS,EACTiD,aAAcxC,EAAOZ,iBACrByC,UAAQ,SAIZ,MAEJnM,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE9K,UACfN,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRtM,KAAK,SACL2L,MAAM,SACNvL,QAAQ,WACRwL,MAAOlB,EAAQrH,QAAUwI,QAAQpB,EAAOpH,QACxCyI,WAAYpB,EAAQrH,QAAUoH,EAAOpH,OACrCqI,MAAOnB,EAAOlH,OAId0J,aAAcxC,EAAOvK,KACrB8J,WAAS,EACTyC,QAA2B,KAAlBhC,EAAOlH,OAChB+I,UAAQ,cAMlBnM,EAAAA,EAAAA,KAACuM,EAAAA,EAAa,CAAAjM,UACZN,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CAAClJ,KAAK,SAASrC,MAAM,UAASX,SAAC,eAInC,MAKjB,CAEA,I,4ECjVM8M,KAXQC,EAAAA,GAAAA,GAAY,CACxB/L,QAAS,CACPgM,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,yBAKO/M,EAAAA,EAAAA,KAAO,SAACiN,GAAK,OAC9BzN,EAAAA,EAAAA,KAAC0N,GAAAA,GAAIjJ,EAAAA,EAAAA,GAAA,CACHkJ,UAAW,EACXC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAEVL,GACJ,GAZejN,EAahB,SAAAV,GAAA,IAAGc,EAAKd,EAALc,MAAK,MAAQ,CACjB,mBAAoB,CAClBoN,aAAc,EACdC,UAAWrN,EAAMsK,QAAQ,GACzB5F,SAAU,IACVrE,MAA8B,UAAvBL,EAAMU,QAAQ4M,KAAmB,kBAAoBtN,EAAMU,QAAQ6M,KAAK,KAC/E5I,UACE,uJACF,kBAAmB,CACjBrE,QAAS,SAEX,sBAAuB,CACrB,qBAAsB,CACpBd,SAAU,GACVa,MAAOL,EAAMU,QAAQ8M,KAAKZ,UAC1Ba,YAAazN,EAAMsK,QAAQ,MAE7B,WAAY,CACVlK,iBAAiBsN,EAAAA,GAAAA,IAAM1N,EAAMU,QAAQgM,QAAQC,KAAM3M,EAAMU,QAAQC,OAAOgN,oBAI/E,KA8jBD,OA5jBA,WACE,IAAM3N,GAAQ4N,EAAAA,EAAAA,KACdvM,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCsE,EAAMpE,EAAA,GAAEsM,EAAStM,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAM+E,GAAA7E,EAAAA,EAAAA,GAAAG,EAAA,GAA1CmM,EAASzH,EAAA,GAAE0H,EAAY1H,EAAA,GAC9B2H,GAAoC1M,EAAAA,EAAAA,UAAS,IAAG2M,GAAAzM,EAAAA,EAAAA,GAAAwM,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0C9M,EAAAA,EAAAA,UAAS,CAAC,GAAE+M,GAAA7M,EAAAA,EAAAA,GAAA4M,EAAA,GAA/CtC,EAAauC,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,GAAsCjN,EAAAA,EAAAA,UAAS,IAAGkN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCrN,EAAAA,EAAAA,WAAS,GAAMsN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA4CzN,EAAAA,EAAAA,UAAS,IAAG0N,IAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAjD/I,GAAcgJ,GAAA,GAAEC,GAAiBD,GAAA,GACxCE,IAAgD5N,EAAAA,EAAAA,UAAS,IAAG6N,IAAA3N,EAAAA,EAAAA,GAAA0N,GAAA,GAArDjJ,GAAgBkJ,GAAA,GAAEC,GAAmBD,GAAA,GAC5CE,IAA8C/N,EAAAA,EAAAA,UAAS,IAAGgO,IAAA9N,EAAAA,EAAAA,GAAA6N,GAAA,GAAnDnJ,GAAeoJ,GAAA,GAAEC,GAAkBD,GAAA,GAE1CE,GAAgCC,EAAAA,SAAe,MAAKC,IAAAlO,EAAAA,EAAAA,GAAAgO,GAAA,GAA7CG,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GACtB1G,GAAOgC,QAAQ2E,IAQfrJ,IAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,GAASuJ,EAAAA,EAAAA,UACTvJ,GAASG,EAAAA,EAAAA,UACTH,GAASI,EAAAA,EAAAA,UACTJ,GAASK,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAMnE,IAASqE,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMtE,OAAOuE,IAAI,IACjD7D,IAAS2D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM5D,OAAO6D,IAAI,IACjD5D,IAAW0D,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM3D,SAAS4D,IAAI,IACrD3D,IAAUyD,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM1D,QAAQ2D,IAAI,IAEnD+I,IAAeC,EAAAA,EAAAA,UAAQ,WAG3B,OAFA9N,QAAQC,IAAIuM,GAGa,KAAvBA,EAAYuB,QACO,KAAnBhK,IACqB,KAArBC,IACoB,KAApBC,GAEO1D,GAGcA,GAAOM,QAAO,SAACyH,GACpCtI,QAAQC,IAAIqI,EAAMA,EAAKpL,KAAMoL,EAAKpL,KAAK8Q,cAAexB,GACtD,IAAMyB,EAA6B,KAAhBzB,EACb0B,EAAiC,KAAnBnK,GACdoK,EAAqC,KAArBnK,GAChBoK,EAAmC,KAApBnK,GAErB,OAAKgK,GAAeC,GAAgBC,GAAkBC,KASlDH,GAAcC,GAAeC,GAAiBC,MAI7CH,GAAcC,GAAeC,GAAiBC,EAC1C9F,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,eAGzDC,IAAeC,GAAeC,GAAiBC,EAC1C,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,IAG7BkK,GAAcC,IAAgBC,GAAiBC,EAC1C,GAAAnQ,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,IAG/BiK,GAAcC,GAAeC,IAAkBC,EAC1C,GAAAnQ,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAG9BgK,IAAeC,IAAgBC,GAAiBC,EAEhD,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAAoB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,IAItEiK,IAAeC,GAAeC,IAAkBC,EAEhD,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAAoB,GAAA9F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAIrEgK,GAAcC,IAAgBC,IAAkBC,EAEhD,GAAAnQ,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAAsB,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,KAMxEgK,IAAeC,GAAeC,GAAiBC,EAEhD9F,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAIvBkK,GAAcC,IAAgBC,GAAiBC,EAEhD9F,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAIzBiK,GAAcC,GAAeC,IAAkBC,EAEhD9F,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAIxBgK,GAAeC,GAAgBC,IAAiBC,EAQhDH,GAAeC,IAAeC,GAAkBC,EAQhDH,IAAcC,GAAgBC,GAAkBC,EAQjDH,IAAeC,IAAgBC,GAAiBC,EAEhD,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAAoB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,IAItEiK,IAAeC,GAAeC,IAAkBC,EAEhD,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAAoB,GAAA9F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAIrEgK,GAAcC,IAAgBC,IAAkBC,EAEhD,GAAAnQ,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAAsB,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAMxEgK,GAAeC,GAAgBC,IAAiBC,EAQhDH,GAAeC,IAAeC,GAAkBC,EAQhDH,IAAcC,GAAgBC,GAAkBC,GAQjDH,GAAeC,GAAgBC,GAAkBC,EAQjDH,IAAeC,GAAeC,GAAiBC,EAC1C,GAAAnQ,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KAG5BkK,GAAcC,GAAeC,GAAiBC,EAC1C9F,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,oBAD7D,EAVI,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAC1B,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAVzBqE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAC1B,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAVzBqE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAVzBqE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,IA9B1BsE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAC1B,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAVzBqE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,IAVzBqE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAxE1BsE,EAAKpL,KAAK8Q,cAAcK,SAAS7B,EAAYuB,OAAOC,gBACpD,GAAA/P,OAAGqK,EAAKrH,UAAM,GAAAhD,OAAU8F,KACxB,GAAA9F,OAAGqK,EAAKpH,YAAQ,GAAAjD,OAAU+F,KAC1B,GAAA/F,OAAGqK,EAAKnH,WAAO,GAAAlD,OAAUgG,GAoJ/B,GAGF,GAAG,CAACuI,EAAajM,GAAQwD,GAAgBC,GAAkBC,KAErDqK,GAAiBd,EAAAA,OAAa,MA+B9Be,GAAoB,WACxB3C,GAAU,GACVM,EAAc,IACdG,EAAiB,CAAC,EACpB,EAEMmC,GAAe,eAAA3Q,GAAAoH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOqC,GAAM,IAAApC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEf,OADpBqG,GAAa,GACb9L,QAAQC,IAAIwH,GAAQlC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGKC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,wBAAA/D,EAAAA,EAAAA,GAAA,GAE3B6F,GAEL,CACE7B,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKP,EAAQE,EAAAM,KAgBd7F,QAAQC,IAAIoF,EAASP,MAErB8G,GAAU,GACVM,EAAc,IACd7H,GAASuJ,EAAAA,EAAAA,UACT9B,GAAa,GAAOvG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEpBuG,GAAa,GACb9L,QAAQ8I,MAAKvD,EAAAO,IAAQ,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,mBAExB,gBA/BoBY,GAAA,OAAAnI,EAAAoI,MAAA,KAAAC,UAAA,KAiCfuI,GAAgB,eAAA3Q,GAAAmH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAOqB,GAAM,IAAApC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAED,OADnCqG,GAAa,GACb9L,QAAQC,IAAIwH,EAAQoC,GAAevD,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAGVC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,6BAAA/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAE3BiI,GACApC,GAEL,CACE7B,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAhBKP,EAAQiB,EAAAT,KAiBd7F,QAAQC,IAAIoF,EAASP,MAErB8G,GAAU,GACVM,EAAc,IACdG,EAAiB,CAAC,GAClBhI,GAASuJ,EAAAA,EAAAA,UACT9B,GAAa,GAAOxF,EAAAb,KAAA,iBAAAa,EAAAd,KAAA,GAAAc,EAAAR,GAAAQ,EAAA,SAEpBwF,GAAa,GACb9L,QAAQ8I,MAAKxC,EAAAR,IAAQ,yBAAAQ,EAAAP,OAAA,GAAAK,EAAA,mBAExB,gBAjCqBI,GAAA,OAAA1I,EAAAmI,MAAA,KAAAC,UAAA,KAmChBwI,GAAkB,eAAAlQ,GAAAyG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwJ,EAAOlH,GAAM,IAAApC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,OAEH,OADnCqG,GAAa,GACb9L,QAAQC,IAAIwH,EAAQoC,GAAe+E,EAAApJ,KAAA,EAAAoJ,EAAAnJ,KAAA,EAGVC,EAAAA,EAAAA,KAAW,GAADzH,OAC5B0H,gCAA6B,+BAAA/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAE3BiI,GACApC,GAEL,CACE7B,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAhBKP,EAAQuJ,EAAA/I,KAiBd7F,QAAQC,IAAIoF,EAASP,MAErB8G,GAAU,GACVM,EAAc,IACdG,EAAiB,CAAC,GAClBhI,GAASuJ,EAAAA,EAAAA,UACT9B,GAAa,GAAO8C,EAAAnJ,KAAA,iBAAAmJ,EAAApJ,KAAA,GAAAoJ,EAAA9I,GAAA8I,EAAA,SAEpB9C,GAAa,GACb9L,QAAQ8I,MAAK8F,EAAA9I,IAAQ,yBAAA8I,EAAA7I,OAAA,GAAA4I,EAAA,mBAExB,gBAjCuBlI,GAAA,OAAAjI,EAAAyH,MAAA,KAAAC,UAAA,KAmClB2I,IAAcC,EAAAA,EAAAA,cAAY,SAAC5F,GAAW,IAAD6F,EACzC/O,QAAQC,IAAIiJ,EAAMC,OAAOP,MAAO0F,GAAgBA,GAAeU,SAEzC,QAAtBD,EAAAT,GAAeU,eAAO,IAAAD,GAAtBA,EAAwBE,QAExBxC,EAAevD,EAAMC,OAAOP,MAC9B,IAMA,OACExH,EAAAA,EAAAA,MAAC8N,GAAAA,EAAa,CAACnR,MAAOA,EAAMN,SAAA,EAC1BN,EAAAA,EAAAA,KAACgS,EAAAA,EAAQ,CAAC3M,GAAI,CAAEpE,MAAO,OAAQgR,OAAQ,SAACrR,GAAK,OAAKA,EAAMqR,OAAOC,OAAS,CAAC,GAAItI,KAAM8E,EAAUpO,UAC3FN,EAAAA,EAAAA,KAACmS,EAAAA,EAAgB,CAAClR,MAAM,cAGzBsF,GAAyB,QAAfuI,GACT9O,EAAAA,EAAAA,KAACsG,GAAc,CACbC,OAAQA,EACRC,QAAS6K,GACT5K,aAAc2K,GACdzK,eAAgB,CACdC,eAAAA,GACAC,iBAAAA,GACAC,gBAAAA,MAGF,KAEHP,GAAyB,SAAfuI,GACT9O,EAAAA,EAAAA,KAACyM,GAAe,CACdlG,OAAQA,EACRC,QAAS8K,GACT7K,aAAc2K,GACd1E,cAAeA,IAEf,KAEHnG,GAAyB,WAAfuI,GACT9O,EAAAA,EAAAA,KAACmN,GAAiB,CAChB5G,OAAQA,EACRC,QAAS+K,GACT9K,aAAc2K,GACd1E,cAAeA,IAEf,KAEHnG,GAAyB,SAAfuI,GACT9O,EAAAA,EAAAA,KAACgN,GAAe,CACdzG,OAAQA,EACRE,aAAc2K,GACd1E,cAAeA,IAEf,KAEHnG,GAAyB,UAAfuI,GACT9O,EAAAA,EAAAA,KAACiN,GAAgB,CACf1G,OAAQA,EACRE,aAAc2K,GACd1E,cAAeA,IAEf,MAEJ1M,EAAAA,EAAAA,KAACgL,EAAAA,GAAI,CAAA1K,UACH2D,EAAAA,EAAAA,MAACmO,EAAAA,EAAI,CAAC/M,GAAI,CAAEE,UAAW,QAASjF,SAAA,EAC9BN,EAAAA,EAAAA,KAACqS,GAAAA,EAAW,CAAA/R,UACV2D,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CACH7K,QAAQ,WACRmS,QAAQ,OACRtE,aAAa,KACb9N,QAAQ,OACR+J,eAAe,gBACfC,WAAW,SAAQ5J,SAAA,EAEnBN,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACE,QAAQ,KAAKE,WAAY,IAAKY,MAAM,UAASX,SAAC,iBAI1DN,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CACL5I,GAAG,yBACH,gBAAegG,GAAO,4BAAyB2I,EAC/C,gBAAc,OACd,gBAAe3I,GAAO,YAAS2I,EAC/BpS,QAAQ,YACRqS,kBAAgB,EAChBhO,QAxaM,SAACuH,GACnByE,GAAYzE,EAAM0G,cACpB,EAuacC,SAAS1S,EAAAA,EAAAA,KAAC2S,GAAAA,EAAqB,IAAIrS,SACpC,aAID2D,EAAAA,EAAAA,MAACmJ,GAAU,CACTxJ,GAAG,uBACHgP,cAAe,CACb,kBAAmB,0BAErBrC,SAAUA,GACV3G,KAAMA,GACNpD,QAlbM,WAClBgK,GAAY,KACd,EAgbmClQ,SAAA,EAErBN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAC4G,eAAa,EAAAvS,UACrB2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,YAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,qBACH6H,MAAO7E,GACP8E,MAAM,SACNI,SAAU,SAACC,GACT8D,GAAkB9D,EAAMC,OAAOP,MACjC,EAAEnL,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELwD,IACCA,GAAOsF,OAAS,GAChBtF,GAAOd,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,aAIpEC,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAC4G,eAAa,EAAAvS,UACrB2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,cAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,uBACH6H,MAAO5E,GACP6E,MAAM,WACNI,SAAU,SAACC,GACTiE,GAAoBjE,EAAMC,OAAOP,MACnC,EAAEnL,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAELyD,IACCA,GAASqF,OAAS,GAClBrF,GAASf,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,aAItEC,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAAC4G,eAAa,EAAAvS,UACrB2D,EAAAA,EAAAA,MAACoH,EAAAA,EAAW,CAACxB,WAAS,EAAAvJ,SAAA,EACpBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CAAC1H,GAAG,2BAA0BtD,SAAC,aAC1C2D,EAAAA,EAAAA,MAACsH,EAAAA,EAAM,CACLC,QAAQ,2BACR5H,GAAG,sBACH6H,MAAO3E,GACP4E,MAAM,UACNI,SAAU,SAACC,GACToE,GAAmBpE,EAAMC,OAAOP,MAClC,EAAEnL,SAAA,EAEFN,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAM,GAAEnL,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL0D,IACCA,GAAQoF,OAAS,GACjBpF,GAAQhB,KAAI,SAACC,GAAC,OAAKjD,EAAAA,EAAAA,KAACiM,EAAAA,EAAQ,CAACR,MAAOxI,EAAEW,GAAGtD,SAAE2C,EAAElD,MAAgB,gBAMvEkE,EAAAA,EAAAA,MAAC+G,EAAAA,GAAI,CACHnG,KAAK,QACLa,UAAU,OACVL,GAAI,CAAEyN,EAAG,UAAW5S,QAAS,OAAQgK,WAAY,UAAW5J,SAAA,CAE3DmP,GACCzP,EAAAA,EAAAA,KAACqM,EAAAA,EAAS,CACRhH,GAAI,CAAE0N,GAAI,EAAGC,KAAM,GACnBnO,KAAK,QACLoO,YAAY,uBACZC,WAAY,CAAE,aAAc,wBAC5BC,WAAS,EACT1H,MAAO4D,EACPvD,SAAU4F,GACVvR,QAAQ,SACRuL,MAAM,WAEN,MACJ1L,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,YAAYC,UAAU,MAAKhE,UACxCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CACTtD,MAAM,UACNqC,KAAK,SACL,aAAW,SACXkB,QAtLG,WACnBkL,GAAgB,SAAC0D,GAAU,OAAMA,CAAU,GAC7C,EAoLwC9S,UAEtBN,EAAAA,EAAAA,KAACqT,EAAAA,IAAU,CAACxO,KAAK,cAIrB7E,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,CAACC,MAAM,aAAaC,UAAU,MAAKhE,UACzCN,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CAACtD,MAAM,YAAY,aAAW,SAASuD,QA/U3C,WACrBiK,GAAU,GACVM,EAAc,MAChB,EA4U0FzO,UACxEN,EAAAA,EAAAA,KAACsT,EAAAA,IAAQ,CAACzO,KAAK,sBAOzB7E,EAAAA,EAAAA,KAACuT,GAAAA,EAAO,KAERvT,EAAAA,EAAAA,KAAC0B,EAAc,CACbE,aAAc8O,GACd7O,gBAtVc,SAAC2R,GACvB/E,GAAU,GACVM,EAAc,QACdG,EAAiBsE,EACnB,EAmVU1R,kBAjVgB,SAAC0R,GACzB/E,GAAU,GACVM,EAAc,UACdG,EAAiBsE,EACnB,EA8UUzR,gBA5Uc,SAACyR,GACvB/E,GAAU,GACVM,EAAc,QACdG,EAAiBsE,EACnB,EAyUUxR,iBAvUe,SAACwR,GACxB/E,GAAU,GACVM,EAAc,SACdG,EAAiBsE,EACnB,WA0UF,C,kECznBA,IAlCoB,SAAH1T,GAAqB,IAAfiN,EAAOjN,EAAPiN,QACf0G,GAAMC,EAAAA,EAAAA,WAEZ9Q,EAAAA,EAAAA,YAAU,WAEJ6Q,EAAI5B,SAAW4B,EAAI5B,QAAQ8B,MAC7BF,EAAI5B,QAAQ8B,KAAKC,MAErB,GAAG,IAEH,IAIMC,EAAW,CACfvQ,KAAM,QACNwQ,QAAS,CACP,CACEC,IAAKhH,EACLiH,SAAU,aAYhB,OAAOhU,EAAAA,EAAAA,KAACiU,EAAAA,EAAI,CAACC,OAAQL,EAAUJ,IAAKA,EAAKU,QArBzB,CACdC,UAAU,IAqBd,C,2BClCIC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,4DACD,qBAEJN,EAAQ,EAAUG,C,mJChBX,SAASI,EAAyBC,GACvC,OAAOC,EAAAA,EAAAA,GAAqB,eAAgBD,EAC9C,EACyBE,E,QAAAA,GAAuB,eAAgB,CAAC,SAAjE,I,SCFMC,EAAY,CAAC,YAAa,aAqB1BC,GAAgB3U,EAAAA,EAAAA,IAAO,QAAS,CACpCT,KAAM,eACNgV,KAAM,OACNK,kBAAmB,SAAC3H,EAAO4H,GAAM,OAAKA,EAAOC,IAAI,GAH7B9U,CAInB,CACDN,QAAS,uBAELqV,EAAY,CAChBpV,QAAS,QAELqV,EAAmB,QA+DzB,EA9D+BnF,EAAAA,YAAiB,SAAmBoF,EAAShC,GAC1E,IAAMhG,GAAQiI,EAAAA,EAAAA,GAAc,CAC1BjI,MAAOgI,EACP1V,KAAM,iBAINgK,EAEE0D,EAFF1D,UAAS4L,EAEPlI,EADF/H,UAAAA,OAAS,IAAAiQ,EAAGH,EAAgBG,EAExBC,GAAQC,EAAAA,EAAAA,GAA8BpI,EAAOyH,GAE7CY,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGtI,EAAO,CACrC/H,UAAAA,IAGIsQ,EArCkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZX,KAAM,CAAC,SAEoBR,EAA0BkB,EACzD,CA6BkBE,CAAkBJ,GAClC,OAAoB9V,EAAAA,EAAAA,KAAKmW,EAAAA,EAAAA,SAA2B,CAClD1K,MAAO8J,EACPjV,UAAuBN,EAAAA,EAAAA,KAAKmV,GAAeY,EAAAA,EAAAA,GAAS,CAClDK,GAAI1Q,EACJqE,WAAWsM,EAAAA,EAAAA,GAAKL,EAAQV,KAAMvL,GAC9B0J,IAAKA,EACL6C,KAAM5Q,IAAc8P,EAAmB,KAAO,WAC9CM,WAAYA,GACXF,KAEP,G","sources":["layouts/lesson/lessonTableNew.js","layouts/lesson/modals/lessonAddModal.js","layouts/lesson/modals/lessonEditModal.js","layouts/lesson/modals/lessonViewModal.js","layouts/lesson/modals/lessonVideoModal.js","layouts/lesson/modals/lessonDeleteModal.js","layouts/lesson/index.js","layouts/videoplayer/index.js","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\n\r\nfunction LessonModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function LessonTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n  onOpenVideoModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"lesson\", accessor: \"lesson\", align: \"left\" },\r\n    { Header: \"Lesson Name\", accessor: \"lessonname\", align: \"left\" },\r\n    { Header: \"Main/Part\", accessor: \"mainorpart\", align: \"left\" },\r\n    { Header: \"Part No\", accessor: \"partno\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"right\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(filtereddata);\r\n  }, [filtereddata]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        lesson: <LessonModule name={`${v.name}`} />,\r\n        mainorpart: <LessonModule name={`${v.type}`} />,\r\n        partno: <LessonModule name={`${v.part_no === null ? \"-\" : v.part_no}`} />,\r\n        lessonname: (\r\n          <LessonModule\r\n            name={`${\r\n              v.type === \"main\"\r\n                ? \"-\"\r\n                : filtereddata.filter(\r\n                    (w) =>\r\n                      w.id == v.lesson_id &&\r\n                      w.series === v.series &&\r\n                      w.standard === v.standard &&\r\n                      w.subject === v.subject\r\n                  )[0].name\r\n            }`}\r\n          />\r\n        ),\r\n        action: (\r\n          <>\r\n            {v.type === \"part\" && v.live_video_id !== null ? (\r\n              <Tooltip title=\"Live Video\" placement=\"top\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"live\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconVideo size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            {v.type === \"part\" && v.animation_video_id !== null ? (\r\n              <Tooltip title=\"Animation Video\" placement=\"top\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"animation\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconSlideshow size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Main or Part</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Part No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson Id</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.lesson}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.lesson}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.mainorpart}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.partno}</StyledTableCell>\r\n                <StyledTableCell align={columns[4].align}>{row.lessonname}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[5].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonAddModal({\r\n  isOpen,\r\n  onClose,\r\n  onCloseEmpty,\r\n  selectedValues: { selectedSeries, selectedStandard, selectedSubject },\r\n}) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: selectedSeries || \"\",\r\n    standard: selectedStandard || \"\",\r\n    subject: selectedSubject || \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    lesson: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    lessonId: \"\",\r\n    liveVideoId: \"\",\r\n    animationVideoId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonAddModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.seriesEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.standardEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                        defaultValue={values.subjectEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                            defaultValue={values.lessonId}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonEditModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  videoId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"video ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function LessonVideoModal({ isOpen, onCloseEmpty, editModalData, videoType }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (${editModalData.type} ${editModalData.part_no}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {videoType === \"live\" ? (\r\n          <VideoPlayer videoId={editModalData.live_video_id} />\r\n        ) : (\r\n          <VideoPlayer videoId={editModalData.animation_video_id} />\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonVideoModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nexport function LessonDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport LessonTableNew from \"./lessonTableNew\";\r\nimport { LessonAddModal } from \"./modals/lessonAddModal\";\r\nimport { LessonEditModal } from \"./modals/lessonEditModal\";\r\nimport { LessonViewModal } from \"./modals/lessonViewModal\";\r\nimport { LessonVideoModal } from \"./modals/lessonVideoModal\";\r\nimport { LessonDeleteModal } from \"./modals/lessonDeleteModal\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Select,\r\n  Menu,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormGroup,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ArchiveIcon from \"@mui/icons-material/Archive\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"right\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  \"& .MuiPaper-root\": {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === \"light\" ? \"rgb(55, 65, 81)\" : theme.palette.grey[300],\r\n    boxShadow:\r\n      \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n    \"& .MuiMenu-list\": {\r\n      padding: \"4px 0\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      \"&:active\": {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Lesson() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [selectedSeries, setSelectedSeries] = useState(\"\");\r\n  const [selectedStandard, setSelectedStandard] = useState(\"\");\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(lessonActions.getAll());\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n  }, []);\r\n\r\n  const lesson = useSelector((state) => state.lesson.data);\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (\r\n      searchQuery.trim() === \"\" &&\r\n      selectedSeries === \"\" &&\r\n      selectedStandard === \"\" &&\r\n      selectedSubject === \"\"\r\n    ) {\r\n      return lesson;\r\n    }\r\n\r\n    const filteredLesson = lesson.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      const queryEmpty = searchQuery === \"\";\r\n      const seriesEmpty = selectedSeries === \"\";\r\n      const standardEmpty = selectedStandard === \"\";\r\n      const subjectEmpty = selectedSubject === \"\";\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return true;\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return `${item.standard}` === `${selectedStandard}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return `${item.subject}` === `${selectedSubject}`;\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Additional Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Remaining Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n    });\r\n\r\n    return filteredLesson;\r\n  }, [searchQuery, lesson, selectedSeries, selectedStandard, selectedSubject]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenViewModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <LessonAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          selectedValues={{\r\n            selectedSeries,\r\n            selectedStandard,\r\n            selectedSubject,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <LessonEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <LessonDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <LessonViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"video\" ? (\r\n        <LessonVideoModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Lesson List\r\n              </Typography>\r\n\r\n              <Button\r\n                id=\"demo-customized-button\"\r\n                aria-controls={open ? \"demo-customized-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? \"true\" : undefined}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={handleClick}\r\n                endIcon={<KeyboardArrowDownIcon />}\r\n              >\r\n                Options\r\n              </Button>\r\n\r\n              <StyledMenu\r\n                id=\"demo-customized-menu\"\r\n                MenuListProps={{\r\n                  \"aria-labelledby\": \"demo-customized-button\",\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem disableRipple>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-series\"\r\n                      value={selectedSeries}\r\n                      label=\"Series\"\r\n                      onChange={(event) => {\r\n                        setSelectedSeries(event.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {series &&\r\n                        series.length > 0 &&\r\n                        series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n                </MenuItem>\r\n                <MenuItem disableRipple>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-standard\"\r\n                      value={selectedStandard}\r\n                      label=\"Standard\"\r\n                      onChange={(event) => {\r\n                        setSelectedStandard(event.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {standard &&\r\n                        standard.length > 0 &&\r\n                        standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n                </MenuItem>\r\n                <MenuItem disableRipple>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-subject\"\r\n                      value={selectedSubject}\r\n                      label=\"Subject\"\r\n                      onChange={(event) => {\r\n                        setSelectedSubject(event.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {subject &&\r\n                        subject.length > 0 &&\r\n                        subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                    </Select>\r\n                  </FormControl>\r\n                </MenuItem>\r\n              </StyledMenu>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"lesson\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Lesson\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <LessonTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n            onOpenVideoModal={onOpenVideoModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["LessonModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref4","palette","action","hover","border","LessonTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","onOpenVideoModal","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","Header","accessor","align","columns","useEffect","console","log","row","map","v","i","sno","lesson","mainorpart","type","partno","part_no","lessonname","filter","w","id","lesson_id","series","standard","subject","_jsxs","_Fragment","live_video_id","Tooltip","title","placement","IconButton","onClick","_objectSpread","videoType","lessonIdName","IconVideo","size","animation_video_id","IconSlideshow","IconEye","IconEditCircle","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","validationSchema","yup","shape","required","lessonId","when","is","then","otherwise","partNo","LessonAddModal","isOpen","onClose","onCloseEmpty","_ref$selectedValues","selectedValues","selectedSeries","selectedStandard","selectedSubject","fetchedOptions","setFetchedOptions","_useState4","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","subjectActions","typeOfVideosActions","useSelector","state","data","fetchData","typeOfVideos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","headers","sent","t0","stop","_x","apply","arguments","fetchPart","_callee2","cb","_context2","length","_x2","_x3","initialValues","partName","liveVideoId","animationVideoId","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","FormControl","InputLabel","Select","labelId","value","label","error","Boolean","helperText","onChange","event","target","MenuItem","FormHelperText","disabled","option","TextField","focused","DialogActions","Button","LessonEditModal","editModalData","seriesEdit","standardEdit","subjectEdit","defaultValue","videoId","LessonViewModal","LessonVideoModal","VideoPlayer","LessonDeleteModal","StyledMenu","createTheme","primary","main","secondary","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","mode","grey","text","marginRight","alpha","selectedOpacity","useTheme","setIsOpen","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useState9","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","_useState13","_useState14","setSelectedSeries","_useState15","_useState16","setSelectedStandard","_useState17","_useState18","setSelectedSubject","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","lessonActions","filteredData","useMemo","trim","toLowerCase","queryEmpty","seriesEmpty","standardEmpty","subjectEmpty","includes","searchInputRef","onCloseEmptyModal","onCloseAddModal","onCloseEditModal","onCloseDeleteModal","_callee3","_context3","searchTable","useCallback","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","undefined","disableElevation","currentTarget","endIcon","KeyboardArrowDownIcon","MenuListProps","disableRipple","p","ml","flex","placeholder","inputProps","autoFocus","prevSearch","IconSearch","IconPlus","Divider","val","ref","useRef","plyr","play","videoSrc","sources","src","provider","Plyr","source","options","autoplay","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","useThemeProps","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}