{"version":3,"file":"static/js/45.08099607.chunk.js","mappings":"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","sources":["layouts/student/studentTableNew.js","layouts/student/modals/studentAddModal.js","layouts/student/modals/studentEditModal.js","layouts/student/modals/studentDeleteModal.js","layouts/student/modals/studentViewModal.js","layouts/student/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction StudentModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function StudentTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"student name\", accessor: \"student name\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"standard\", accessor: \"standard\", align: \"left\" },\r\n    { Header: \"contact\", accessor: \"contact\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        student: <StudentModule name={`${v.name}`} />,\r\n        series: <StudentModule name={`${v.series}`} />,\r\n        standard: <StudentModule name={`${v.standard}`} />,\r\n        contact: <StudentModule name={`${v.contact}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table\r\n        sx={{\r\n          //minWidth: 700,\r\n          boxShadow: \"none\",\r\n        }}\r\n        size=\"small\"\r\n        aria-label=\"customized table\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <StyledTableCell align={columns[0].align}>S.No</StyledTableCell> */}\r\n            <StyledTableCell align={columns[1].align}>Student</StyledTableCell>\r\n            {/* <StyledTableCell align={columns[2].align}>Series</StyledTableCell> */}\r\n            {/* <StyledTableCell align={columns[2].align}>Standard</StyledTableCell> */}\r\n            {/* <StyledTableCell align={columns[3].align}>Contact</StyledTableCell> */}\r\n            <StyledTableCell align={columns[4].align}>Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row, i) => (\r\n              <StyledTableRow key={i}>\r\n                {/* <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell> */}\r\n                <StyledTableCell align={columns[1].align}>{row.student}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                {/* <StyledTableCell align={columns[2].align}>{row.standard}</StyledTableCell> */}\r\n                {/* <StyledTableCell align={columns[3].align}>{row.contact}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nexport function StudentAddModal({ isOpen, onClose, onCloseEmpty, errorContact }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const [filteredStandard, setFilteredStandard] = useState([]);\r\n  const [availableStandards, setAvailableStandards] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n  }, []);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredStandard);\r\n  }, [filteredStandard]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    console.log(decryptedObject);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    console.log(filter);\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n\r\n    console.log(decryptedObject);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[1])))];\r\n\r\n    console.log(filter);\r\n\r\n    setFilteredStandard(\r\n      standard && standard.length > 0 && standard.filter((v) => filter.includes(v.id))\r\n    );\r\n  }, [standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", async function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n    series: \"\",\r\n    standard: \"\",\r\n    address: \"\",\r\n    student_school: {},\r\n    created_by: decryptedObject[\"id\"],\r\n  };\r\n\r\n  const getFilteredStandards = (selectedSeries) => {\r\n    console.log(selectedSeries);\r\n\r\n    console.log(decryptedObject);\r\n\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [\r\n      ...new Set(\r\n        inputString\r\n          .split(\", \")\r\n          .map((v) => v.split(\"|-|\"))\r\n          .filter((v) => Number(v[0]) === selectedSeries.id)\r\n          .map((v) => Number(v[1]))\r\n      ),\r\n    ];\r\n\r\n    console.log(filter);\r\n\r\n    return standard && standard.length > 0 && standard.filter((v) => filter.includes(v.id));\r\n  };\r\n\r\n  const handleSeriesChange = (event, setFieldValue) => {\r\n    const selectedSeries = event.target.value;\r\n    setFieldValue(\"series\", selectedSeries);\r\n\r\n    const filteredStandards = getFilteredStandards(selectedSeries);\r\n    console.log(filteredStandards);\r\n    setAvailableStandards(filteredStandards);\r\n\r\n    setFieldValue(\"standard\", \"\");\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      variant=\"outlined\"\r\n                      error={touched.name && Boolean(errors.name)}\r\n                      helperText={touched.name && errors.name}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"name\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormHelperText sx={{ color: \"red\" }}>\r\n                      {errorContact && \"Contact Already Exists\"}\r\n                    </FormHelperText>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                    />\r\n\r\n                    {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-series\"\r\n                          value={values.series}\r\n                          label=\"Series\"\r\n                          error={touched.series && Boolean(errors.series)}\r\n                          helperText={touched.series && errors.series}\r\n                          onChange={(event) => handleSeriesChange(event, setFieldValue)}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {filteredSeries &&\r\n                            filteredSeries.length > 0 &&\r\n                            filteredSeries.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                        </Select>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errors.series && touched.series ? errors.series : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    )}\r\n\r\n                    {availableStandards &&\r\n                      availableStandards !== null &&\r\n                      availableStandards.length > 0 && (\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-standard\"\r\n                            value={values.standard}\r\n                            label=\"Standard\"\r\n                            error={touched.standard && Boolean(errors.standard)}\r\n                            helperText={touched.standard && errors.standard}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"standard\", event.target.value);\r\n                            }}\r\n                            sx={{\r\n                              marginBottom: \"16px\",\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {availableStandards &&\r\n                              availableStandards.length > 0 &&\r\n                              availableStandards.map((v) => (\r\n                                <MenuItem value={v}>{v.name}</MenuItem>\r\n                              ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue=\"\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentAddModal;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nexport function StudentEditModal({ isOpen, onClose, onCloseEmpty, errorContact, editModalData }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const [filteredStandard, setFilteredStandard] = useState([]);\r\n  const [availableStandards, setAvailableStandards] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n\r\n    console.log(editModalData);\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series_name,\r\n    standard: standard_name,\r\n    address,\r\n  } = editModalData;\r\n\r\n  let initialValues = {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series && series.length > 0 && series.filter((v) => v.name === series_name)[0],\r\n    standard:\r\n      standard && standard.length > 0 && standard.filter((v) => v.name === standard_name)[0],\r\n    address,\r\n  };\r\n\r\n  console.log(initialValues);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredStandard);\r\n  }, [filteredStandard]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n\r\n    console.log(decryptedObject);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[1])))];\r\n\r\n    console.log(filter);\r\n\r\n    setFilteredStandard(\r\n      standard && standard.length > 0 && standard.filter((v) => filter.includes(v.id))\r\n    );\r\n\r\n    setAvailableStandards(\r\n      standard && standard.length > 0 && standard.filter((v) => filter.includes(v.id))\r\n    );\r\n  }, [standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n\r\n    if (series && series.length > 0 && standard && standard.length > 0) {\r\n      initialValues = {\r\n        name,\r\n        email,\r\n        contact,\r\n        series: series.filter((v) => v.name === series_name)[0],\r\n        standard: standard.filter((v) => v.name === standard_name)[0],\r\n        address,\r\n      };\r\n    }\r\n  }, [series, standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", async function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const getFilteredStandards = (selectedSeries) => {\r\n    console.log(selectedSeries);\r\n\r\n    console.log(decryptedObject);\r\n\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [\r\n      ...new Set(\r\n        inputString\r\n          .split(\", \")\r\n          .map((v) => v.split(\"|-|\"))\r\n          .filter((v) => Number(v[0]) === selectedSeries.id)\r\n          .map((v) => Number(v[1]))\r\n      ),\r\n    ];\r\n\r\n    console.log(filter);\r\n\r\n    return standard && standard.length > 0 && standard.filter((v) => filter.includes(v.id));\r\n  };\r\n\r\n  const handleSeriesChange = (event, setFieldValue) => {\r\n    const selectedSeries = event.target.value;\r\n    setFieldValue(\"series\", selectedSeries);\r\n\r\n    const filteredStandards = getFilteredStandards(selectedSeries);\r\n    console.log(filteredStandards);\r\n    setAvailableStandards(filteredStandards);\r\n\r\n    setFieldValue(\"standard\", \"\");\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      {series &&\r\n        standard &&\r\n        filteredSeries &&\r\n        series.length > 0 &&\r\n        standard.length > 0 &&\r\n        filteredSeries.length > 0 && (\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => {\r\n              console.log(values);\r\n              onSubmit(values);\r\n            }}\r\n          >\r\n            {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n              <Form\r\n                onSubmit={(v) => {\r\n                  console.log(v);\r\n                  handleSubmit(v);\r\n                }}\r\n              >\r\n                <DialogContent>\r\n                  <FormGroup\r\n                    row\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          variant=\"outlined\"\r\n                          error={touched.name && Boolean(errors.name)}\r\n                          helperText={touched.name && errors.name}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"name\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.name}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          variant=\"outlined\"\r\n                          error={touched.email && Boolean(errors.email)}\r\n                          helperText={touched.email && errors.email}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"email\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.email}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errorContact && \"Contact Already Exists\"}\r\n                        </FormHelperText>\r\n                        <TextField\r\n                          name=\"contact\"\r\n                          label=\"Contact\"\r\n                          variant=\"outlined\"\r\n                          error={touched.contact && Boolean(errors.contact)}\r\n                          helperText={touched.contact && errors.contact}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"contact\", event.target.value);\r\n                            console.log(values);\r\n                          }}\r\n                          fullWidth\r\n                          inputProps={{\r\n                            maxLength: 10,\r\n                          }}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                          defaultValue={values.contact}\r\n                        />\r\n\r\n                        {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-series\"\r\n                              label=\"Series\"\r\n                              error={touched.series && Boolean(errors.series)}\r\n                              helperText={touched.series && errors.series}\r\n                              onChange={(event) => handleSeriesChange(event, setFieldValue)}\r\n                              sx={{\r\n                                marginBottom: \"16px\",\r\n                              }}\r\n                              value={filteredSeries.filter((v) => v.name === values.series.name)[0]}\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              {filteredSeries &&\r\n                                filteredSeries.length > 0 &&\r\n                                filteredSeries.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText sx={{ color: \"red\" }}>\r\n                              {errors.series && touched.series ? errors.series : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        )}\r\n\r\n                        {availableStandards &&\r\n                          availableStandards !== null &&\r\n                          availableStandards.length > 0 && (\r\n                            <FormControl fullWidth>\r\n                              <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                              <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-standard\"\r\n                                label=\"Standard\"\r\n                                error={touched.standard && Boolean(errors.standard)}\r\n                                helperText={touched.standard && errors.standard}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\"standard\", event.target.value);\r\n                                }}\r\n                                sx={{\r\n                                  marginBottom: \"16px\",\r\n                                }}\r\n                                value={\r\n                                  availableStandards.filter(\r\n                                    (v) => v.name === values.standard.name\r\n                                  )[0]\r\n                                }\r\n                              >\r\n                                <MenuItem value=\"\">\r\n                                  <em>None</em>\r\n                                </MenuItem>\r\n                                {availableStandards &&\r\n                                  availableStandards.length > 0 &&\r\n                                  availableStandards.map((v) => (\r\n                                    <MenuItem value={v}>{v.name}</MenuItem>\r\n                                  ))}\r\n                              </Select>\r\n                              <FormHelperText sx={{ color: \"red\" }}>\r\n                                {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                              </FormHelperText>\r\n                            </FormControl>\r\n                          )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"address\"\r\n                          label=\"Address\"\r\n                          multiline\r\n                          rows={6}\r\n                          placeholder=\"Address\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={touched.address && Boolean(errors.address)}\r\n                          helperText={touched.address && errors.address}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"address\", event.target.value);\r\n                          }}\r\n                          defaultValue={values.address}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </FormGroup>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </DialogActions>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentEditModal;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nexport function StudentDeleteModal({ isOpen, onClose, onCloseEmpty, errorContact, editModalData }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n\r\n    console.log(editModalData);\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series_name,\r\n    standard: standard_name,\r\n    address,\r\n  } = editModalData;\r\n\r\n  let initialValues = {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series && series.length > 0 && series.filter((v) => v.name === series_name)[0],\r\n    standard:\r\n      standard && standard.length > 0 && standard.filter((v) => v.name === standard_name)[0],\r\n    address,\r\n  };\r\n\r\n  console.log(initialValues);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n\r\n    if (series && series.length > 0 && standard && standard.length > 0) {\r\n      initialValues = {\r\n        name,\r\n        email,\r\n        contact,\r\n        series: series.filter((v) => v.name === series_name)[0],\r\n        standard: standard.filter((v) => v.name === standard_name)[0],\r\n        address,\r\n      };\r\n    }\r\n  }, [series, standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", async function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Are you sure?\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      {series &&\r\n        standard &&\r\n        filteredSeries &&\r\n        series.length > 0 &&\r\n        standard.length > 0 &&\r\n        filteredSeries.length > 0 && (\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => {\r\n              console.log(values);\r\n              onSubmit(values);\r\n            }}\r\n          >\r\n            {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n              <Form\r\n                onSubmit={(v) => {\r\n                  console.log(v);\r\n                  handleSubmit(v);\r\n                }}\r\n              >\r\n                <DialogContent>\r\n                  <FormGroup\r\n                    row\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          variant=\"outlined\"\r\n                          error={touched.name && Boolean(errors.name)}\r\n                          helperText={touched.name && errors.name}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"name\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.name}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          variant=\"outlined\"\r\n                          error={touched.email && Boolean(errors.email)}\r\n                          helperText={touched.email && errors.email}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"email\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.email}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errorContact && \"Contact Already Exists\"}\r\n                        </FormHelperText>\r\n                        <TextField\r\n                          name=\"contact\"\r\n                          label=\"Contact\"\r\n                          variant=\"outlined\"\r\n                          error={touched.contact && Boolean(errors.contact)}\r\n                          helperText={touched.contact && errors.contact}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"contact\", event.target.value);\r\n                            console.log(values);\r\n                          }}\r\n                          fullWidth\r\n                          inputProps={{\r\n                            maxLength: 10,\r\n                          }}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                          defaultValue={values.contact}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n\r\n                        {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-series\"\r\n                              label=\"Series\"\r\n                              error={touched.series && Boolean(errors.series)}\r\n                              helperText={touched.series && errors.series}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"series\", event.target.value);\r\n                              }}\r\n                              sx={{\r\n                                marginBottom: \"16px\",\r\n                              }}\r\n                              value={filteredSeries.filter((v) => v.name === values.series.name)[0]}\r\n                              disabled\r\n                              readOnly\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              {filteredSeries &&\r\n                                filteredSeries.length > 0 &&\r\n                                filteredSeries.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText sx={{ color: \"red\" }}>\r\n                              {errors.series && touched.series ? errors.series : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        )}\r\n\r\n                        {standard && standard !== null && standard.length > 0 && (\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-standard\"\r\n                              label=\"Standard\"\r\n                              error={touched.standard && Boolean(errors.standard)}\r\n                              helperText={touched.standard && errors.standard}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"standard\", event.target.value);\r\n                              }}\r\n                              sx={{\r\n                                marginBottom: \"16px\",\r\n                              }}\r\n                              value={standard.filter((v) => v.name === values.standard.name)[0]}\r\n                              disabled\r\n                              readOnly\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              {standard &&\r\n                                standard.length > 0 &&\r\n                                standard.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText sx={{ color: \"red\" }}>\r\n                              {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"address\"\r\n                          label=\"Address\"\r\n                          multiline\r\n                          rows={6}\r\n                          placeholder=\"Address\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={touched.address && Boolean(errors.address)}\r\n                          helperText={touched.address && errors.address}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"address\", event.target.value);\r\n                          }}\r\n                          defaultValue={values.address}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </FormGroup>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Delete\r\n                  </Button>\r\n                </DialogActions>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentDeleteModal;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nexport function StudentViewModal({ isOpen, onClose, onCloseEmpty, errorContact, editModalData }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n\r\n    console.log(editModalData);\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series_name,\r\n    standard: standard_name,\r\n    address,\r\n  } = editModalData;\r\n\r\n  let initialValues = {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series && series.length > 0 && series.filter((v) => v.name === series_name)[0],\r\n    standard:\r\n      standard && standard.length > 0 && standard.filter((v) => v.name === standard_name)[0],\r\n    address,\r\n  };\r\n\r\n  console.log(initialValues);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n\r\n    if (series && series.length > 0 && standard && standard.length > 0) {\r\n      initialValues = {\r\n        name,\r\n        email,\r\n        contact,\r\n        series: series.filter((v) => v.name === series_name)[0],\r\n        standard: standard.filter((v) => v.name === standard_name)[0],\r\n        address,\r\n      };\r\n    }\r\n  }, [series, standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", async function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      {series &&\r\n        standard &&\r\n        filteredSeries &&\r\n        series.length > 0 &&\r\n        standard.length > 0 &&\r\n        filteredSeries.length > 0 && (\r\n          <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n            {({ values, errors, touched, setFieldValue }) => (\r\n              <Form\r\n                onSubmit={(v) => {\r\n                  console.log(v);\r\n                  // handleSubmit(v);\r\n                }}\r\n              >\r\n                <DialogContent>\r\n                  <FormGroup\r\n                    row\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"name\"\r\n                          label=\"Name\"\r\n                          variant=\"outlined\"\r\n                          error={touched.name && Boolean(errors.name)}\r\n                          helperText={touched.name && errors.name}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"name\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.name}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          variant=\"outlined\"\r\n                          error={touched.email && Boolean(errors.email)}\r\n                          helperText={touched.email && errors.email}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"email\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.email}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errorContact && \"Contact Already Exists\"}\r\n                        </FormHelperText>\r\n                        <TextField\r\n                          name=\"contact\"\r\n                          label=\"Contact\"\r\n                          variant=\"outlined\"\r\n                          error={touched.contact && Boolean(errors.contact)}\r\n                          helperText={touched.contact && errors.contact}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"contact\", event.target.value);\r\n                            console.log(values);\r\n                          }}\r\n                          fullWidth\r\n                          inputProps={{\r\n                            maxLength: 10,\r\n                          }}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                          defaultValue={values.contact}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n\r\n                        {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-series\"\r\n                              label=\"Series\"\r\n                              error={touched.series && Boolean(errors.series)}\r\n                              helperText={touched.series && errors.series}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"series\", event.target.value);\r\n                              }}\r\n                              sx={{\r\n                                marginBottom: \"16px\",\r\n                              }}\r\n                              value={filteredSeries.filter((v) => v.name === values.series.name)[0]}\r\n                              disabled\r\n                              readOnly\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              {filteredSeries &&\r\n                                filteredSeries.length > 0 &&\r\n                                filteredSeries.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText sx={{ color: \"red\" }}>\r\n                              {errors.series && touched.series ? errors.series : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        )}\r\n\r\n                        {standard && standard !== null && standard.length > 0 && (\r\n                          <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-standard\"\r\n                              label=\"Standard\"\r\n                              error={touched.standard && Boolean(errors.standard)}\r\n                              helperText={touched.standard && errors.standard}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"standard\", event.target.value);\r\n                              }}\r\n                              sx={{\r\n                                marginBottom: \"16px\",\r\n                              }}\r\n                              value={standard.filter((v) => v.name === values.standard.name)[0]}\r\n                              disabled\r\n                              readOnly\r\n                            >\r\n                              <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                              </MenuItem>\r\n                              {standard &&\r\n                                standard.length > 0 &&\r\n                                standard.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                            </Select>\r\n                            <FormHelperText sx={{ color: \"red\" }}>\r\n                              {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"address\"\r\n                          label=\"Address\"\r\n                          multiline\r\n                          rows={6}\r\n                          placeholder=\"Address\"\r\n                          style={{ width: \"100%\" }}\r\n                          error={touched.address && Boolean(errors.address)}\r\n                          helperText={touched.address && errors.address}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"address\", event.target.value);\r\n                          }}\r\n                          defaultValue={values.address}\r\n                          disabled\r\n                          readOnly\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </FormGroup>\r\n                </DialogContent>\r\n                {/* <DialogActions>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </DialogActions> */}\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentViewModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback, useEffect } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { studentActions } from \"slices/student\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport StudentTableNew from \"./studentTableNew\";\r\nimport { StudentAddModal } from \"./modals/studentAddModal\";\r\nimport { StudentEditModal } from \"./modals/studentEditModal\";\r\nimport { StudentDeleteModal } from \"./modals/studentDeleteModal\";\r\nimport { StudentViewModal } from \"./modals/studentViewModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Student() {\r\n  console.log(\"In Student\");\r\n\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [errorMessageContactToAddModal, setErrorMessageContactToAddModal] = useState(\"\");\r\n  const [errorMessageContactToEditModal, setErrorMessageContactToEditModal] = useState(\"\");\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n  const accessRoleID = decryptedObject.id;\r\n\r\n  console.log(accessRoleID);\r\n\r\n  useEffect(() => {\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/+918639693342/AUTOGEN2/INFOPB\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY3/918639693342/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY/f18eaa75-fa37-11ed-addf-0200cd936042/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(studentActions.getAll());\r\n  }, []);\r\n\r\n  const student = useSelector((state) => state.student.data);\r\n\r\n  useEffect(() => {\r\n    console.log(student);\r\n  }, [student]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    console.log(student);\r\n\r\n    const filteredStudent = student.filter(\r\n      (item) =>\r\n        (item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n          item.series.concat(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n          item.standard.concat(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n          item.contact.concat(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase())) &&\r\n        item.school === Number(accessRoleID)\r\n    );\r\n\r\n    console.log(filteredStudent);\r\n\r\n    return filteredStudent;\r\n  }, [searchQuery, student]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = useCallback(() => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  });\r\n\r\n  const onOpenEditModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenViewModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenDeleteModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onCloseEmptyModal = useCallback(() => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessageContactToAddModal);\r\n  }, [errorMessageContactToAddModal]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessageContactToEditModal);\r\n  }, [errorMessageContactToEditModal]);\r\n\r\n  const onCloseAddModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Contact already exists\") {\r\n        setErrorMessageContactToAddModal(values.contact);\r\n      } else {\r\n        setErrorMessageContactToAddModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        dispatch(studentActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Contact already exists\") {\r\n        setErrorMessageContactToEditModal(values.contact);\r\n      } else {\r\n        setErrorMessageContactToEditModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        setEditModalData({});\r\n        dispatch(studentActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Contact already exists\") {\r\n        setErrorMessageContactToEditModal(values.contact);\r\n      } else {\r\n        setErrorMessageContactToEditModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        setEditModalData({});\r\n        dispatch(studentActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  const buttonSearch = (e) => {\r\n    console.log(e.target.value);\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <StudentAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          errorContact={errorMessageContactToAddModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <StudentEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n          errorContact={errorMessageContactToEditModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <StudentViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <StudentDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Student List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Student\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"add\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Select Standard\" placement=\"top\">\r\n                  <FormControl sx={{ m: 1, minWidth: 150 }}>\r\n                    <InputLabel id=\"demo-simple-select-standard-label\">Select Standard</InputLabel>\r\n                    <Select\r\n                      value={searchQuery}\r\n                      label=\"select-standard\"\r\n                      onChange={(e) => buttonSearch(e)}\r\n                      placeholder=\"\"\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>Reset</em>\r\n                      </MenuItem>\r\n\r\n                      {student &&\r\n                        [...new Set(student.map((v) => v.standard))].map((v) => (\r\n                          <MenuItem value={v}>{v}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <StudentTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n"],"names":["StudentModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","theme","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref3","palette","action","hover","border","StudentTableNew","_ref4","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","rows","setRows","useState","columns","Header","accessor","align","useEffect","console","log","row","map","v","i","sno","student","series","standard","contact","_jsxs","_Fragment","Tooltip","title","placement","IconButton","type","onClick","IconEye","size","IconEditCircle","IconTrash","TableContainer","Table","sx","boxShadow","TableHead","TableBody","StudentAddModal","isOpen","onClose","onCloseEmpty","errorContact","filteredSeries","setFilteredSeries","filteredStandard","setFilteredStandard","availableStandards","setAvailableStandards","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","useSelector","state","data","key","localStorage","getItem","decryptedObject","ciphertext","secretKey","plaintext","CryptoJS","toString","JSON","parse","decryptObject","inputString","filter","Set","split","Number","length","includes","id","validationSchema","yup","shape","required","matches","test","async","value","email","address","initialValues","student_school","created_by","handleSeriesChange","event","setFieldValue","selectedSeries","target","filteredStandards","getFilteredStandards","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","onSubmit","values","handleSubmit","errors","touched","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","TextField","label","error","Boolean","helperText","onChange","FormHelperText","inputProps","maxLength","marginBottom","FormControl","InputLabel","Select","labelId","MenuItem","multiline","placeholder","defaultValue","width","DialogActions","Button","StudentEditModal","editModalData","series_name","standard_name","StudentDeleteModal","disabled","readOnly","StudentViewModal","createTheme","primary","main","secondary","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","controller","useMaterialUIController","darkMode","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","errorMessageContactToAddModal","setErrorMessageContactToAddModal","errorMessageContactToEditModal","setErrorMessageContactToEditModal","accessRoleID","studentActions","filteredData","useMemo","trim","filteredStudent","toLowerCase","school","searchInputRef","React","onOpenAddModal","useCallback","val","onCloseEmptyModal","searchTable","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","checkedItems","response","axios","process","headers","Card","CardContent","bgcolor","borderRadius","component","p","ml","flex","autoFocus","toggleSearch","prevSearch","IconSearch","IconPlus","m","minWidth","e","buttonSearch","Divider"],"sourceRoot":""}