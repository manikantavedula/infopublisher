{"version":3,"file":"static/js/136.6d6912cf.chunk.js","mappings":"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","sources":["components/MDBox/MDBoxRoot.js","components/MDBox/index.js","components/MDButton/MDButtonRoot.js","components/MDButton/index.js","components/MDTypography/MDTypographyRoot.js","components/MDTypography/index.js","components/MDInput/MDInputRoot.js","components/MDInput/index.js","components/MDPagination/MDPaginationItemRoot.js","components/MDPagination/index.js","examples/Tables/DataTable/DataTableHeadCell.js","examples/Tables/DataTable/DataTableBodyCell.js","examples/Tables/DataTable/index.js","layouts/series/seriesTableNew.js","layouts/series/modals/seriesAddModal.js","layouts/series/modals/seriesEditModal.js","layouts/series/modals/seriesDeleteModal.js","layouts/series/index.js"],"sourcesContent":["// @mui material components\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Box)(({ theme, ownerState }) => {\n  const { palette, functions, borders, boxShadows } = theme;\n  const { variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow } = ownerState;\n\n  const { gradients, grey, white } = palette || {};\n  const { linearGradient } = functions || {};\n  const { borderRadius: radius } = borders || {};\n  const { colored } = boxShadows || {};\n\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900],\n  };\n\n  const validGradients = [\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"dark\",\n    \"light\",\n  ];\n\n  const validColors = [\n    \"transparent\",\n    \"white\",\n    \"black\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"grey-100\",\n    \"grey-200\",\n    \"grey-300\",\n    \"grey-400\",\n    \"grey-500\",\n    \"grey-600\",\n    \"grey-700\",\n    \"grey-800\",\n    \"grey-900\",\n  ];\n\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"];\n\n  // background value\n  let backgroundValue = bgColor;\n\n  if (variant === \"gradient\") {\n    backgroundValue = validGradients.find((el) => el === bgColor)\n      ? linearGradient(gradients[bgColor].main, gradients[bgColor].state)\n      : white.main;\n  } else if (validColors.find((el) => el === bgColor)) {\n    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];\n  } else {\n    backgroundValue = bgColor;\n  }\n\n  // color value\n  let colorValue = color;\n\n  if (validColors.find((el) => el === color)) {\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\n  }\n\n  // borderRadius value\n  let borderRadiusValue = borderRadius;\n\n  if (validBorderRadius.find((el) => el === borderRadius)) {\n    borderRadiusValue = radius[borderRadius];\n  }\n\n  // boxShadow value\n  let boxShadowValue = \"none\";\n\n  if (validBoxShadows.find((el) => el === shadow)) {\n    boxShadowValue = boxShadows[shadow];\n  } else if (coloredShadow) {\n    boxShadowValue = colored[coloredShadow] ? colored[coloredShadow] : \"none\";\n  }\n\n  return {\n    opacity,\n    background: backgroundValue,\n    color: colorValue,\n    borderRadius: borderRadiusValue,\n    boxShadow: boxShadowValue,\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDBox\nimport MDBoxRoot from \"components/MDBox/MDBoxRoot\";\n\nconst MDBox = forwardRef(\n  ({ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow, ...rest }, ref) => (\n    <MDBoxRoot\n      {...rest}\n      ref={ref}\n      ownerState={{ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow }}\n    />\n  )\n);\n\n// Setting default values for the props of MDBox\nMDBox.defaultProps = {\n  variant: \"contained\",\n  bgColor: \"transparent\",\n  color: \"dark\",\n  opacity: 1,\n  borderRadius: \"none\",\n  shadow: \"none\",\n  coloredShadow: \"none\",\n};\n\n// Typechecking props for the MDBox\nMDBox.propTypes = {\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.number,\n  borderRadius: PropTypes.string,\n  shadow: PropTypes.string,\n  coloredShadow: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"none\",\n  ]),\n};\n\nexport default MDBox;\n","/* eslint-disable prefer-destructuring */\n\n// @mui material components\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Button)(({ theme, ownerState }) => {\n  const { palette, functions, borders, boxShadows } = theme;\n  const { color, variant, size, circular, iconOnly, darkMode } = ownerState;\n\n  const { white, text, transparent, gradients, grey } = palette;\n  const { boxShadow, linearGradient, pxToRem, rgba } = functions;\n  const { borderRadius } = borders;\n  const { colored } = boxShadows;\n\n  // styles for the button with variant=\"contained\"\n  const containedStyles = () => {\n    // background color value\n    const backgroundValue = palette[color] ? palette[color].main : white.main;\n\n    // backgroundColor value when button is focused\n    const focusedBackgroundValue = palette[color] ? palette[color].focus : white.focus;\n\n    // boxShadow value\n    const boxShadowValue = colored[color]\n      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(\n          [0, 3],\n          [1, -2],\n          palette[color].main,\n          0.2\n        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`\n      : \"none\";\n\n    // boxShadow value when button is hovered\n    const hoveredBoxShadowValue = colored[color]\n      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(\n          [0, 4],\n          [23, 0],\n          palette[color].main,\n          0.15\n        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`\n      : \"none\";\n\n    // color value\n    let colorValue = white.main;\n\n    if (!darkMode && (color === \"white\" || color === \"light\" || !palette[color])) {\n      colorValue = text.main;\n    } else if (darkMode && (color === \"white\" || color === \"light\" || !palette[color])) {\n      colorValue = grey[600];\n    }\n\n    // color value when button is focused\n    let focusedColorValue = white.main;\n\n    if (color === \"white\") {\n      focusedColorValue = text.main;\n    } else if (color === \"primary\" || color === \"error\" || color === \"dark\") {\n      focusedColorValue = white.main;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      boxShadow: boxShadowValue,\n\n      \"&:hover\": {\n        backgroundColor: backgroundValue,\n        boxShadow: hoveredBoxShadowValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        backgroundColor: focusedBackgroundValue,\n        boxShadow: palette[color]\n          ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n          : boxShadow([0, 0], [0, 3.2], white.main, 0.5),\n      },\n\n      \"&:disabled\": {\n        backgroundColor: backgroundValue,\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"outlined\"\n  const outliedStyles = () => {\n    // background color value\n    const backgroundValue = color === \"white\" ? rgba(white.main, 0.1) : transparent.main;\n\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // boxShadow value\n    const boxShadowValue = palette[color]\n      ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n      : boxShadow([0, 0], [0, 3.2], white.main, 0.5);\n\n    // border color value\n    let borderColorValue = palette[color] ? palette[color].main : rgba(white.main, 0.75);\n\n    if (color === \"white\") {\n      borderColorValue = rgba(white.main, 0.75);\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      borderColor: borderColorValue,\n\n      \"&:hover\": {\n        background: transparent.main,\n        borderColor: colorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        background: transparent.main,\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:active:not(:hover)\": {\n        backgroundColor: colorValue,\n        color: white.main,\n        opacity: 0.85,\n      },\n\n      \"&:disabled\": {\n        color: colorValue,\n        borderColor: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"gradient\"\n  const gradientStyles = () => {\n    // background value\n    const backgroundValue =\n      color === \"white\" || !gradients[color]\n        ? white.main\n        : linearGradient(gradients[color].main, gradients[color].state);\n\n    // boxShadow value\n    const boxShadowValue = colored[color]\n      ? `${boxShadow([0, 3], [3, 0], palette[color].main, 0.15)}, ${boxShadow(\n          [0, 3],\n          [1, -2],\n          palette[color].main,\n          0.2\n        )}, ${boxShadow([0, 1], [5, 0], palette[color].main, 0.15)}`\n      : \"none\";\n\n    // boxShadow value when button is hovered\n    const hoveredBoxShadowValue = colored[color]\n      ? `${boxShadow([0, 14], [26, -12], palette[color].main, 0.4)}, ${boxShadow(\n          [0, 4],\n          [23, 0],\n          palette[color].main,\n          0.15\n        )}, ${boxShadow([0, 8], [10, -5], palette[color].main, 0.2)}`\n      : \"none\";\n\n    // color value\n    let colorValue = white.main;\n\n    if (color === \"white\") {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      boxShadow: boxShadowValue,\n\n      \"&:hover\": {\n        boxShadow: hoveredBoxShadowValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:disabled\": {\n        background: backgroundValue,\n        color: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"text\"\n  const textStyles = () => {\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // color value when button is focused\n    const focusedColorValue = palette[color] ? palette[color].focus : white.focus;\n\n    return {\n      color: colorValue,\n\n      \"&:hover\": {\n        color: focusedColorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with circular={true}\n  const circularStyles = () => ({\n    borderRadius: borderRadius.section,\n  });\n\n  // styles for the button with iconOnly={true}\n  const iconOnlyStyles = () => {\n    // width, height, minWidth and minHeight values\n    let sizeValue = pxToRem(38);\n\n    if (size === \"small\") {\n      sizeValue = pxToRem(25.4);\n    } else if (size === \"large\") {\n      sizeValue = pxToRem(52);\n    }\n\n    // padding value\n    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;\n\n    if (size === \"small\") {\n      paddingValue = pxToRem(4.5);\n    } else if (size === \"large\") {\n      paddingValue = pxToRem(16);\n    }\n\n    return {\n      width: sizeValue,\n      minWidth: sizeValue,\n      height: sizeValue,\n      minHeight: sizeValue,\n      padding: paddingValue,\n\n      \"& .material-icons\": {\n        marginTop: 0,\n      },\n\n      \"&:hover, &:focus, &:active\": {\n        transform: \"none\",\n      },\n    };\n  };\n\n  return {\n    ...(variant === \"contained\" && containedStyles()),\n    ...(variant === \"outlined\" && outliedStyles()),\n    ...(variant === \"gradient\" && gradientStyles()),\n    ...(variant === \"text\" && textStyles()),\n    ...(circular && circularStyles()),\n    ...(iconOnly && iconOnlyStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDButton\nimport MDButtonRoot from \"components/MDButton/MDButtonRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDButton = forwardRef(\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDButtonRoot\n        {...rest}\n        ref={ref}\n        color=\"primary\"\n        variant={variant === \"gradient\" ? \"contained\" : variant}\n        size={size}\n        ownerState={{ color, variant, size, circular, iconOnly, darkMode }}\n      >\n        {children}\n      </MDButtonRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDButton\nMDButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false,\n};\n\n// Typechecking props for the MDButton\nMDButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDButton;\n","// @mui material components\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Typography)(({ theme, ownerState }) => {\n  const { palette, typography, functions } = theme;\n  const { color, textTransform, verticalAlign, fontWeight, opacity, textGradient, darkMode } =\n    ownerState;\n\n  const { gradients, transparent, white } = palette;\n  const { fontWeightLight, fontWeightRegular, fontWeightMedium, fontWeightBold } = typography;\n  const { linearGradient } = functions;\n\n  // fontWeight styles\n  const fontWeights = {\n    light: fontWeightLight,\n    regular: fontWeightRegular,\n    medium: fontWeightMedium,\n    bold: fontWeightBold,\n  };\n\n  // styles for the typography with textGradient={true}\n  const gradientStyles = () => ({\n    backgroundImage:\n      color !== \"inherit\" && color !== \"text\" && color !== \"white\" && gradients[color]\n        ? linearGradient(gradients[color].main, gradients[color].state)\n        : linearGradient(gradients.dark.main, gradients.dark.state),\n    display: \"inline-block\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: transparent.main,\n    position: \"relative\",\n    zIndex: 1,\n  });\n\n  // color value\n  let colorValue = color === \"inherit\" || !palette[color] ? \"inherit\" : palette[color].main;\n\n  if (darkMode && (color === \"inherit\" || !palette[color])) {\n    colorValue = \"inherit\";\n  } else if (darkMode && color === \"dark\") colorValue = white.main;\n\n  return {\n    opacity,\n    textTransform,\n    verticalAlign,\n    textDecoration: \"none\",\n    color: colorValue,\n    fontWeight: fontWeights[fontWeight] && fontWeights[fontWeight],\n    ...(textGradient && gradientStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDTypography\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDTypography = forwardRef(\n  (\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\n    ref\n  ) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDTypographyRoot\n        {...rest}\n        ref={ref}\n        ownerState={{\n          color,\n          textTransform,\n          verticalAlign,\n          fontWeight,\n          opacity,\n          textGradient,\n          darkMode,\n        }}\n      >\n        {children}\n      </MDTypographyRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDTypography\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1,\n};\n\n// Typechecking props for the MDTypography\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\n    \"inherit\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"white\",\n  ]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\n    \"unset\",\n    \"baseline\",\n    \"sub\",\n    \"super\",\n    \"text-top\",\n    \"text-bottom\",\n    \"middle\",\n    \"top\",\n    \"bottom\",\n  ]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number,\n};\n\nexport default MDTypography;\n","// @mui material components\nimport TextField from \"@mui/material/TextField\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(TextField)(({ theme, ownerState }) => {\n  const { palette, functions } = theme;\n  const { error, success, disabled } = ownerState;\n\n  const { grey, transparent, error: colorError, success: colorSuccess } = palette;\n  const { pxToRem } = functions;\n\n  // styles for the input with error={true}\n  const errorStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23F44335' viewBox='0 0 12 12'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3E%3Ccircle cx='6' cy='8.2' r='.6' fill='%23F44335' stroke='none'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorError.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorError.main,\n    },\n  });\n\n  // styles for the input with success={true}\n  const successStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 8'%3E%3Cpath fill='%234CAF50' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorSuccess.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorSuccess.main,\n    },\n  });\n\n  return {\n    backgroundColor: disabled ? `${grey[200]} !important` : transparent.main,\n    pointerEvents: disabled ? \"none\" : \"auto\",\n    ...(error && errorStyles()),\n    ...(success && successStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDInput\nimport MDInputRoot from \"components/MDInput/MDInputRoot\";\n\nconst MDInput = forwardRef(({ error, success, disabled, ...rest }, ref) => (\n  <MDInputRoot {...rest} ref={ref} ownerState={{ error, success, disabled }} />\n));\n\n// Setting default values for the props of MDInput\nMDInput.defaultProps = {\n  error: false,\n  success: false,\n  disabled: false,\n};\n\n// Typechecking props for the MDInput\nMDInput.propTypes = {\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default MDInput;\n","// @mui material components\nimport { styled } from \"@mui/material/styles\";\n\n// Material Dashboard 2 React components\nimport MDButton from \"components/MDButton\";\n\nexport default styled(MDButton)(({ theme, ownerState }) => {\n  const { borders, functions, typography, palette } = theme;\n  const { variant, paginationSize, active } = ownerState;\n\n  const { borderColor } = borders;\n  const { pxToRem } = functions;\n  const { fontWeightRegular, size: fontSize } = typography;\n  const { light } = palette;\n\n  // width, height, minWidth and minHeight values\n  let sizeValue = pxToRem(36);\n\n  if (paginationSize === \"small\") {\n    sizeValue = pxToRem(30);\n  } else if (paginationSize === \"large\") {\n    sizeValue = pxToRem(46);\n  }\n\n  return {\n    borderColor,\n    margin: `0 ${pxToRem(2)}`,\n    pointerEvents: active ? \"none\" : \"auto\",\n    fontWeight: fontWeightRegular,\n    fontSize: fontSize.sm,\n    width: sizeValue,\n    minWidth: sizeValue,\n    height: sizeValue,\n    minHeight: sizeValue,\n\n    \"&:hover, &:focus, &:active\": {\n      transform: \"none\",\n      boxShadow: (variant !== \"gradient\" || variant !== \"contained\") && \"none !important\",\n      opacity: \"1 !important\",\n    },\n\n    \"&:hover\": {\n      backgroundColor: light.main,\n      borderColor,\n    },\n  };\n});\n","import { forwardRef, createContext, useContext, useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Custom styles for MDPagination\nimport MDPaginationItemRoot from \"components/MDPagination/MDPaginationItemRoot\";\n\n// The Pagination main context\nconst Context = createContext();\n\nconst MDPagination = forwardRef(\n  ({ item, variant, color, size, active, children, ...rest }, ref) => {\n    const context = useContext(Context);\n    const paginationSize = context ? context.size : null;\n\n    const value = useMemo(() => ({ variant, color, size }), [variant, color, size]);\n\n    return (\n      <Context.Provider value={value}>\n        {item ? (\n          <MDPaginationItemRoot\n            {...rest}\n            ref={ref}\n            variant={active ? context.variant : \"outlined\"}\n            color={active ? context.color : \"secondary\"}\n            iconOnly\n            circular\n            ownerState={{ variant, active, paginationSize }}\n          >\n            {children}\n          </MDPaginationItemRoot>\n        ) : (\n          <MDBox\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            sx={{ listStyle: \"none\" }}\n          >\n            {children}\n          </MDBox>\n        )}\n      </Context.Provider>\n    );\n  }\n);\n\n// Setting default values for the props of MDPagination\nMDPagination.defaultProps = {\n  item: false,\n  variant: \"gradient\",\n  color: \"info\",\n  size: \"medium\",\n  active: false,\n};\n\n// Typechecking props for the MDPagination\nMDPagination.propTypes = {\n  item: PropTypes.bool,\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  active: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDPagination;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nfunction DataTableHeadCell({ width, children, sorted, align, ...rest }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  return (\n    <MDBox\n      component=\"th\"\n      width={width}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, borders: { borderWidth } }) => ({\n        borderBottom: `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        {...rest}\n        position=\"relative\"\n        textAlign={align}\n        color={darkMode ? \"white\" : \"secondary\"}\n        opacity={0.7}\n        sx={({ typography: { size, fontWeightBold } }) => ({\n          fontSize: size.xxs,\n          fontWeight: fontWeightBold,\n          textTransform: \"uppercase\",\n          cursor: sorted && \"pointer\",\n          userSelect: sorted && \"none\",\n        })}\n      >\n        {children}\n        {sorted && (\n          <MDBox\n            position=\"absolute\"\n            top={0}\n            right={align !== \"right\" ? \"16px\" : 0}\n            left={align === \"right\" ? \"-5px\" : \"unset\"}\n            sx={({ typography: { size } }) => ({\n              fontSize: size.lg,\n            })}\n          >\n            <MDBox\n              position=\"absolute\"\n              top={-6}\n              color={sorted === \"asce\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"asce\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_up</Icon>\n            </MDBox>\n            <MDBox\n              position=\"absolute\"\n              top={0}\n              color={sorted === \"desc\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"desc\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_down</Icon>\n            </MDBox>\n          </MDBox>\n        )}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableHeadCell\nDataTableHeadCell.defaultProps = {\n  width: \"auto\",\n  sorted: \"none\",\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableHeadCell\nDataTableHeadCell.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.node.isRequired,\n  sorted: PropTypes.oneOf([false, \"none\", \"asce\", \"desc\"]),\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableHeadCell;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\nfunction DataTableBodyCell({ noBorder, align, children }) {\n  return (\n    <MDBox\n      component=\"td\"\n      textAlign={align}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, typography: { size }, borders: { borderWidth } }) => ({\n        fontSize: size.sm,\n        borderBottom: noBorder ? \"none\" : `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        display=\"inline-block\"\n        width=\"max-content\"\n        color=\"text\"\n        sx={{ verticalAlign: \"middle\" }}\n      >\n        {children}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableBodyCell\nDataTableBodyCell.defaultProps = {\n  noBorder: false,\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableBodyCell\nDataTableBodyCell.propTypes = {\n  children: PropTypes.node.isRequired,\n  noBorder: PropTypes.bool,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableBodyCell;\n","import { useMemo, useEffect, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-table components\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\n\n// @mui material components\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Icon from \"@mui/material/Icon\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDPagination from \"components/MDPagination\";\n\n// Material Dashboard 2 React example components\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\n\nfunction DataTable({\n  entriesPerPage,\n  canSearch,\n  showTotalEntries,\n  table,\n  pagination,\n  isSorted,\n  noEndBorder,\n}) {\n  const defaultValue = entriesPerPage.defaultValue ? entriesPerPage.defaultValue : 10;\n  const entries = entriesPerPage.entries\n    ? entriesPerPage.entries.map((el) => el.toString())\n    : [\"5\", \"10\", \"15\", \"20\", \"25\"];\n  const columns = useMemo(() => table.columns, [table]);\n  const data = useMemo(() => table.rows, [table]);\n\n  const tableInstance = useTable(\n    { columns, data, initialState: { pageIndex: 0 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    pageOptions,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, globalFilter },\n  } = tableInstance;\n\n  // Set the default value for the entries per page when component mounts\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]);\n\n  // Set the entries per page value based on the select value\n  const setEntriesPerPage = (value) => setPageSize(value);\n\n  // Render the paginations\n  const renderPagination = pageOptions.map((option) => (\n    <MDPagination\n      item\n      key={option}\n      onClick={() => gotoPage(Number(option))}\n      active={pageIndex === option}\n    >\n      {option + 1}\n    </MDPagination>\n  ));\n\n  // Handler for the input to set the pagination index\n  const handleInputPagination = ({ target: { value } }) =>\n    value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\n\n  // Customized page options starting from 1\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\n\n  // Setting value for the pagination input\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value - 1));\n\n  // Search input value state\n  const [search, setSearch] = useState(globalFilter);\n\n  // Search input state handle\n  const onSearchChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 100);\n\n  // A function that sets the sorted value for the table\n  const setSortedValue = (column) => {\n    let sortedValue;\n\n    if (isSorted && column.isSorted) {\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\n    } else if (isSorted) {\n      sortedValue = \"none\";\n    } else {\n      sortedValue = false;\n    }\n\n    return sortedValue;\n  };\n\n  // Setting the entries starting point\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\n\n  // Setting the entries ending point\n  let entriesEnd;\n\n  if (pageIndex === 0) {\n    entriesEnd = pageSize;\n  } else if (pageIndex === pageOptions.length - 1) {\n    entriesEnd = rows.length;\n  } else {\n    entriesEnd = pageSize * (pageIndex + 1);\n  }\n\n  return (\n    <TableContainer sx={{ boxShadow: \"none\" }}>\n      {entriesPerPage || canSearch ? (\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\n          {entriesPerPage && (\n            <MDBox display=\"flex\" alignItems=\"center\">\n              <Autocomplete\n                disableClearable\n                value={pageSize.toString()}\n                options={entries}\n                onChange={(event, newValue) => {\n                  setEntriesPerPage(parseInt(newValue, 10));\n                }}\n                size=\"small\"\n                sx={{ width: \"5rem\" }}\n                renderInput={(params) => <MDInput {...params} />}\n              />\n              <MDTypography variant=\"caption\" color=\"secondary\">\n                &nbsp;&nbsp;entries per page\n              </MDTypography>\n            </MDBox>\n          )}\n          {canSearch && (\n            <MDBox width=\"12rem\" ml=\"auto\">\n              <MDInput\n                placeholder=\"Search...\"\n                value={search}\n                size=\"small\"\n                fullWidth\n                onChange={({ currentTarget }) => {\n                  setSearch(search);\n                  onSearchChange(currentTarget.value);\n                }}\n              />\n            </MDBox>\n          )}\n        </MDBox>\n      ) : null}\n      <Table stickyHeader {...getTableProps()}>\n        <MDBox component=\"thead\">\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <DataTableHeadCell\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\n                  width={column.width ? column.width : \"auto\"}\n                  align={column.align ? column.align : \"left\"}\n                  sorted={setSortedValue(column)}\n                >\n                  {column.render(\"Header\")}\n                </DataTableHeadCell>\n              ))}\n            </TableRow>\n          ))}\n        </MDBox>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row, key) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <DataTableBodyCell\n                    noBorder={noEndBorder && rows.length - 1 === key}\n                    align={cell.column.align ? cell.column.align : \"left\"}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render(\"Cell\")}\n                  </DataTableBodyCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n      <MDBox\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\n      >\n        {showTotalEntries && (\n          <MDBox mb={{ xs: 3, sm: 0 }}>\n            <MDTypography variant=\"button\" color=\"secondary\" fontWeight=\"regular\">\n              Showing {entriesStart} to {entriesEnd} of {rows.length} entries\n            </MDTypography>\n          </MDBox>\n        )}\n        {pageOptions.length > 1 && (\n          <MDPagination\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\n            color={pagination.color ? pagination.color : \"info\"}\n          >\n            {canPreviousPage && (\n              <MDPagination item onClick={() => previousPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_left</Icon>\n              </MDPagination>\n            )}\n            {renderPagination.length > 6 ? (\n              <MDBox width=\"5rem\" mx={1}>\n                <MDInput\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\n                  value={customizedPageOptions[pageIndex]}\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\n                />\n              </MDBox>\n            ) : (\n              renderPagination\n            )}\n            {canNextPage && (\n              <MDPagination item onClick={() => nextPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_right</Icon>\n              </MDPagination>\n            )}\n          </MDPagination>\n        )}\n      </MDBox>\n    </TableContainer>\n  );\n}\n\n// Setting default values for the props of DataTable\nDataTable.defaultProps = {\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\n  canSearch: false,\n  showTotalEntries: true,\n  pagination: { variant: \"gradient\", color: \"info\" },\n  isSorted: true,\n  noEndBorder: false,\n};\n\n// Typechecking props for the DataTable\nDataTable.propTypes = {\n  entriesPerPage: PropTypes.oneOfType([\n    PropTypes.shape({\n      defaultValue: PropTypes.number,\n      entries: PropTypes.arrayOf(PropTypes.number),\n    }),\n    PropTypes.bool,\n  ]),\n  canSearch: PropTypes.bool,\n  showTotalEntries: PropTypes.bool,\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\n  pagination: PropTypes.shape({\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"light\",\n    ]),\n  }),\n  isSorted: PropTypes.bool,\n  noEndBorder: PropTypes.bool,\n};\n\nexport default DataTable;\n","import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction SeriesModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function SeriesTableNew({ filtereddata, onOpenEditModal, onOpenDeleteModal }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        series: <SeriesModule name={`${v.name}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Series</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.series}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const initialValues = {\r\n    series: \"\",\r\n    //  status: \"on\"\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesAddModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Series\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"series\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesEditModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Series is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function SeriesDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    // status\r\n  } = editModalData;\r\n  const initialValues = {\r\n    series: name,\r\n    // status\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"series\"\r\n                  label=\"Series\"\r\n                  variant=\"outlined\"\r\n                  error={touched.series && Boolean(errors.series)}\r\n                  helperText={touched.series && errors.series}\r\n                  defaultValue={values.series}\r\n                  disabled\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={values.status !== \"off\"} disabled />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SeriesDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Icon from \"@mui/material/Icon\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// Material Dashboard 2 React components\r\n// import Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SeriesTable from \"./seriesTable\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport SeriesTableNew from \"./seriesTableNew\";\r\nimport { SeriesAddModal } from \"./modals/seriesAddModal\";\r\nimport { SeriesEditModal } from \"./modals/seriesEditModal\";\r\nimport { SeriesDeleteModal } from \"./modals/seriesDeleteModal\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Series() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return series;\r\n    }\r\n\r\n    const filteredSeries = series.filter((item) =>\r\n      item.name.toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredSeries;\r\n  }, [searchQuery, series]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/series/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(seriesActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <SeriesAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <SeriesEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <SeriesDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Series List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Series\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <SeriesTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Series;\r\n"],"names":["styled","Box","_ref","theme","ownerState","palette","functions","borders","boxShadows","variant","bgColor","color","opacity","borderRadius","shadow","coloredShadow","gradients","grey","white","linearGradient","radius","colored","greyColors","validColors","backgroundValue","find","el","main","state","colorValue","borderRadiusValue","boxShadowValue","background","boxShadow","MDBox","forwardRef","ref","rest","_jsx","MDBoxRoot","defaultProps","propTypes","PropTypes","Button","size","circular","iconOnly","darkMode","text","transparent","pxToRem","rgba","containedStyles","focusedBackgroundValue","focus","concat","hoveredBoxShadowValue","focusedColorValue","backgroundColor","outliedStyles","borderColorValue","borderColor","gradientStyles","dark","textStyles","section","iconOnlyStyles","sizeValue","paddingValue","width","minWidth","height","minHeight","padding","marginTop","transform","MDButton","children","controller","useMaterialUIController","MDButtonRoot","Typography","typography","textTransform","verticalAlign","fontWeight","textGradient","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","fontWeights","light","regular","medium","bold","textDecoration","backgroundImage","display","WebkitBackgroundClip","WebkitTextFillColor","position","zIndex","MDTypography","MDTypographyRoot","TextField","error","success","disabled","colorError","colorSuccess","pointerEvents","backgroundRepeat","backgroundPosition","backgroundSize","MDInput","MDInputRoot","paginationSize","active","fontSize","margin","sm","Context","createContext","MDPagination","item","context","useContext","value","useMemo","Provider","MDPaginationItemRoot","justifyContent","alignItems","sx","listStyle","DataTableHeadCell","sorted","align","component","py","px","_ref2","borderWidth","borderBottom","_jsxs","textAlign","_ref3","xxs","cursor","userSelect","top","right","left","_ref4","lg","Icon","DataTableBodyCell","noBorder","DataTable","entriesPerPage","canSearch","showTotalEntries","table","pagination","isSorted","noEndBorder","defaultValue","entries","map","toString","columns","data","rows","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","canPreviousPage","canNextPage","gotoPage","nextPage","previousPage","setPageSize","setGlobalFilter","pageSize","globalFilter","useEffect","renderPagination","option","onClick","Number","customizedPageOptions","search","setSearch","useState","onSearchChange","useAsyncDebounce","undefined","setSortedValue","column","sortedValue","isSortedDesc","entriesStart","entriesEnd","length","TableContainer","p","Autocomplete","disableClearable","options","onChange","event","newValue","parseInt","renderInput","params","ml","placeholder","fullWidth","currentTarget","Table","stickyHeader","headerGroup","TableRow","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","TableBody","row","key","getRowProps","cells","cell","getCellProps","flexDirection","xs","mb","mx","inputProps","type","min","max","target","SeriesModule","name","StyledTableCell","TableCell","tableCellClasses","StyledTableRow","action","hover","border","SeriesTableNew","filtereddata","onOpenEditModal","onOpenDeleteModal","setRows","Header","accessor","console","log","v","i","sno","series","_Fragment","Tooltip","title","placement","IconButton","IconEditCircle","IconTrash","TableHead","scope","validationSchema","yup","shape","required","SeriesAddModal","isOpen","onClose","onCloseEmpty","Dialog","open","DialogTitle","className","Close","Formik","initialValues","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","label","Boolean","helperText","focused","DialogActions","SeriesEditModal","editModalData","SeriesDeleteModal","createTheme","primary","secondary","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","dispatch","useDispatch","useLayoutEffect","seriesActions","useSelector","filteredData","trim","filter","toLowerCase","includes","searchInputRef","React","onCloseEmptyModal","searchTable","useCallback","_searchInputRef$curre","current","ThemeProvider","Backdrop","drawer","CircularProgress","async","response","axios","process","Grid","Card","CardContent","bgcolor","flex","autoFocus","toggleSearch","prevSearch","IconSearch","onOpenAddModal","IconPlus","Divider","val"],"sourceRoot":""}