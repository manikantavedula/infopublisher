{"version":3,"file":"static/js/164.ed992849.chunk.js","mappings":"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","sources":["layouts/animatedclasses/animatedClassesTableNew.js","layouts/animatedclasses/modals/animatedClassesAddModal.js","layouts/animatedclasses/modals/animatedClassesEditModal.js","layouts/animatedclasses/modals/animatedClassesDeleteModal.js","layouts/animatedclasses/modals/animatedClassesViewModal.js","layouts/animatedclasses/modals/animatedClassesVideoModal.js","layouts/animatedclasses/index.js","layouts/videoplayer/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction OnlineClassesModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function OnlineClassesTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"onlineClasses\", accessor: \"onlineClasses\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        onlineClasses: <OnlineClassesModule name={`${v.name}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">OnlineClasses</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row) => (\r\n              <StyledTableRow key={row.onlineClasses}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.onlineClasses}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[2].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { onlineClassesActions } from \"slices/onlineClasses\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/onlineClasses/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/onlineClasses/dataByOnlineClassesId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: \"\",\r\n    standard: \"\",\r\n    subject: \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    onlineClasses: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    onlineClassesId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add OnlineClasses\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">OnlineClasses</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-onlineClasses\"\r\n                            value={values.onlineClassesId}\r\n                            label=\"OnlineClasses\"\r\n                            error={touched.onlineClassesId && Boolean(errors.onlineClassesId)}\r\n                            helperText={touched.onlineClassesId && errors.onlineClassesId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"onlineClassesId\", event.target.value);\r\n                              fetchPart({ onlineClassesId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.onlineClassesId && touched.onlineClassesId\r\n                              ? errors.onlineClassesId\r\n                              : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                          helperText={touched.onlineClasses && errors.onlineClasses}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"onlineClasses\"\r\n                          label=\"OnlineClasses\"\r\n                          variant=\"outlined\"\r\n                          error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                          helperText={touched.onlineClasses && errors.onlineClasses}\r\n                          value={values.onlineClasses}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"onlineClasses\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          focused={values.onlineClasses !== \"\"}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : (\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        name=\"onlineClasses\"\r\n                        label=\"OnlineClasses\"\r\n                        variant=\"outlined\"\r\n                        error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                        helperText={touched.onlineClasses && errors.onlineClasses}\r\n                        value={values.onlineClasses}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"onlineClasses\", event.target.value);\r\n                        }}\r\n                        fullWidth\r\n                        focused={values.onlineClasses !== \"\"}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesAddModal;\r\n","import { useLayoutEffect, useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log({\r\n      ...values,\r\n    });\r\n    onClose({\r\n      ...values,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit OnlineClasses\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"onlineClasses\", event.target.value);\r\n                      }}\r\n                      focused\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesEditModal;\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesDeleteModal;\r\n","import { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  onlineClasses: yup.string().required(\"OnlineClasses is required\"),\r\n});\r\n\r\nexport function OnlineClassesViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name } = editModalData;\r\n\r\n  const initialValues = { onlineClasses: name };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"onlineClasses\"\r\n                      label=\"OnlineClasses\"\r\n                      variant=\"outlined\"\r\n                      error={touched.onlineClasses && Boolean(errors.onlineClasses)}\r\n                      helperText={touched.onlineClasses && errors.onlineClasses}\r\n                      defaultValue={values.onlineClasses}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default OnlineClassesViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function AnimatedClassesVideoModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (Part ${editModalData.partNo}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <VideoPlayer videoId={editModalData.animationVideoId} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AnimatedClassesVideoModal;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport MuiAccordion from \"@mui/material/Accordion\";\r\nimport MuiAccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Tab,\r\n  Tabs,\r\n  AppBar,\r\n  Button,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Grid,\r\n  Card,\r\n  Backdrop,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useCallback, useMemo, useEffect, useLayoutEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { commonActions } from \"slices/common\";\r\nimport { animatedClassesActions } from \"slices/animatedClasses\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport AnimatedClassesTableNew from \"./animatedClassesTableNew\";\r\nimport { AnimatedClassesAddModal } from \"./modals/animatedClassesAddModal\";\r\nimport { AnimatedClassesEditModal } from \"./modals/animatedClassesEditModal\";\r\nimport { AnimatedClassesDeleteModal } from \"./modals/animatedClassesDeleteModal\";\r\nimport { AnimatedClassesViewModal } from \"./modals/animatedClassesViewModal\";\r\nimport { AnimatedClassesVideoModal } from \"./modals/animatedClassesVideoModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RefreshToken } from \"layouts/callback\";\r\n\r\nimport whizkid from \"../../assets/images/whizkid.png\";\r\nimport smartlearn from \"../../assets/images/smartlearn.png\";\r\nimport globalsmart from \"../../assets/images/globalsmart.png\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\nimport { fontWeight } from \"@mui/system\";\r\n\r\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n// Create a custom theme with the desired color\r\nconst themes = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {\r\n    borderBottom: 0,\r\n  },\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AccordionSummary = styled((props) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\" ? \"rgba(255, 255, 255, .05)\" : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\r\n    transform: \"rotate(90deg)\",\r\n  },\r\n  \"& .MuiAccordionSummary-content\": {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nfunction AnimatedClasses() {\r\n  console.log(\"In AnimatedClasses\");\r\n\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const navigate = useNavigate;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [loginAccessRole, setLoginAccessRole] = useState(\"\");\r\n  const [allowedClassess, setAllowedClassess] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const animatedClasses = useSelector((state) => state.animatedClasses.data);\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n  const accessRole = decryptedObject.role;\r\n\r\n  const [filteredSchoolAnimatedClasses, setFilteredSchoolAnimatedClasses] =\r\n    useState(animatedClasses);\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(animatedClasses);\r\n\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSchoolAnimatedClasses);\r\n  }, [filteredSchoolAnimatedClasses]);\r\n\r\n  useEffect(() => {\r\n    console.log(animatedClasses);\r\n\r\n    if (!animatedClasses || animatedClasses.length <= 0) {\r\n      dispatch(animatedClassesActions.getAll());\r\n      setIsLoading(false);\r\n    } else if (animatedClasses && animatedClasses.length > 0) {\r\n      console.log(animatedClasses);\r\n\r\n      setFilteredSchoolAnimatedClasses(animatedClasses);\r\n\r\n      // const accessRole = localStorage.getItem(\"access_role\");\r\n\r\n      if (accessRole === \"school\") {\r\n        setLoginAccessRole(accessRole);\r\n\r\n        console.log(decryptedObject);\r\n\r\n        const inputString = decryptedObject[\"school_series\"];\r\n\r\n        // Split the input string by commas to get individual pairs\r\n        const pairs = inputString.split(\", \");\r\n\r\n        // Initialize an empty array to store the final result\r\n        const result = [];\r\n\r\n        // Iterate over each pair and extract the ID and standard numbers\r\n        pairs.forEach((pair) => {\r\n          const [id, standard] = pair.split(\"|-|\");\r\n\r\n          // Check if the ID already exists in the result array\r\n          const existingItem = result.find((item) => item.id === parseInt(id));\r\n          if (existingItem) {\r\n            // If the ID already exists, add the standard number to its 'standard' array\r\n            existingItem.standard.push(parseInt(standard));\r\n          } else {\r\n            // If the ID doesn't exist, create a new object and push it to the result array\r\n            result.push({\r\n              id: parseInt(id),\r\n              standard: [parseInt(standard)],\r\n            });\r\n          }\r\n        });\r\n\r\n        console.log(result);\r\n\r\n        setAllowedClassess(result);\r\n\r\n        // let filteredClasses = animatedClasses.filter((v) => {\r\n        //   return result.some((w) => v.series_id === w.id);\r\n        // });\r\n\r\n        let filteredClasses = animatedClasses\r\n          .filter((classObj) => {\r\n            return result.some((formodObj) => classObj.series_id === formodObj.id);\r\n          })\r\n          .map((classObj) => {\r\n            let filteredData = classObj.data.filter((dataObj) => {\r\n              return result.some(\r\n                (formodObj) =>\r\n                  classObj.series_id === formodObj.id &&\r\n                  formodObj.standard.includes(dataObj.standard_id)\r\n              );\r\n            });\r\n\r\n            return { ...classObj, data: filteredData };\r\n          });\r\n\r\n        console.log(animatedClasses, result, filteredClasses);\r\n\r\n        setFilteredSchoolAnimatedClasses(filteredClasses);\r\n      } else if (accessRole === \"student\") {\r\n        setLoginAccessRole(accessRole);\r\n\r\n        console.log(animatedClasses, decryptedObject);\r\n\r\n        let filteredClasses = animatedClasses\r\n          .map((classItem) => {\r\n            const matchingCriteria = decryptedObject.formatted_data.filter((criterion) => {\r\n              const [seriesId, standardId] = criterion.split(\"|-|\");\r\n              return (\r\n                classItem.series_id === parseInt(seriesId) &&\r\n                classItem.data.some((dataItem) => dataItem.standard_id === parseInt(standardId))\r\n              );\r\n            });\r\n\r\n            const filteredData = classItem.data.filter((dataItem) => {\r\n              return matchingCriteria.some((criterion) => {\r\n                const [seriesId, standardId] = criterion.split(\"|-|\");\r\n                return dataItem.standard_id === parseInt(standardId);\r\n              });\r\n            });\r\n\r\n            return { ...classItem, data: filteredData };\r\n          })\r\n          .filter((classItem) => {\r\n            return decryptedObject.formatted_data.some((criterion) => {\r\n              const [seriesId] = criterion.split(\"|-|\");\r\n              return classItem.series_id === parseInt(seriesId);\r\n            });\r\n          });\r\n\r\n        console.log(animatedClasses, filteredClasses);\r\n\r\n        setFilteredSchoolAnimatedClasses(filteredClasses);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n  }, [animatedClasses]);\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const [expandedSeries, setExpandedSeries] = useState(false);\r\n  const [expandedStandard, setExpandedStandard] = useState(false);\r\n  const [expandedSubject, setExpandedSubject] = useState(false);\r\n  const [expandedLesson, setExpandedLesson] = useState(false);\r\n  const [expandedParts, setExpandedParts] = useState(false);\r\n\r\n  const handleChangeAccSeries = (panel) => (event, newExpanded) => {\r\n    setExpandedSeries(newExpanded ? panel : false);\r\n    setExpandedStandard(false);\r\n    setExpandedSubject(false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccStandard = (panel) => (event, newExpanded) => {\r\n    setExpandedStandard(newExpanded ? panel : false);\r\n    setExpandedSubject(false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccSubject = (panel) => (event, newExpanded) => {\r\n    setExpandedSubject(newExpanded ? panel : false);\r\n    setExpandedLesson(false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccLesson = (panel) => (event, newExpanded) => {\r\n    setExpandedLesson(newExpanded ? panel : false);\r\n    setExpandedParts(false);\r\n  };\r\n\r\n  const handleChangeAccParts = (panel) => (event, newExpanded) => {\r\n    setExpandedParts(newExpanded ? panel : false);\r\n  };\r\n\r\n  function extractVideoId(url) {\r\n    let videoId = null;\r\n\r\n    // Match the video ID using regular expressions\r\n    const match = url.match(\r\n      /(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([^&?/]+)/\r\n    );\r\n\r\n    if (match) {\r\n      videoId = match[1];\r\n    }\r\n\r\n    return videoId;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {!isLoading && (\r\n        <>\r\n          {isOpen && whichModal === \"video\" ? (\r\n            <AnimatedClassesVideoModal\r\n              isOpen={isOpen}\r\n              onCloseEmpty={onCloseEmptyModal}\r\n              editModalData={editModalData}\r\n            />\r\n          ) : null}\r\n\r\n          {accessRole === \"other\" ? (\r\n            <Box sx={{ bgcolor: \"background.paper\", width: \"100%\" }}>\r\n              {filteredSchoolAnimatedClasses &&\r\n                filteredSchoolAnimatedClasses.length > 0 &&\r\n                filteredSchoolAnimatedClasses.map((v, i) => (\r\n                  <Accordion\r\n                    expanded={expandedSeries === `panelseries${i + 1}`}\r\n                    onChange={handleChangeAccSeries(`panelseries${i + 1}`)}\r\n                    key={`panelseries${i + 1}`}\r\n                  >\r\n                    <AccordionSummary\r\n                      aria-controls={`panelseries${i + 1}d-content`}\r\n                      id={`panelseries${i + 1}d-header`}\r\n                    >\r\n                      {/* <Typography>{v.name}</Typography> */}\r\n                      <Typography>\r\n                        {v.name === \"Whiz Kid\" ? (\r\n                          <img src={whizkid} width={100} />\r\n                        ) : v.name === \"Smart Learn\" ? (\r\n                          <img src={smartlearn} width={100} />\r\n                        ) : (\r\n                          <img src={globalsmart} width={100} />\r\n                        )}\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      {v.data.length > 0 &&\r\n                        v.data.map((w, j) => (\r\n                          <Accordion\r\n                            expanded={expandedStandard === `panelstandard${i + j + 1}`}\r\n                            onChange={handleChangeAccStandard(`panelstandard${i + j + 1}`)}\r\n                            key={`panelstandard${i + j + 1}`}\r\n                          >\r\n                            <AccordionSummary\r\n                              aria-controls={`panelstandard${i + j + 1}d-content`}\r\n                              id={`panelstandard${i + j + 1}d-header`}\r\n                            >\r\n                              <Typography>{w.name}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              {w.data.length > 0 &&\r\n                                w.data.map((x, k) => (\r\n                                  <Accordion\r\n                                    expanded={expandedSubject === `panelsubject${i + j + k + 1}`}\r\n                                    onChange={handleChangeAccSubject(\r\n                                      `panelsubject${i + j + k + 1}`\r\n                                    )}\r\n                                    key={`panelsubject${i + j + k + 1}`}\r\n                                  >\r\n                                    <AccordionSummary\r\n                                      aria-controls={`panelsubject${i + j + k + 1}d-content`}\r\n                                      id={`panelsubject${i + j + k + 1}d-header`}\r\n                                    >\r\n                                      <Typography>{x.name}</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                      {x.data.length > 0 &&\r\n                                        x.data.map((y, l) => (\r\n                                          <Accordion\r\n                                            expanded={\r\n                                              expandedLesson === `panellesson${i + j + k + l + 1}`\r\n                                            }\r\n                                            onChange={handleChangeAccLesson(\r\n                                              `panellesson${i + j + k + l + 1}`\r\n                                            )}\r\n                                            key={`panellesson${i + j + k + l + 1}`}\r\n                                          >\r\n                                            <AccordionSummary\r\n                                              aria-controls={`panellesson${\r\n                                                i + j + k + l + 1\r\n                                              }d-content`}\r\n                                              id={`panellesson${i + j + k + l + 1}d-header`}\r\n                                            >\r\n                                              <Typography>{y.name}</Typography>\r\n                                            </AccordionSummary>\r\n                                            <AccordionDetails>\r\n                                              {y.parts.length > 0 &&\r\n                                                y.parts.map((z, m) => (\r\n                                                  <Accordion\r\n                                                    expanded={\r\n                                                      expandedParts ===\r\n                                                      `panelparts${i + j + k + l + m + 1}`\r\n                                                    }\r\n                                                    onChange={handleChangeAccParts(\r\n                                                      `panelparts${i + j + k + l + m + 1}`\r\n                                                    )}\r\n                                                    key={`panelparts${i + j + k + l + m + 1}`}\r\n                                                  >\r\n                                                    <AccordionSummary\r\n                                                      aria-controls={`panelparts${\r\n                                                        i + j + k + l + m + 1\r\n                                                      }d-content`}\r\n                                                      id={`panelparts${\r\n                                                        i + j + k + l + m + 1\r\n                                                      }d-header`}\r\n                                                    >\r\n                                                      <Typography>{z.name}</Typography>\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                      {!z.animationVideoId ? null : (\r\n                                                        <Tooltip\r\n                                                          title=\"Animation Video\"\r\n                                                          placement=\"top\"\r\n                                                          className={z.animationVideoId}\r\n                                                        >\r\n                                                          <IconButton\r\n                                                            color=\"primary\"\r\n                                                            type=\"button\"\r\n                                                            onClick={() =>\r\n                                                              onOpenVideoModal({\r\n                                                                ...v,\r\n                                                                videoType: \"animation\",\r\n                                                                lessonIdName: y.name,\r\n                                                                name: z.name,\r\n                                                                partNo: z.partNo,\r\n                                                                animationVideoId: extractVideoId(\r\n                                                                  z.animationVideoId\r\n                                                                ),\r\n                                                              })\r\n                                                            }\r\n                                                          >\r\n                                                            <IconVideo size=\"24px\" />\r\n                                                          </IconButton>\r\n                                                        </Tooltip>\r\n                                                      )}\r\n                                                    </AccordionDetails>\r\n                                                  </Accordion>\r\n                                                ))}\r\n                                            </AccordionDetails>\r\n                                          </Accordion>\r\n                                        ))}\r\n                                    </AccordionDetails>\r\n                                  </Accordion>\r\n                                ))}\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                ))}\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ bgcolor: \"background.paper\", width: \"100%\" }}>\r\n              {filteredSchoolAnimatedClasses &&\r\n                filteredSchoolAnimatedClasses.length > 0 &&\r\n                filteredSchoolAnimatedClasses.map((v, i) => (\r\n                  <AccordionDetails>\r\n                    {v.data.length > 0 &&\r\n                      v.data.map((w, j) => (\r\n                        <Accordion\r\n                          expanded={\r\n                            expandedStandard === `panelstandard${v.name + w.name + i + j + 1}`\r\n                          }\r\n                          onChange={handleChangeAccStandard(\r\n                            `panelstandard${v.name + w.name + i + j + 1}`\r\n                          )}\r\n                          key={`panelstandard${i + j + 1}`}\r\n                        >\r\n                          <AccordionSummary\r\n                            aria-controls={`panelstandard${v.name + w.name + i + j + 1}d-content`}\r\n                            id={`panelstandard${v.name + w.name + i + j + 1}d-header`}\r\n                          >\r\n                            <Box>\r\n                              <Typography>\r\n                                {v.name === \"Whiz Kid\" ? (\r\n                                  <img src={whizkid} width={100} />\r\n                                ) : v.name === \"Smart Learn\" ? (\r\n                                  <img src={smartlearn} width={100} />\r\n                                ) : (\r\n                                  <img src={globalsmart} width={100} />\r\n                                )}{\" \"}\r\n                              </Typography>\r\n\r\n                              <Typography>\r\n                                <span\r\n                                  style={{\r\n                                    fontFamily: \"sans-serif\",\r\n                                    fontWeight: \"bold\",\r\n                                    fontSize: \"20px\",\r\n                                  }}\r\n                                >\r\n                                  {w.name} Class\r\n                                </span>\r\n                              </Typography>\r\n                            </Box>\r\n                          </AccordionSummary>\r\n                          <AccordionDetails>\r\n                            {w.data.length > 0 &&\r\n                              w.data.map((x, k) => (\r\n                                <Accordion\r\n                                  expanded={\r\n                                    expandedSubject ===\r\n                                    `panelsubject${v.name + w.name + x.name + i + j + k + 1}`\r\n                                  }\r\n                                  onChange={handleChangeAccSubject(\r\n                                    `panelsubject${v.name + w.name + x.name + i + j + k + 1}`\r\n                                  )}\r\n                                  key={`panelsubject${i + j + k + 1}`}\r\n                                >\r\n                                  <AccordionSummary\r\n                                    aria-controls={`panelsubject${\r\n                                      v.name + w.name + x.name + i + j + k + 1\r\n                                    }d-content`}\r\n                                    id={`panelsubject${\r\n                                      v.name + w.name + x.name + i + j + k + 1\r\n                                    }d-header`}\r\n                                  >\r\n                                    <Typography>{x.name}</Typography>\r\n                                  </AccordionSummary>\r\n                                  <AccordionDetails>\r\n                                    {x.data.length > 0 &&\r\n                                      x.data.map((y, l) => (\r\n                                        <Accordion\r\n                                          expanded={\r\n                                            expandedLesson ===\r\n                                            `panellesson${\r\n                                              v.name + w.name + x.name + y.name + i + j + k + l + 1\r\n                                            }`\r\n                                          }\r\n                                          onChange={handleChangeAccLesson(\r\n                                            `panellesson${\r\n                                              v.name + w.name + x.name + y.name + i + j + k + l + 1\r\n                                            }`\r\n                                          )}\r\n                                          key={`panellesson${\r\n                                            v.name + w.name + x.name + y.name + i + j + k + l + 1\r\n                                          }`}\r\n                                        >\r\n                                          <AccordionSummary\r\n                                            aria-controls={`panellesson${\r\n                                              v.name + w.name + x.name + y.name + i + j + k + l + 1\r\n                                            }d-content`}\r\n                                            id={`panellesson${\r\n                                              v.name + w.name + x.name + y.name + i + j + k + l + 1\r\n                                            }d-header`}\r\n                                          >\r\n                                            <Typography>{y.name}</Typography>\r\n                                          </AccordionSummary>\r\n                                          <AccordionDetails>\r\n                                            <Grid container spacing={2}>\r\n                                              {y.parts.length > 0 &&\r\n                                                y.parts.map(\r\n                                                  (z, m) =>\r\n                                                    z.animationVideoId && (\r\n                                                      <Grid item xs={4} sm={4} md={2}>\r\n                                                        <Box>\r\n                                                          <Tooltip\r\n                                                            title=\"Animation Video\"\r\n                                                            placement=\"top\"\r\n                                                            className={z.animationVideoId}\r\n                                                          >\r\n                                                            <IconButton\r\n                                                              color=\"error\"\r\n                                                              type=\"button\"\r\n                                                              onClick={() =>\r\n                                                                onOpenVideoModal({\r\n                                                                  ...v,\r\n                                                                  videoType: \"animation\",\r\n                                                                  lessonIdName: y.name,\r\n                                                                  name: z.name,\r\n                                                                  partNo: z.partNo,\r\n                                                                  animationVideoId: extractVideoId(\r\n                                                                    z.animationVideoId\r\n                                                                  ),\r\n                                                                })\r\n                                                              }\r\n                                                            >\r\n                                                              <YouTubeIcon\r\n                                                                sx={{ cursor: \"pointer\" }}\r\n                                                              />{\" \"}\r\n                                                            </IconButton>\r\n                                                          </Tooltip>\r\n                                                          <Typography>Part {m + 1}</Typography>\r\n                                                        </Box>\r\n                                                      </Grid>\r\n                                                    )\r\n                                                )}\r\n                                            </Grid>\r\n                                          </AccordionDetails>\r\n                                        </Accordion>\r\n                                      ))}\r\n                                  </AccordionDetails>\r\n                                </Accordion>\r\n                              ))}\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      ))}\r\n                  </AccordionDetails>\r\n                ))}\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default AnimatedClasses;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"names":["styled","TableCell","_ref2","theme","concat","tableCellClasses","backgroundColor","color","padding","fontSize","TableRow","_ref3","palette","action","hover","border","yup","shape","series","required","standard","subject","type","onlineClasses","AnimatedClassesVideoModal","_ref","isOpen","onCloseEmpty","editModalData","_jsxs","Dialog","open","fullWidth","children","_jsx","DialogTitle","className","Box","display","justifyContent","alignItems","lessonIdName","partNo","name","IconButton","onClick","Close","DialogContent","VideoPlayer","videoId","animationVideoId","createTheme","primary","main","secondary","Accordion","props","MuiAccordion","disableGutters","elevation","square","divider","borderBottom","AccordionSummary","MuiAccordionSummary","expandIcon","ArrowForwardIosSharpIcon","sx","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","borderTop","console","log","useTheme","value","setValue","useState","setIsOpen","useNavigate","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","loginAccessRole","setLoginAccessRole","allowedClassess","setAllowedClassess","dispatch","useDispatch","animatedClasses","useSelector","state","data","key","localStorage","getItem","decryptedObject","ciphertext","secretKey","plaintext","CryptoJS","toString","JSON","parse","decryptObject","accessRole","role","filteredSchoolAnimatedClasses","setFilteredSchoolAnimatedClasses","useLayoutEffect","useEffect","length","animatedClassesActions","pairs","split","result","forEach","pair","id","existingItem","find","item","parseInt","push","filteredClasses","filter","classObj","some","formodObj","series_id","map","filteredData","dataObj","includes","standard_id","classItem","matchingCriteria","formatted_data","criterion","seriesId","standardId","dataItem","onOpenVideoModal","val","expandedSeries","setExpandedSeries","expandedStandard","setExpandedStandard","expandedSubject","setExpandedSubject","expandedLesson","setExpandedLesson","expandedParts","setExpandedParts","handleChangeAccStandard","panel","event","newExpanded","handleChangeAccSubject","handleChangeAccLesson","handleChangeAccParts","extractVideoId","url","match","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","_Fragment","onCloseEmptyModal","bgcolor","width","v","i","expanded","onChange","Typography","src","whizkid","smartlearn","globalsmart","w","j","x","k","y","l","parts","z","m","Tooltip","title","placement","videoType","IconVideo","size","style","fontFamily","fontWeight","Grid","container","xs","sm","md","YouTubeIcon","cursor","ref","useRef","current","plyr","play","videoSrc","sources","provider","Plyr","source","options","autoplay"],"sourceRoot":""}