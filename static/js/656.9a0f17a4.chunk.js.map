{"version":3,"file":"static/js/656.9a0f17a4.chunk.js","mappings":"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","sources":["layouts/lesson/lessonTableNew.js","layouts/lesson/modals/lessonAddModal.js","layouts/lesson/modals/lessonEditModal.js","layouts/lesson/modals/lessonViewModal.js","layouts/lesson/modals/lessonVideoModal.js","layouts/lesson/modals/lessonDeleteModal.js","layouts/lesson/index.js","layouts/videoplayer/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, Tooltip, IconButton } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport {\r\n  IconEye,\r\n  IconSlideshow,\r\n  IconEditCircle,\r\n  IconEdit,\r\n  IconTrash,\r\n  IconVideo,\r\n} from \"@tabler/icons\";\r\n\r\nfunction LessonModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function LessonTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n  onOpenVideoModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"lesson\", accessor: \"lesson\", align: \"left\" },\r\n    // { Header: \"Lesson Name\", accessor: \"lessonname\", align: \"left\" },\r\n    { Header: \"Main/Part\", accessor: \"mainorpart\", align: \"left\" },\r\n    { Header: \"Part No\", accessor: \"partno\", align: \"left\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"right\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(filtereddata);\r\n  }, [filtereddata]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography\r\n            key={`${v.name}-${i}-sno`}\r\n            color=\"text\"\r\n            variant=\"h6\"\r\n            fontSize={\"16px\"}\r\n            fontWeight={400}\r\n          >\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        lesson: <LessonModule key={`${v.name}-${i}-lesson`} name={`${v.name}`} />,\r\n        mainorpart: <LessonModule key={`${v.name}-${i}-mainorpart`} name={`${v.type}`} />,\r\n        partno: (\r\n          <LessonModule\r\n            key={`${v.name}-${i}-partno`}\r\n            name={`${v.part_no === null ? \"-\" : v.part_no}`}\r\n          />\r\n        ),\r\n        // lessonname: (\r\n        //   <LessonModule\r\n        //     name={`${\r\n        //       v.type === \"main\"\r\n        //         ? \"-\"\r\n        //         : filtereddata.filter(\r\n        //             (w) =>\r\n        //               w.id == v.lesson_id &&\r\n        //               w.series === v.series &&\r\n        //               w.standard === v.standard &&\r\n        //               w.subject === v.subject\r\n        //           )[0]?.name\r\n        //     }`}\r\n        //   />\r\n        // ),\r\n        action: (\r\n          <>\r\n            {v.type === \"part\" && v.live_video_id !== null ? (\r\n              <Tooltip title=\"Live Video\" placement=\"top\" key={`${v.name}-${i}-action1`}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"live\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconVideo size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            {v.type === \"part\" && v.animation_video_id !== null && v.animation_video_id !== \"\" ? (\r\n              <Tooltip title=\"Animation Video\" placement=\"top\" key={`${v.name}-${i}-action2`}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    onOpenVideoModal({\r\n                      ...v,\r\n                      videoType: \"animation\",\r\n                      lessonIdName: filtereddata.filter(\r\n                        (w) =>\r\n                          w.id == v.lesson_id &&\r\n                          w.series === v.series &&\r\n                          w.standard === v.standard &&\r\n                          w.subject === v.subject\r\n                      )[0].name,\r\n                    })\r\n                  }\r\n                >\r\n                  <IconSlideshow size=\"24px\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            <Tooltip title=\"View\" placement=\"top\" key={`${v.name}-${i}-action3`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\" key={`${v.name}-${i}-action4`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\" key={`${v.name}-${i}-action5`}>\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">S.No</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Lesson</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Main or Part</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Part No</StyledTableCell>\r\n            {/* <StyledTableCell align=\"left\">Lesson Id</StyledTableCell> */}\r\n            {/* <StyledTableCell align=\"left\">Series</StyledTableCell> */}\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row, i) => (\r\n              <StyledTableRow key={`${row.lesson}-${row.action}-${i}`}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.lesson}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.mainorpart}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.partno}</StyledTableCell>\r\n                {/* <StyledTableCell align={columns[4].align}>{row.lessonname}</StyledTableCell> */}\r\n                {/* <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell> */}\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonAddModal({\r\n  isOpen,\r\n  onClose,\r\n  onCloseEmpty,\r\n  selectedValues: { selectedSeries, selectedStandard, selectedSubject },\r\n}) {\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n  const [partNo, setPartNo] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: selectedSeries || \"\",\r\n    standard: selectedStandard || \"\",\r\n    subject: selectedSubject || \"\",\r\n    type: \"main\",\r\n    typeOfVideos: \"\",\r\n    lesson: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    lessonId: \"\",\r\n    liveVideoId: \"\",\r\n    animationVideoId: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          setFieldValue(\"type\", \"\");\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonAddModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"series\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.seriesEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"standard\", event.target.value);\r\n                        }}\r\n                        defaultValue={values.standardEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"subject\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                        defaultValue={values.subjectEdit}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"type\", event.target.value);\r\n                          fetchData(values);\r\n                          console.log(values);\r\n                        }}\r\n                        disabled={\r\n                          values.series === \"\" || values.standard === \"\" || values.subject === \"\"\r\n                        }\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            onChange={(event) => {\r\n                              setFieldValue(\"lessonId\", event.target.value);\r\n                              fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                                setFieldValue(\"partNo\", partNo);\r\n                              });\r\n                              console.log(values);\r\n                            }}\r\n                            defaultValue={values.lessonId}\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"liveVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"animationVideoId\", event.target.value);\r\n                          }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"lesson\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                    />\r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type Of Videos</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-typeOfVideos\"\r\n                        value={values.typeOfVideos}\r\n                        label=\"Type Of Videos\"\r\n                        error={touched.typeOfVideos && Boolean(errors.typeOfVideos)}\r\n                        helperText={touched.typeOfVideos && errors.typeOfVideos}\r\n                        onChange={(event) => {\r\n                          setFieldValue(\"typeOfVideos\", event.target.value);\r\n                          console.log(values);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {typeOfVideos &&\r\n                          typeOfVideos.length > 0 &&\r\n                          typeOfVideos.map((v) => (\r\n                            <MenuItem value={v.name}>{capitalizeString(v.name)}</MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.typeOfVideos && touched.typeOfVideos ? errors.typeOfVideos : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonEditModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  series: yup.string().required(\"Please select an option\"),\r\n  standard: yup.string().required(\"Please select an option\"),\r\n  subject: yup.string().required(\"Please select an option\"),\r\n  type: yup.string().required(\"Please select an option\"),\r\n  // typeOfVideos: yup.string().required(\"Please select an option\"),\r\n  lesson: yup.string().required(\"Lesson is required\"),\r\n  lessonId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Lesson ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  partNo: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"Part Number is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n  videoId: yup.string().when(\"type\", {\r\n    is: \"part\",\r\n    then: yup.string().required(\"video ID is required\"),\r\n    otherwise: yup.string(),\r\n  }),\r\n});\r\n\r\nexport function LessonViewModal({ isOpen, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Lesson\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema}>\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonViewModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\nimport VideoPlayer from \"layouts/videoplayer\";\r\n\r\nexport function LessonVideoModal({ isOpen, onCloseEmpty, editModalData, videoType }) {\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            {`${editModalData.lessonIdName} (${editModalData.type} ${editModalData.part_no}) - ${editModalData.name}`}\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {videoType === \"live\" ? (\r\n          <VideoPlayer videoId={editModalData.live_video_id} />\r\n        ) : (\r\n          <VideoPlayer videoId={editModalData.animation_video_id} />\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonVideoModal;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Autocomplete,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { typeOfVideosActions } from \"slices/typeOfVideos\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { capitalizeString } from \"../../../utils/capitalize\";\r\n\r\nexport function LessonDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const {\r\n    name,\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    part_no,\r\n    lesson_id,\r\n    live_video_id,\r\n    animation_video_id,\r\n  } = editModalData;\r\n\r\n  const [fetchedOptions, setFetchedOptions] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n    dispatch(typeOfVideosActions.getAll());\r\n  }, []);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n  const typeOfVideos = useSelector((state) => state.typeOfVideos.data);\r\n\r\n  const fetchData = async (v) => {\r\n    console.log(v);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataById`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      setFetchedOptions(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchPart = async (v, cb) => {\r\n    console.log(v, cb);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/dataByLessonId`,\r\n        {\r\n          ...v,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data.length > 0) cb(response.data.length + 1);\r\n      else cb(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(series, standard, subject);\r\n  }, [series, standard, subject]);\r\n\r\n  const initialValues = {\r\n    series: seriesEdit,\r\n    standard: standardEdit,\r\n    subject: subjectEdit,\r\n    type,\r\n    typeOfVideos: \"\",\r\n    lesson: name,\r\n    partNo: part_no,\r\n    partName: name,\r\n    lessonId: lesson_id,\r\n    liveVideoId: live_video_id,\r\n    animationVideoId: animation_video_id,\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (type === \"part\") {\r\n      fetchData(initialValues);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Confirm Delete\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={values.series}\r\n                        label=\"Series\"\r\n                        error={touched.series && Boolean(errors.series)}\r\n                        helperText={touched.series && errors.series}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"series\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.seriesEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.series && touched.series ? errors.series : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={values.standard}\r\n                        label=\"Standard\"\r\n                        error={touched.standard && Boolean(errors.standard)}\r\n                        helperText={touched.standard && errors.standard}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"standard\", event.target.value);\r\n                        // }}\r\n                        defaultValue={values.standardEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={values.subject}\r\n                        label=\"Subject\"\r\n                        error={touched.subject && Boolean(errors.subject)}\r\n                        helperText={touched.subject && errors.subject}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"subject\", event.target.value);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        defaultValue={values.subjectEdit}\r\n                        disabled\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => <MenuItem value={v.id}>{v.name}</MenuItem>)}\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.subject && touched.subject ? errors.subject : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-type\"\r\n                        value={values.type}\r\n                        label=\"Type\"\r\n                        error={touched.type && Boolean(errors.type)}\r\n                        helperText={touched.type && errors.type}\r\n                        // onChange={(event) => {\r\n                        //   setFieldValue(\"type\", event.target.value);\r\n                        //   fetchData(values);\r\n                        //   console.log(values);\r\n                        // }}\r\n                        disabled\r\n                        defaultValue={values.type}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"main\">Main</MenuItem>\r\n                        <MenuItem value=\"part\">Part</MenuItem>\r\n                      </Select>\r\n                      <FormHelperText sx={{ color: \"red\" }}>\r\n                        {errors.type && touched.type ? errors.type : \"\"}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {values.type === \"part\" ? (\r\n                    <>\r\n                      <Grid item xs={6}>\r\n                        <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Lesson</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-part-lesson\"\r\n                            value={values.lessonId}\r\n                            label=\"Lesson\"\r\n                            error={touched.lessonId && Boolean(errors.lessonId)}\r\n                            helperText={touched.lessonId && errors.lessonId}\r\n                            // onChange={(event) => {\r\n                            //   setFieldValue(\"lessonId\", event.target.value);\r\n                            //   fetchPart({ lessonId: event.target.value }, (partNo) => {\r\n                            //     setFieldValue(\"partNo\", partNo);\r\n                            //   });\r\n                            //   console.log(values);\r\n                            // }}\r\n                            defaultValue={values.lessonId}\r\n                            disabled\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {fetchedOptions.map((option) => (\r\n                              <MenuItem key={option.id} value={option.id}>\r\n                                {option.name}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                          <FormHelperText sx={{ color: \"red\" }}>\r\n                            {errors.lessonId && touched.lessonId ? errors.lessonId : \"\"}\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"part_no\"\r\n                          label=\"Part No\"\r\n                          variant=\"outlined\"\r\n                          error={touched.partNo && Boolean(errors.partNo)}\r\n                          helperText={touched.partNo && errors.partNo}\r\n                          value={values.partNo}\r\n                          defaultValue={values.partNo}\r\n                          fullWidth\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"liveVideoId\"\r\n                          label=\"Live Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.liveVideoId && Boolean(errors.liveVideoId)}\r\n                          helperText={touched.liveVideoId && errors.liveVideoId}\r\n                          value={values.liveVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"liveVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.liveVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"animationVideoId\"\r\n                          label=\"Animation Video ID\"\r\n                          variant=\"outlined\"\r\n                          error={touched.animationVideoId && Boolean(errors.animationVideoId)}\r\n                          helperText={touched.animationVideoId && errors.animationVideoId}\r\n                          value={values.animationVideoId}\r\n                          // onChange={(event) => {\r\n                          //   setFieldValue(\"animationVideoId\", event.target.value);\r\n                          // }}\r\n                          fullWidth\r\n                          defaultValue={values.animationVideoId}\r\n                          disabled\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  ) : null}\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"lesson\"\r\n                      label=\"Lesson\"\r\n                      variant=\"outlined\"\r\n                      error={touched.lesson && Boolean(errors.lesson)}\r\n                      helperText={touched.lesson && errors.lesson}\r\n                      value={values.lesson}\r\n                      // onChange={(event) => {\r\n                      //   setFieldValue(\"lesson\", event.target.value);\r\n                      // }}\r\n                      defaultValue={values.name}\r\n                      fullWidth\r\n                      focused={values.lesson !== \"\"}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LessonDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { lessonActions } from \"slices/lesson\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { subjectActions } from \"slices/subject\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport LessonTableNew from \"./lessonTableNew\";\r\nimport { LessonAddModal } from \"./modals/lessonAddModal\";\r\nimport { LessonEditModal } from \"./modals/lessonEditModal\";\r\nimport { LessonViewModal } from \"./modals/lessonViewModal\";\r\nimport { LessonVideoModal } from \"./modals/lessonVideoModal\";\r\nimport { LessonDeleteModal } from \"./modals/lessonDeleteModal\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n  Select,\r\n  Menu,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormGroup,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ArchiveIcon from \"@mui/icons-material/Archive\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { IconSearch, IconPlus, IconFilter } from \"@tabler/icons\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"right\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  \"& .MuiPaper-root\": {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    minWidth: 180,\r\n    color: theme.palette.mode === \"light\" ? \"rgb(55, 65, 81)\" : theme.palette.grey[300],\r\n    boxShadow:\r\n      \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n    \"& .MuiMenu-list\": {\r\n      padding: \"4px 0\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      \"&:active\": {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Lesson() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [selectedSeries, setSelectedSeries] = useState(\"\");\r\n  const [selectedStandard, setSelectedStandard] = useState(\"\");\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(lessonActions.getAll());\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n    dispatch(subjectActions.getAll());\r\n  }, []);\r\n\r\n  const lesson = useSelector((state) => state.lesson.data);\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n  const subject = useSelector((state) => state.subject.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (\r\n      searchQuery.trim() === \"\" &&\r\n      selectedSeries === \"\" &&\r\n      selectedStandard === \"\" &&\r\n      selectedSubject === \"\"\r\n    ) {\r\n      return lesson;\r\n    }\r\n\r\n    const filteredLesson = lesson.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      const queryEmpty = searchQuery === \"\";\r\n      const seriesEmpty = selectedSeries === \"\";\r\n      const standardEmpty = selectedStandard === \"\";\r\n      const subjectEmpty = selectedSubject === \"\";\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return `${item.standard}` === `${selectedStandard}`;\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return `${item.subject}` === `${selectedSubject}`;\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Additional Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.standard}` === `${selectedStandard}` && `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      // Remaining Conditions\r\n\r\n      if (!queryEmpty && !seriesEmpty && !standardEmpty && subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && !seriesEmpty && standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && !standardEmpty && !subjectEmpty) {\r\n        return (\r\n          `${item.series}` === `${selectedSeries}` &&\r\n          `${item.standard}` === `${selectedStandard}` &&\r\n          `${item.subject}` === `${selectedSubject}`\r\n        );\r\n      }\r\n\r\n      if (queryEmpty && !seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return `${item.series}` === `${selectedSeries}`;\r\n      }\r\n\r\n      if (!queryEmpty && seriesEmpty && standardEmpty && subjectEmpty) {\r\n        return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n      }\r\n    });\r\n\r\n    return filteredLesson;\r\n  }, [searchQuery, lesson, selectedSeries, selectedStandard, selectedSubject]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenViewModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenVideoModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"video\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/lesson/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(lessonActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <LessonAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          selectedValues={{\r\n            selectedSeries,\r\n            selectedStandard,\r\n            selectedSubject,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <LessonEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <LessonDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <LessonViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"video\" ? (\r\n        <LessonVideoModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Lesson List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Tooltip title=\"Filter Table\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <IconFilter size=\"28px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <StyledMenu\r\n                  id=\"demo-customized-menu\"\r\n                  MenuListProps={{\r\n                    \"aria-labelledby\": \"demo-customized-button\",\r\n                  }}\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <Typography variant=\"h6\" fontWeight={500} color=\"primary\">\r\n                    Filter Table\r\n                  </Typography>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-series\"\r\n                        value={selectedSeries}\r\n                        label=\"Series\"\r\n                        onChange={(event) => {\r\n                          setSelectedSeries(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {series &&\r\n                          series.length > 0 &&\r\n                          series.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-standard\"\r\n                        value={selectedStandard}\r\n                        label=\"Standard\"\r\n                        onChange={(event) => {\r\n                          setSelectedStandard(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {standard &&\r\n                          standard.length > 0 &&\r\n                          standard.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-subject\"\r\n                        value={selectedSubject}\r\n                        label=\"Subject\"\r\n                        onChange={(event) => {\r\n                          setSelectedSubject(event.target.value);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {subject &&\r\n                          subject.length > 0 &&\r\n                          subject.map((v) => (\r\n                            <MenuItem key={`${v.name}-${v.id}`} value={v.id}>\r\n                              {v.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </MenuItem>\r\n                </StyledMenu>\r\n\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"outlined\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"25px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Lesson\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"28px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <LessonTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n            onOpenVideoModal={onOpenVideoModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Plyr from \"plyr-react\";\r\nimport \"plyr-react/dist/plyr.css\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    // Access the plyr instance and play the video\r\n    if (ref.current && ref.current.plyr) {\r\n      ref.current.plyr.play();\r\n    }\r\n  }, []);\r\n\r\n  const options = {\r\n    autoplay: true,\r\n  };\r\n\r\n  const videoSrc = {\r\n    type: \"video\",\r\n    sources: [\r\n      {\r\n        src: videoId,\r\n        provider: \"youtube\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const playerRef = useRef(null);\r\n  // const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;\r\n\r\n  // useEffect(() => {\r\n  //   console.log(videoId, videoUrl);\r\n  // }, []);\r\n\r\n  return <Plyr source={videoSrc} ref={ref} options={options} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"names":["LessonModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","theme","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref3","palette","action","hover","border","LessonTableNew","_ref4","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","onOpenVideoModal","rows","setRows","useState","columns","Header","accessor","align","useEffect","console","log","row","map","v","i","sno","lesson","mainorpart","type","partno","part_no","_jsxs","_Fragment","live_video_id","Tooltip","title","placement","IconButton","onClick","videoType","lessonIdName","filter","w","id","lesson_id","series","standard","subject","IconVideo","size","animation_video_id","IconSlideshow","IconEye","IconEditCircle","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","validationSchema","yup","shape","required","lessonId","when","is","then","otherwise","partNo","LessonAddModal","isOpen","onClose","onCloseEmpty","selectedValues","selectedSeries","selectedStandard","selectedSubject","fetchedOptions","setFetchedOptions","setPartNo","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","subjectActions","typeOfVideosActions","useSelector","state","data","typeOfVideos","initialValues","partName","liveVideoId","animationVideoId","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","FormControl","InputLabel","Select","labelId","value","label","error","Boolean","helperText","onChange","event","target","MenuItem","length","FormHelperText","async","response","axios","process","headers","fetchData","disabled","cb","fetchPart","option","TextField","focused","DialogActions","Button","LessonEditModal","editModalData","seriesEdit","standardEdit","subjectEdit","defaultValue","videoId","LessonViewModal","LessonVideoModal","VideoPlayer","LessonDeleteModal","createTheme","primary","main","secondary","StyledMenu","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","textAlign","mode","grey","text","marginRight","alpha","selectedOpacity","useTheme","setIsOpen","isLoading","setIsLoading","whichModal","setWhichModal","setEditModalData","searchQuery","setSearchQuery","isSearchOpen","setIsSearchOpen","setSelectedSeries","setSelectedStandard","setSelectedSubject","anchorEl","setAnchorEl","React","lessonActions","filteredData","useMemo","trim","toLowerCase","queryEmpty","seriesEmpty","standardEmpty","subjectEmpty","includes","searchInputRef","onCloseEmptyModal","searchTable","useCallback","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","p","currentTarget","IconFilter","MenuListProps","handleClose","disableRipple","ml","flex","placeholder","inputProps","autoFocus","toggleSearch","prevSearch","IconSearch","onOpenAddModal","IconPlus","Divider","val","ref","useRef","plyr","play","videoSrc","sources","src","provider","Plyr","source","options","autoplay"],"sourceRoot":""}