{"version":3,"file":"static/js/414.937f06b0.chunk.js","mappings":"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","sources":["components/MDInput/MDInputRoot.js","components/MDInput/index.js","components/MDPagination/MDPaginationItemRoot.js","components/MDPagination/index.js","examples/Tables/DataTable/DataTableHeadCell.js","examples/Tables/DataTable/DataTableBodyCell.js","examples/Tables/DataTable/index.js","layouts/standard/standardTable.js","layouts/standard/modals/standardAddModal.js","layouts/standard/modals/standardEditModal.js","layouts/standard/modals/standardDeleteModal.js","layouts/standard/index.js"],"sourcesContent":["// @mui material components\nimport TextField from \"@mui/material/TextField\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(TextField)(({ theme, ownerState }) => {\n  const { palette, functions } = theme;\n  const { error, success, disabled } = ownerState;\n\n  const { grey, transparent, error: colorError, success: colorSuccess } = palette;\n  const { pxToRem } = functions;\n\n  // styles for the input with error={true}\n  const errorStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23F44335' viewBox='0 0 12 12'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3E%3Ccircle cx='6' cy='8.2' r='.6' fill='%23F44335' stroke='none'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorError.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorError.main,\n    },\n  });\n\n  // styles for the input with success={true}\n  const successStyles = () => ({\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 8'%3E%3Cpath fill='%234CAF50' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: `right ${pxToRem(12)} center`,\n    backgroundSize: `${pxToRem(16)} ${pxToRem(16)}`,\n\n    \"& .Mui-focused\": {\n      \"& .MuiOutlinedInput-notchedOutline, &:after\": {\n        borderColor: colorSuccess.main,\n      },\n    },\n\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: colorSuccess.main,\n    },\n  });\n\n  return {\n    backgroundColor: disabled ? `${grey[200]} !important` : transparent.main,\n    pointerEvents: disabled ? \"none\" : \"auto\",\n    ...(error && errorStyles()),\n    ...(success && successStyles()),\n  };\n});\n","import { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDInput\nimport MDInputRoot from \"components/MDInput/MDInputRoot\";\n\nconst MDInput = forwardRef(({ error, success, disabled, ...rest }, ref) => (\n  <MDInputRoot {...rest} ref={ref} ownerState={{ error, success, disabled }} />\n));\n\n// Setting default values for the props of MDInput\nMDInput.defaultProps = {\n  error: false,\n  success: false,\n  disabled: false,\n};\n\n// Typechecking props for the MDInput\nMDInput.propTypes = {\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default MDInput;\n","// @mui material components\nimport { styled } from \"@mui/material/styles\";\n\n// Material Dashboard 2 React components\nimport MDButton from \"components/MDButton\";\n\nexport default styled(MDButton)(({ theme, ownerState }) => {\n  const { borders, functions, typography, palette } = theme;\n  const { variant, paginationSize, active } = ownerState;\n\n  const { borderColor } = borders;\n  const { pxToRem } = functions;\n  const { fontWeightRegular, size: fontSize } = typography;\n  const { light } = palette;\n\n  // width, height, minWidth and minHeight values\n  let sizeValue = pxToRem(36);\n\n  if (paginationSize === \"small\") {\n    sizeValue = pxToRem(30);\n  } else if (paginationSize === \"large\") {\n    sizeValue = pxToRem(46);\n  }\n\n  return {\n    borderColor,\n    margin: `0 ${pxToRem(2)}`,\n    pointerEvents: active ? \"none\" : \"auto\",\n    fontWeight: fontWeightRegular,\n    fontSize: fontSize.sm,\n    width: sizeValue,\n    minWidth: sizeValue,\n    height: sizeValue,\n    minHeight: sizeValue,\n\n    \"&:hover, &:focus, &:active\": {\n      transform: \"none\",\n      boxShadow: (variant !== \"gradient\" || variant !== \"contained\") && \"none !important\",\n      opacity: \"1 !important\",\n    },\n\n    \"&:hover\": {\n      backgroundColor: light.main,\n      borderColor,\n    },\n  };\n});\n","import { forwardRef, createContext, useContext, useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Custom styles for MDPagination\nimport MDPaginationItemRoot from \"components/MDPagination/MDPaginationItemRoot\";\n\n// The Pagination main context\nconst Context = createContext();\n\nconst MDPagination = forwardRef(\n  ({ item, variant, color, size, active, children, ...rest }, ref) => {\n    const context = useContext(Context);\n    const paginationSize = context ? context.size : null;\n\n    const value = useMemo(() => ({ variant, color, size }), [variant, color, size]);\n\n    return (\n      <Context.Provider value={value}>\n        {item ? (\n          <MDPaginationItemRoot\n            {...rest}\n            ref={ref}\n            variant={active ? context.variant : \"outlined\"}\n            color={active ? context.color : \"secondary\"}\n            iconOnly\n            circular\n            ownerState={{ variant, active, paginationSize }}\n          >\n            {children}\n          </MDPaginationItemRoot>\n        ) : (\n          <MDBox\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            sx={{ listStyle: \"none\" }}\n          >\n            {children}\n          </MDBox>\n        )}\n      </Context.Provider>\n    );\n  }\n);\n\n// Setting default values for the props of MDPagination\nMDPagination.defaultProps = {\n  item: false,\n  variant: \"gradient\",\n  color: \"info\",\n  size: \"medium\",\n  active: false,\n};\n\n// Typechecking props for the MDPagination\nMDPagination.propTypes = {\n  item: PropTypes.bool,\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  color: PropTypes.oneOf([\n    \"white\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  active: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default MDPagination;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nfunction DataTableHeadCell({ width, children, sorted, align, ...rest }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  return (\n    <MDBox\n      component=\"th\"\n      width={width}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, borders: { borderWidth } }) => ({\n        borderBottom: `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        {...rest}\n        position=\"relative\"\n        textAlign={align}\n        color={darkMode ? \"white\" : \"secondary\"}\n        opacity={0.7}\n        sx={({ typography: { size, fontWeightBold } }) => ({\n          fontSize: size.xxs,\n          fontWeight: fontWeightBold,\n          textTransform: \"uppercase\",\n          cursor: sorted && \"pointer\",\n          userSelect: sorted && \"none\",\n        })}\n      >\n        {children}\n        {sorted && (\n          <MDBox\n            position=\"absolute\"\n            top={0}\n            right={align !== \"right\" ? \"16px\" : 0}\n            left={align === \"right\" ? \"-5px\" : \"unset\"}\n            sx={({ typography: { size } }) => ({\n              fontSize: size.lg,\n            })}\n          >\n            <MDBox\n              position=\"absolute\"\n              top={-6}\n              color={sorted === \"asce\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"asce\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_up</Icon>\n            </MDBox>\n            <MDBox\n              position=\"absolute\"\n              top={0}\n              color={sorted === \"desc\" ? \"text\" : \"secondary\"}\n              opacity={sorted === \"desc\" ? 1 : 0.5}\n            >\n              <Icon>arrow_drop_down</Icon>\n            </MDBox>\n          </MDBox>\n        )}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableHeadCell\nDataTableHeadCell.defaultProps = {\n  width: \"auto\",\n  sorted: \"none\",\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableHeadCell\nDataTableHeadCell.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.node.isRequired,\n  sorted: PropTypes.oneOf([false, \"none\", \"asce\", \"desc\"]),\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableHeadCell;\n","// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\nfunction DataTableBodyCell({ noBorder, align, children }) {\n  return (\n    <MDBox\n      component=\"td\"\n      textAlign={align}\n      py={1.5}\n      px={3}\n      sx={({ palette: { light }, typography: { size }, borders: { borderWidth } }) => ({\n        fontSize: size.sm,\n        borderBottom: noBorder ? \"none\" : `${borderWidth[1]} solid ${light.main}`,\n      })}\n    >\n      <MDBox\n        display=\"inline-block\"\n        width=\"max-content\"\n        color=\"text\"\n        sx={{ verticalAlign: \"middle\" }}\n      >\n        {children}\n      </MDBox>\n    </MDBox>\n  );\n}\n\n// Setting default values for the props of DataTableBodyCell\nDataTableBodyCell.defaultProps = {\n  noBorder: false,\n  align: \"left\",\n};\n\n// Typechecking props for the DataTableBodyCell\nDataTableBodyCell.propTypes = {\n  children: PropTypes.node.isRequired,\n  noBorder: PropTypes.bool,\n  align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n};\n\nexport default DataTableBodyCell;\n","import { useMemo, useEffect, useState } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-table components\nimport { useTable, usePagination, useGlobalFilter, useAsyncDebounce, useSortBy } from \"react-table\";\n\n// @mui material components\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Icon from \"@mui/material/Icon\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDInput from \"components/MDInput\";\nimport MDPagination from \"components/MDPagination\";\n\n// Material Dashboard 2 React example components\nimport DataTableHeadCell from \"examples/Tables/DataTable/DataTableHeadCell\";\nimport DataTableBodyCell from \"examples/Tables/DataTable/DataTableBodyCell\";\n\nfunction DataTable({\n  entriesPerPage,\n  canSearch,\n  showTotalEntries,\n  table,\n  pagination,\n  isSorted,\n  noEndBorder,\n}) {\n  const defaultValue = entriesPerPage.defaultValue ? entriesPerPage.defaultValue : 10;\n  const entries = entriesPerPage.entries\n    ? entriesPerPage.entries.map((el) => el.toString())\n    : [\"5\", \"10\", \"15\", \"20\", \"25\"];\n  const columns = useMemo(() => table.columns, [table]);\n  const data = useMemo(() => table.rows, [table]);\n\n  const tableInstance = useTable(\n    { columns, data, initialState: { pageIndex: 0 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    pageOptions,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, globalFilter },\n  } = tableInstance;\n\n  // Set the default value for the entries per page when component mounts\n  useEffect(() => setPageSize(defaultValue || 10), [defaultValue]);\n\n  // Set the entries per page value based on the select value\n  const setEntriesPerPage = (value) => setPageSize(value);\n\n  // Render the paginations\n  const renderPagination = pageOptions.map((option) => (\n    <MDPagination\n      item\n      key={option}\n      onClick={() => gotoPage(Number(option))}\n      active={pageIndex === option}\n    >\n      {option + 1}\n    </MDPagination>\n  ));\n\n  // Handler for the input to set the pagination index\n  const handleInputPagination = ({ target: { value } }) =>\n    value > pageOptions.length || value < 0 ? gotoPage(0) : gotoPage(Number(value));\n\n  // Customized page options starting from 1\n  const customizedPageOptions = pageOptions.map((option) => option + 1);\n\n  // Setting value for the pagination input\n  const handleInputPaginationValue = ({ target: value }) => gotoPage(Number(value.value - 1));\n\n  // Search input value state\n  const [search, setSearch] = useState(globalFilter);\n\n  // Search input state handle\n  const onSearchChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 100);\n\n  // A function that sets the sorted value for the table\n  const setSortedValue = (column) => {\n    let sortedValue;\n\n    if (isSorted && column.isSorted) {\n      sortedValue = column.isSortedDesc ? \"desc\" : \"asce\";\n    } else if (isSorted) {\n      sortedValue = \"none\";\n    } else {\n      sortedValue = false;\n    }\n\n    return sortedValue;\n  };\n\n  // Setting the entries starting point\n  const entriesStart = pageIndex === 0 ? pageIndex + 1 : pageIndex * pageSize + 1;\n\n  // Setting the entries ending point\n  let entriesEnd;\n\n  if (pageIndex === 0) {\n    entriesEnd = pageSize;\n  } else if (pageIndex === pageOptions.length - 1) {\n    entriesEnd = rows.length;\n  } else {\n    entriesEnd = pageSize * (pageIndex + 1);\n  }\n\n  return (\n    <TableContainer sx={{ boxShadow: \"none\" }}>\n      {entriesPerPage || canSearch ? (\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" p={3}>\n          {entriesPerPage && (\n            <MDBox display=\"flex\" alignItems=\"center\">\n              <Autocomplete\n                disableClearable\n                value={pageSize.toString()}\n                options={entries}\n                onChange={(event, newValue) => {\n                  setEntriesPerPage(parseInt(newValue, 10));\n                }}\n                size=\"small\"\n                sx={{ width: \"5rem\" }}\n                renderInput={(params) => <MDInput {...params} />}\n              />\n              <MDTypography variant=\"caption\" color=\"secondary\">\n                &nbsp;&nbsp;entries per page\n              </MDTypography>\n            </MDBox>\n          )}\n          {canSearch && (\n            <MDBox width=\"12rem\" ml=\"auto\">\n              <MDInput\n                placeholder=\"Search...\"\n                value={search}\n                size=\"small\"\n                fullWidth\n                onChange={({ currentTarget }) => {\n                  setSearch(search);\n                  onSearchChange(currentTarget.value);\n                }}\n              />\n            </MDBox>\n          )}\n        </MDBox>\n      ) : null}\n      <Table stickyHeader {...getTableProps()}>\n        <MDBox component=\"thead\">\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <DataTableHeadCell\n                  {...column.getHeaderProps(isSorted && column.getSortByToggleProps())}\n                  width={column.width ? column.width : \"auto\"}\n                  align={column.align ? column.align : \"left\"}\n                  sorted={setSortedValue(column)}\n                >\n                  {column.render(\"Header\")}\n                </DataTableHeadCell>\n              ))}\n            </TableRow>\n          ))}\n        </MDBox>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row, key) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <DataTableBodyCell\n                    noBorder={noEndBorder && rows.length - 1 === key}\n                    align={cell.column.align ? cell.column.align : \"left\"}\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render(\"Cell\")}\n                  </DataTableBodyCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n      <MDBox\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", sm: \"row\" }}\n        justifyContent=\"space-between\"\n        alignItems={{ xs: \"flex-start\", sm: \"center\" }}\n        p={!showTotalEntries && pageOptions.length === 1 ? 0 : 3}\n      >\n        {showTotalEntries && (\n          <MDBox mb={{ xs: 3, sm: 0 }}>\n            <MDTypography variant=\"button\" color=\"secondary\" fontWeight=\"regular\">\n              Showing {entriesStart} to {entriesEnd} of {rows.length} entries\n            </MDTypography>\n          </MDBox>\n        )}\n        {pageOptions.length > 1 && (\n          <MDPagination\n            variant={pagination.variant ? pagination.variant : \"gradient\"}\n            color={pagination.color ? pagination.color : \"info\"}\n          >\n            {canPreviousPage && (\n              <MDPagination item onClick={() => previousPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_left</Icon>\n              </MDPagination>\n            )}\n            {renderPagination.length > 6 ? (\n              <MDBox width=\"5rem\" mx={1}>\n                <MDInput\n                  inputProps={{ type: \"number\", min: 1, max: customizedPageOptions.length }}\n                  value={customizedPageOptions[pageIndex]}\n                  onChange={(handleInputPagination, handleInputPaginationValue)}\n                />\n              </MDBox>\n            ) : (\n              renderPagination\n            )}\n            {canNextPage && (\n              <MDPagination item onClick={() => nextPage()}>\n                <Icon sx={{ fontWeight: \"bold\" }}>chevron_right</Icon>\n              </MDPagination>\n            )}\n          </MDPagination>\n        )}\n      </MDBox>\n    </TableContainer>\n  );\n}\n\n// Setting default values for the props of DataTable\nDataTable.defaultProps = {\n  entriesPerPage: { defaultValue: 10, entries: [5, 10, 15, 20, 25] },\n  canSearch: false,\n  showTotalEntries: true,\n  pagination: { variant: \"gradient\", color: \"info\" },\n  isSorted: true,\n  noEndBorder: false,\n};\n\n// Typechecking props for the DataTable\nDataTable.propTypes = {\n  entriesPerPage: PropTypes.oneOfType([\n    PropTypes.shape({\n      defaultValue: PropTypes.number,\n      entries: PropTypes.arrayOf(PropTypes.number),\n    }),\n    PropTypes.bool,\n  ]),\n  canSearch: PropTypes.bool,\n  showTotalEntries: PropTypes.bool,\n  table: PropTypes.objectOf(PropTypes.array).isRequired,\n  pagination: PropTypes.shape({\n    variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"light\",\n    ]),\n  }),\n  isSorted: PropTypes.bool,\n  noEndBorder: PropTypes.bool,\n};\n\nexport default DataTable;\n","import { useState, useEffect } from \"react\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n\r\n// Data\r\nimport MDButton from \"components/MDButton\";\r\n// import MDBadge from \"components/MDBadge\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\n// import { useMaterialUIController } from \"context\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\n\r\nfunction StandardModule({ name }) {\r\n  return (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDBox lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          {name}\r\n        </MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nfunction StandardTable({ filtereddata, onOpenEditModal, onOpenDeleteModal }) {\r\n  // const [controller] = useMaterialUIController();\r\n  // const { darkMode } = controller;\r\n  const [rows, setRows] = useState([]);\r\n  // const [filtereddata, setFilteredData] = useState([]);\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"standard\", accessor: \"standard\", align: \"left\" },\r\n    // { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n            {i + 1}\r\n          </MDTypography>\r\n        ),\r\n        standard: <StandardModule name={`${v.name}`} />,\r\n        // status: (\r\n        //   <MDBox ml={-1}>\r\n        //     <MDBadge\r\n        //       badgeContent={`${v.status}`}\r\n        //       color={v.status === \"on\" ? \"success\" : \"error\"}\r\n        //       variant=\"gradient\"\r\n        //       size=\"sm\"\r\n        //     />\r\n        //   </MDBox>\r\n        // ),\r\n        action: (\r\n          <ButtonGroup size=\"small\" variant=\"text\" aria-label=\"outlined primary button group\">\r\n            <MDButton color=\"success\" onClick={() => onOpenEditModal(v)} size=\"small\">\r\n              <Edit />\r\n            </MDButton>\r\n            <MDButton color=\"error\" onClick={() => onOpenDeleteModal(v)} size=\"small\">\r\n              <Delete />\r\n            </MDButton>\r\n          </ButtonGroup>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <MDBox pt={3}>\r\n      <DataTable\r\n        table={{ columns, rows }}\r\n        isSorted={false}\r\n        entriesPerPage={false}\r\n        showTotalEntries={false}\r\n        noEndBorder\r\n      />\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nexport default StandardTable;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  standard: yup.string().required(\"Standard is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function StandardAddModal({ isOpen, onClose, onCloseEmpty }) {\r\n  const initialValues = { standard: \"\" };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\">Add Standard</Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"standard\"\r\n                  label=\"Standard\"\r\n                  variant=\"outlined\"\r\n                  error={touched.standard && Boolean(errors.standard)}\r\n                  helperText={touched.standard && errors.standard}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"standard\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StandardAddModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  standard: yup.string().required(\"Standard is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function StandardEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const { name } = editModalData;\r\n  const initialValues = { standard: name };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\">Edit Standard</Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"standard\"\r\n                  label=\"Standard\"\r\n                  variant=\"outlined\"\r\n                  error={touched.standard && Boolean(errors.standard)}\r\n                  helperText={touched.standard && errors.standard}\r\n                  defaultValue={values.standard}\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"standard\", event.target.value);\r\n                  }}\r\n                  focused\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch\r\n                      sx={{ m: 1 }}\r\n                      checked={values.status !== \"off\"}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"status\", event.target.checked ? \"on\" : \"off\");\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StandardEditModal;\r\n","import Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\n// import { styled } from \"@mui/material/styles\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  standard: yup.string().required(\"Standard is required\"),\r\n});\r\n\r\n// const MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n//   width: 62,\r\n//   height: 34,\r\n//   padding: 7,\r\n//   \"& .MuiSwitch-switchBase\": {\r\n//     margin: 1,\r\n//     padding: 0,\r\n//     transform: \"translateX(6px)\",\r\n//     \"&.Mui-checked\": {\r\n//       color: \"#fff\",\r\n//       transform: \"translateX(22px)\",\r\n//       \"& .MuiSwitch-thumb:before\": {\r\n//         backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">On</text></svg>')`,\r\n//       },\r\n//       \"& + .MuiSwitch-track\": {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//       },\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-thumb\": {\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\",\r\n//     width: 32,\r\n//     height: 32,\r\n//     \"&:before\": {\r\n//       content: \"''\",\r\n//       position: \"absolute\",\r\n//       width: \"100%\",\r\n//       height: \"100%\",\r\n//       left: 0,\r\n//       top: 0,\r\n//       backgroundRepeat: \"no-repeat\",\r\n//       backgroundPosition: \"center\",\r\n//       backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><circle cx=\"64\" cy=\"64\" r=\"48\" fill=\"%23000\" opacity=\"0.3\"/><text x=\"50%\" y=\"50%\" fill=\"%23fff\" font-family=\"Arial\" font-size=\"40\" font-weight=\"bold\" text-anchor=\"middle\" alignment-baseline=\"middle\">Off</text></svg>')`,\r\n//     },\r\n//   },\r\n//   \"& .MuiSwitch-track\": {\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n//     borderRadius: 20 / 2,\r\n//     width: \"3rem\",\r\n//     height: \"1.2375rem\",\r\n//   },\r\n// }));\r\n\r\nexport function StandardDeleteModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  const { name } = editModalData;\r\n  const initialValues = { standard: name };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\">Confirm Delete</Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {({ values, handleSubmit, errors, touched }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <DialogContent>\r\n              <FormGroup row style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <TextField\r\n                  name=\"standard\"\r\n                  label=\"Standard\"\r\n                  variant=\"outlined\"\r\n                  error={touched.standard && Boolean(errors.standard)}\r\n                  helperText={touched.standard && errors.standard}\r\n                  defaultValue={values.standard}\r\n                  disabled\r\n                />\r\n\r\n                {/* <FormControlLabel\r\n                  style={{ display: \"flex\", justifyContent: \"flex-end\", marginLeft: 0 }}\r\n                  control={\r\n                    <MaterialUISwitch sx={{ m: 1 }} checked={values.status !== \"off\"} disabled />\r\n                  }\r\n                  label=\"Status\"\r\n                  labelPlacement=\"start\"\r\n                /> */}\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StandardDeleteModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback } from \"react\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Icon from \"@mui/material/Icon\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDButton from \"components/MDButton\";\r\nimport Footer from \"examples/Footer\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport StandardTable from \"./standardTable\";\r\nimport { StandardAddModal } from \"./modals/standardAddModal\";\r\nimport { StandardEditModal } from \"./modals/standardEditModal\";\r\nimport { StandardDeleteModal } from \"./modals/standardDeleteModal\";\r\n\r\nfunction Standard() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(standardActions.getAll());\r\n  }, []);\r\n\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return standard;\r\n    }\r\n\r\n    const filteredStandard = standard.filter((item) => {\r\n      console.log(item, item.name, item.name.toLowerCase(), searchQuery);\r\n      return item.name.toLowerCase().includes(searchQuery.trim().toLowerCase());\r\n    });\r\n\r\n    return filteredStandard;\r\n  }, [searchQuery, standard]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = () => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  };\r\n\r\n  const onOpenEditModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onOpenDeleteModal = (val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  };\r\n\r\n  const onCloseEmptyModal = () => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  };\r\n\r\n  const onCloseAddModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/standard/submit-form`,\r\n        {\r\n          standard: values.standard,\r\n          status: values.status,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      dispatch(standardActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/standard/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          standard: values.standard,\r\n          status: values.status,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(standardActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/standard/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          standard: values.standard,\r\n          status: values.status,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(standardActions.getAll());\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <StandardAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <StandardEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <StandardDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <MDBox>\r\n        <Grid spacing={12}>\r\n          <MDBox pt={2} px={2} display=\"flex\" justifyContent=\"flex-end\">\r\n            <MDButton color={!darkMode ? \"error\" : \"warning\"} onClick={onOpenAddModal}>\r\n              <Icon sx={{ fontWeight: \"bold\" }}>add</Icon>\r\n              &nbsp;add new Standard\r\n            </MDButton>\r\n          </MDBox>\r\n        </Grid>\r\n      </MDBox>\r\n\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <MDTypography variant=\"h6\" color=\"white\">\r\n                  Standard List\r\n                </MDTypography>\r\n\r\n                <TextField\r\n                  label=\"Search this table...\"\r\n                  color=\"success\"\r\n                  value={searchQuery}\r\n                  onChange={searchTable}\r\n                  variant=\"filled\"\r\n                  InputProps={\r\n                    !darkMode\r\n                      ? {\r\n                          style: {\r\n                            backgroundColor: \"white\",\r\n                          },\r\n                        }\r\n                      : { color: \"white\" }\r\n                  }\r\n                />\r\n              </MDBox>\r\n\r\n              <StandardTable\r\n                filtereddata={filteredData}\r\n                onOpenEditModal={onOpenEditModal}\r\n                onOpenDeleteModal={onOpenDeleteModal}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default Standard;\r\n"],"names":["styled","TextField","_ref","theme","ownerState","palette","functions","error","success","disabled","grey","transparent","colorError","colorSuccess","pxToRem","_objectSpread","backgroundColor","concat","main","pointerEvents","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","borderColor","color","MDInput","forwardRef","ref","rest","_objectWithoutProperties","_excluded","_jsx","MDInputRoot","defaultProps","propTypes","PropTypes","MDButton","borders","typography","variant","paginationSize","active","fontWeightRegular","fontSize","size","light","sizeValue","margin","fontWeight","sm","width","minWidth","height","minHeight","transform","boxShadow","opacity","Context","createContext","MDPagination","item","children","context","useContext","value","useMemo","Provider","MDPaginationItemRoot","iconOnly","circular","MDBox","display","justifyContent","alignItems","sx","listStyle","DataTableHeadCell","sorted","align","_useMaterialUIControl","useMaterialUIController","darkMode","_slicedToArray","component","py","px","_ref2","borderWidth","borderBottom","_jsxs","position","textAlign","_ref3","_ref3$typography","fontWeightBold","xxs","textTransform","cursor","userSelect","top","right","left","_ref4","lg","Icon","DataTableBodyCell","noBorder","verticalAlign","DataTable","entriesPerPage","canSearch","showTotalEntries","table","pagination","isSorted","noEndBorder","defaultValue","entries","map","el","toString","columns","data","rows","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","canPreviousPage","canNextPage","gotoPage","nextPage","previousPage","setPageSize","setGlobalFilter","_tableInstance$state","state","pageSize","globalFilter","useEffect","entriesEnd","renderPagination","option","onClick","Number","customizedPageOptions","_useState","useState","_useState2","search","setSearch","onSearchChange","useAsyncDebounce","undefined","setSortedValue","column","isSortedDesc","entriesStart","length","TableContainer","p","Autocomplete","disableClearable","options","onChange","event","newValue","parseInt","renderInput","params","MDTypography","ml","placeholder","fullWidth","currentTarget","Table","stickyHeader","headerGroup","TableRow","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","TableBody","row","key","getRowProps","cells","cell","getCellProps","flexDirection","xs","mb","mx","inputProps","type","min","max","target","StandardModule","name","lineHeight","filtereddata","onOpenEditModal","onOpenDeleteModal","setRows","_useState3","Header","accessor","console","log","v","i","sno","standard","action","ButtonGroup","Edit","Delete","pt","validationSchema","yup","shape","required","StandardAddModal","isOpen","onClose","onCloseEmpty","Dialog","open","DialogTitle","className","Box","padding","IconButton","Close","Formik","initialValues","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","label","Boolean","helperText","focused","DialogActions","Button","StandardEditModal","editModalData","StandardDeleteModal","setIsOpen","_useState4","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useState9","_useState10","searchQuery","setSearchQuery","dispatch","useDispatch","useLayoutEffect","standardActions","useSelector","filteredData","trim","filter","toLowerCase","includes","searchInputRef","React","onCloseEmptyModal","onCloseAddModal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","process","status","sent","t0","stop","_x","apply","arguments","onCloseEditModal","_callee2","_context2","_x2","onCloseDeleteModal","_callee3","_context3","_x3","searchTable","useCallback","_searchInputRef$curre","current","focus","DashboardLayout","DashboardNavbar","Backdrop","zIndex","drawer","CircularProgress","Grid","spacing","pb","container","Card","mt","bgColor","borderRadius","coloredShadow","InputProps","StandardTable","val","Footer"],"sourceRoot":""}