{"version":3,"file":"static/js/45.d4f53697.chunk.js","mappings":"wdAkBA,SAASA,EAAaC,GAAY,IAATC,EAAID,EAAJC,KACvB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,QAAQ,KAAKC,SAAU,OAAQC,WAAY,IAAIC,SACxEP,GAGP,CAEA,IAAMQ,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAkB,SAAAE,GAAA,IAAAC,EAAQD,EAALE,MAAK,OAAAD,EAAA,IAAAE,EAAAA,EAAAA,GAAAF,EAAA,KAAAG,OAC1CC,EAAAA,EAAAA,MAA0B,CAC9BC,gBAAiB,kBACjBC,MAAO,OACPC,QAAS,UACVL,EAAAA,EAAAA,GAAAF,EAAC,KAADG,OACKC,EAAAA,EAAAA,MAA0B,CAC9BX,SAAU,KACXO,CAAA,IAGGQ,GAAiBX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,EAAiB,SAAAa,GAAQ,MAAQ,CACtD,qBAAsB,CACpBL,gBAF4CK,EAALT,MAEhBU,QAAQC,OAAOC,OAGxC,mCAAoC,CAClCC,OAAQ,GAEX,IAEc,SAASC,EAAeC,GAKnC,IAJFC,EAAYD,EAAZC,aACAC,EAAeF,EAAfE,gBACAC,EAAiBH,EAAjBG,kBACAC,EAAeJ,EAAfI,gBAEAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,GAAkBL,EAAAA,EAAAA,UAAS,CACzB,CAAEM,OAAQ,OAAQC,SAAU,MAAOC,MAAO,QAC1C,CAAEF,OAAQ,eAAgBC,SAAU,eAAgBC,MAAO,QAC3D,CAAEF,OAAQ,SAAUC,SAAU,SAAUC,MAAO,QAC/C,CAAEF,OAAQ,WAAYC,SAAU,WAAYC,MAAO,QACnD,CAAEF,OAAQ,UAAWC,SAAU,UAAWC,MAAO,UACjD,CAAEF,OAAQ,SAAUC,SAAU,SAAUC,MAAO,YAN1CC,GAOLP,EAAAA,EAAAA,GAAAG,EAAA,GAPY,GAuDd,OA9CAK,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIT,EACd,GAAG,CAACA,KAEJO,EAAAA,EAAAA,YAAU,WACR,IAAIG,EAAM,GACVF,QAAQC,IAAIjB,GAERA,GAAiC,OAAjBA,IAClBkB,EAAMlB,EAAamB,KAAI,SAACC,EAAGC,GAAC,MAAM,CAChCC,KACElD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACgB,MAAM,OAAOd,QAAQ,KAAKC,SAAU,OAAQC,WAAY,IAAIC,SACrE2C,EAAI,IAGTE,SAASnD,EAAAA,EAAAA,KAACH,EAAa,CAACE,KAAI,GAAAe,OAAKkC,EAAEjD,QACnCqD,QAAQpD,EAAAA,EAAAA,KAACH,EAAa,CAACE,KAAI,GAAAe,OAAKkC,EAAEI,UAClCC,UAAUrD,EAAAA,EAAAA,KAACH,EAAa,CAACE,KAAI,GAAAe,OAAKkC,EAAEK,YACpCC,SAAStD,EAAAA,EAAAA,KAACH,EAAa,CAACE,KAAI,GAAAe,OAAKkC,EAAEM,WACnC/B,QACEgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlD,SAAA,EACEN,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,MAAM,OAAOC,UAAU,MAAKrD,UACnCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC3C,MAAM,UAAU4C,KAAK,SAASC,QAAS,kBAAM/B,EAAgBiB,EAAE,EAAC1C,UAC1EN,EAAAA,EAAAA,KAAC+D,EAAAA,IAAO,CAACC,KAAK,cAIlBhE,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,MAAM,OAAOC,UAAU,MAAKrD,UACnCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC3C,MAAM,UAAU4C,KAAK,SAASC,QAAS,kBAAMjC,EAAgBmB,EAAE,EAAC1C,UAC1EN,EAAAA,EAAAA,KAACiE,EAAAA,IAAc,CAACD,KAAK,cAIzBhE,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,MAAM,SAASC,UAAU,MAAKrD,UACrCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC3C,MAAM,UAAU4C,KAAK,SAASC,QAAS,kBAAMhC,EAAkBkB,EAAE,EAAC1C,UAC5EN,EAAAA,EAAAA,KAACkE,EAAAA,IAAS,CAACF,KAAK,gBAKzB,KAGH3B,EAAQS,EACV,GAAG,CAAClB,KAGF5B,EAAAA,EAAAA,KAACmE,EAAAA,EAAc,CAAA7D,UACbiD,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACC,GAAI,CAAEC,SAAU,IAAKC,UAAW,QAAUP,KAAK,QAAQ,aAAW,mBAAkB1D,SAAA,EACzFN,EAAAA,EAAAA,KAACwE,EAAAA,EAAS,CAAAlE,UACRiD,EAAAA,EAAAA,MAACnC,EAAAA,EAAQ,CAAAd,SAAA,EACPN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,UAC1CN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,aAC1CN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,YAC1CN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,cAC1CN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,aAC1CN,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAC,iBAG9CN,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAAnE,SACP8B,GACCA,EAAKW,KAAI,SAACD,EAAKG,GAAC,OACdM,EAAAA,EAAAA,MAACpC,EAAc,CAAAb,SAAA,EACbN,EAAAA,EAAAA,KAACO,EAAe,CAACmE,UAAU,KAAKC,MAAM,MAAMlC,MAAOC,EAAQ,GAAGD,MAAMnC,SACjEwC,EAAII,OAEPlD,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAEwC,EAAIK,WAC/CnD,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAEwC,EAAIM,UAC/CpD,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAEwC,EAAIO,YAC/CrD,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAEwC,EAAIQ,WAC/CtD,EAAAA,EAAAA,KAACO,EAAe,CAACkC,MAAOC,EAAQ,GAAGD,MAAMnC,SAAEwC,EAAIvB,WAR5BK,EAAaqB,GAAGlD,KASpB,UAM/B,C,8NCtGO,SAAS6E,GAAe9E,GAAmD,IAAD+E,EAA/CC,EAAMhF,EAANgF,OAAQC,EAAOjF,EAAPiF,QAASC,EAAYlF,EAAZkF,aAAcC,EAAYnF,EAAZmF,aAC/DjD,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDkD,EAAchD,EAAA,GAAEiD,EAAiBjD,EAAA,GAClCkD,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,SACX,GAAG,IAIH,IAAMpC,GAASqC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMtC,OAAOuC,IAAI,IACjDtC,GAAWoC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrC,SAASsC,IAAI,IAErDC,EAAMC,aAAaC,QAAQ,kBAE3BC,EAxBR,SAAuBC,EAAYC,GAEjC,IACMC,EADQC,KAAAA,IAAAA,QAAqBH,EAAYC,GACvBG,SAASD,KAAAA,IAAAA,MAGjC,OADAvD,QAAQC,IAAIqD,GACLG,KAAKC,MAAMJ,EACpB,CAiB0BK,CADAV,aAAaC,QAAQ,oBACUF,IAEvDjD,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIqC,EACd,GAAG,CAACA,KAEJvC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIO,GAGZ,IAAMoD,EAAcT,EAA+B,cAE7CU,GAAMC,EAAAA,EAAAA,GAAO,IAAIC,IAAIH,EAAYI,MAAM,MAAM7D,KAAI,SAACC,GAAC,OAAK6D,OAAO7D,EAAE4D,MAAM,OAAO,GAAG,MAEvFzB,EAAkB/B,GAAUA,EAAO0D,OAAS,GAAK1D,EAAOqD,QAAO,SAACzD,GAAC,OAAKyD,EAAOM,SAAS/D,EAAEgE,GAAG,IAC7F,GAAG,CAAC5D,KAEJT,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIQ,EACd,GAAG,CAACA,KAEJV,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIoC,EACd,GAAG,CAACA,IAEJ,IAAMgC,EAAmBC,EAAAA,KAAaC,OAAKtC,EAAA,CACzC9E,KAAMmH,EAAAA,KAAaE,SAAS,oBAC5BhE,OAAQ8D,EAAAA,KAAaE,SAAS,sBAC9B/D,SAAU6D,EAAAA,KAAaE,SAAS,wBAChC9D,QAAS4D,EAAAA,KAENG,QAAQ,WAAY,6BACpBC,KAAK,gBAAiB,yBAAwB,eAAA5G,GAAA6G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAgBC,GAAK,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAChEJ,IAAU1C,EAAY,CAAA4C,EAAAE,KAAA,eAAAF,EAAAG,OAAA,UACjB,GAAK,cAAAH,EAAAG,OAAA,UAEP,GAAI,wBAAAH,EAAAI,OAAA,GAAAP,EAAA,KACZ,gBAAAQ,GAAA,OAAAxH,EAAAyH,MAAA,KAAAC,UAAA,EAL8C,IAM9ChB,SAAS,4BACZiB,MAAOnB,EAAAA,KAEJmB,MAAM,yBACNhB,QAAQ,iCAAkC,yBAC1CD,SAAS,qBACZkB,QAASpB,EAAAA,KAAaE,SAAS,yBAAsBvG,EAAAA,EAAAA,GAAAgE,EAAC,SAC9CqC,EAAAA,KAAaE,SAAS,wBAAqBvG,EAAAA,EAAAA,GAAAgE,EAAC,WAC1CqC,EAAAA,KAAaE,SAAS,yBAAuBvC,IAGnD0D,EAAgB,CACpBxI,KAAM,GACNsI,MAAO,GACP/E,QAAS,GACTF,OAAQ,GACRC,SAAU,GACViF,QAAS,GACTE,eAAgB,CAAC,EACjBC,WAAY1C,EAAoB,IAQlC,OACExC,EAAAA,EAAAA,MAACmF,EAAAA,EAAM,CAACC,KAAM7D,EAAQ8D,WAAS,EAAAtI,SAAA,EAC7BN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACC,UAAU,+BAA8BxI,UACnDiD,EAAAA,EAAAA,MAACwF,EAAAA,EAAG,CAAC7I,QAAQ,OAAO8I,eAAe,gBAAgBC,WAAW,SAAQ3I,SAAA,EACpEN,EAAAA,EAAAA,KAAC+I,EAAAA,EAAG,CAAC7H,QAAQ,MAAMd,SAAU,GAAGE,SAAC,iBAIjCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACE,QAASkB,EAAa1E,UAChCN,EAAAA,EAAAA,KAACkJ,EAAAA,EAAK,YAIZlJ,EAAAA,EAAAA,KAACmJ,EAAAA,GAAM,CACLZ,cAAeA,EACftB,iBAAkBA,EAClBmC,SAAU,SAACC,GACTzG,QAAQC,IAAIwG,GAtBH,SAACA,GAChBzG,QAAQC,IAAIwG,GACZtE,EAAQsE,EACV,CAoBQD,CAASC,EACX,EAAE/I,SAED,SAAAK,GAAA,IAAG0I,EAAM1I,EAAN0I,OAAQC,EAAY3I,EAAZ2I,aAAcC,EAAM5I,EAAN4I,OAAQC,EAAO7I,EAAP6I,QAASC,EAAa9I,EAAb8I,cAAa,OACtDlG,EAAAA,EAAAA,MAACmG,EAAAA,GAAI,CACHN,SAAU,SAACpG,GACTJ,QAAQC,IAAIG,GACZsG,EAAatG,EACf,EAAE1C,SAAA,EAEFN,EAAAA,EAAAA,KAAC2J,EAAAA,EAAa,CAAArJ,UACZN,EAAAA,EAAAA,KAAC4J,EAAAA,EAAS,CACR9G,KAAG,EACH+G,MAAO,CACL3J,QAAS,OACT4J,cAAe,SACfd,eAAgB,iBAChB1I,UAEFiD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE3J,SAAA,EACzBN,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,OACLsK,MAAM,OACNlK,QAAQ,WACRmK,MAAOd,EAAQzJ,MAAQwK,QAAQhB,EAAOxJ,MACtCyK,WAAYhB,EAAQzJ,MAAQwJ,EAAOxJ,KACnC0K,SAAU,SAACC,GACTjB,EAAc,OAAQiB,EAAMC,OAAOhD,MACrC,EACAiB,WAAS,OAIb5I,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,QACLsK,MAAM,QACNlK,QAAQ,WACRmK,MAAOd,EAAQnB,OAASkC,QAAQhB,EAAOlB,OACvCmC,WAAYhB,EAAQnB,OAASkB,EAAOlB,MACpCoC,SAAU,SAACC,GACTjB,EAAc,QAASiB,EAAMC,OAAOhD,MACtC,EACAiB,WAAS,OAIbrF,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,SAAA,EACfN,EAAAA,EAAAA,KAAC4K,EAAAA,EAAc,CAACvG,GAAI,CAAEpD,MAAO,OAAQX,SAClC2E,GAAgB,4BAEnBjF,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNlK,QAAQ,WACRmK,MAAOd,EAAQlG,SAAWiH,QAAQhB,EAAOjG,SACzCkH,WAAYhB,EAAQlG,SAAWiG,EAAOjG,QACtCmH,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,EACAiB,WAAS,EACTiC,WAAY,CACVC,UAAW,IAEbzG,GAAI,CACF0G,aAAc,UAIjB7F,GAAqC,OAAnBA,GAA2BA,EAAe4B,OAAS,IACpEvD,EAAAA,EAAAA,MAACyH,EAAAA,EAAW,CAACpC,WAAS,EAAAtI,SAAA,EACpBN,EAAAA,EAAAA,KAACiL,EAAAA,EAAU,CAACjE,GAAG,2BAA0B1G,SAAC,YAC1CiD,EAAAA,EAAAA,MAAC2H,EAAAA,EAAM,CACLC,QAAQ,2BACRnE,GAAG,qBACHW,MAAO0B,EAAOjG,OACdiH,MAAM,SACNC,MAAOd,EAAQpG,QAAUmH,QAAQhB,EAAOnG,QACxCoH,WAAYhB,EAAQpG,QAAUmG,EAAOnG,OACrCqH,SAAU,SAACC,GACTjB,EAAc,SAAUiB,EAAMC,OAAOhD,MACvC,EACAtD,GAAI,CACF0G,aAAc,QACdzK,SAAA,EAEFN,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAACzD,MAAM,GAAErH,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL4E,GACCA,EAAe4B,OAAS,GACxB5B,EAAenC,KAAI,SAACC,GAAC,OAAKhD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAACzD,MAAO3E,EAAE1C,SAAE0C,EAAEjD,MAAgB,QAErEC,EAAAA,EAAAA,KAAC4K,EAAAA,EAAc,CAACvG,GAAI,CAAEpD,MAAO,OAAQX,SAClCiJ,EAAOnG,QAAUoG,EAAQpG,OAASmG,EAAOnG,OAAS,QAKxDC,GAAyB,OAAbA,GAAqBA,EAASyD,OAAS,IAClDvD,EAAAA,EAAAA,MAACyH,EAAAA,EAAW,CAACpC,WAAS,EAAAtI,SAAA,EACpBN,EAAAA,EAAAA,KAACiL,EAAAA,EAAU,CAACjE,GAAG,2BAA0B1G,SAAC,cAC1CiD,EAAAA,EAAAA,MAAC2H,EAAAA,EAAM,CACLC,QAAQ,2BACRnE,GAAG,uBACHW,MAAO0B,EAAOhG,SACdgH,MAAM,WACNC,MAAOd,EAAQnG,UAAYkH,QAAQhB,EAAOlG,UAC1CmH,WAAYhB,EAAQnG,UAAYkG,EAAOlG,SACvCoH,SAAU,SAACC,GACTjB,EAAc,WAAYiB,EAAMC,OAAOhD,MACzC,EACAtD,GAAI,CACF0G,aAAc,QACdzK,SAAA,EAEFN,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAACzD,MAAM,GAAErH,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,WAEL+C,GACCA,EAASyD,OAAS,GAClBzD,EAASN,KAAI,SAACC,GAAC,OAAKhD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAACzD,MAAO3E,EAAE1C,SAAE0C,EAAEjD,MAAgB,QAE/DC,EAAAA,EAAAA,KAAC4K,EAAAA,EAAc,CAACvG,GAAI,CAAEpD,MAAO,OAAQX,SAClCiJ,EAAOlG,UAAYmG,EAAQnG,SAAWkG,EAAOlG,SAAW,YAMjErD,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNgB,WAAS,EACTjJ,KAAM,EACNkJ,YAAY,UACZC,aAAa,GACb1B,MAAO,CAAE2B,MAAO,QAChBlB,MAAOd,EAAQlB,SAAWiC,QAAQhB,EAAOjB,SACzCkC,WAAYhB,EAAQlB,SAAWiB,EAAOjB,QACtCmC,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,cAMV3H,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAAnL,UACZN,EAAAA,EAAAA,KAAC0L,EAAAA,EAAM,CAAC7H,KAAK,SAAS5C,MAAM,UAASX,SAAC,eAInC,MAKjB,CAEA,I,YC5RM2G,GAAmBC,EAAAA,KAAaC,MAAM,CAC1ChE,QAAS+D,EAAAA,KAAaE,SAAS,uBAC/B9D,QAAS4D,EAAAA,KAENG,QAAQ,WAAY,6BACpBD,SAAS,4BACZkB,QAASpB,EAAAA,KAAaE,SAAS,uBAC/BuE,eAAgBzE,EAAAA,KAAY0E,IAAI,EAAG,uCAG9B,SAASC,GAAgB/L,GAAoD,IAAjDgF,EAAMhF,EAANgF,OAAQC,EAAOjF,EAAPiF,QAASC,EAAYlF,EAAZkF,aAAc8G,EAAahM,EAAbgM,cAExD/L,EAA2C+L,EAA3C/L,KAAMuD,EAAqCwI,EAArCxI,QAASgF,EAA4BwD,EAA5BxD,QAASqD,EAAmBG,EAAnBH,eAC1BvG,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,SACX,GAAG,IAIH,IAAMnC,GAASqC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMtC,OAAOuC,IAAI,KAEvDhD,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIO,EAKd,GAAG,CAACA,IAEJ,IAAMmF,EAAgB,CACpBpF,QAASpD,EACTuD,QAAAA,EACAgF,QAAAA,EAEAqD,eAAAA,IAGFhJ,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI0F,EACd,GAAG,CAACA,IAOJ,OACEhF,EAAAA,EAAAA,MAACmF,EAAAA,EAAM,CAACC,KAAM7D,EAAQ8D,WAAS,EAAAtI,SAAA,EAC7BN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACC,UAAU,+BAA8BxI,UACnDiD,EAAAA,EAAAA,MAACwF,EAAAA,EAAG,CAAC7I,QAAQ,OAAO8I,eAAe,gBAAgBC,WAAW,SAAQ3I,SAAA,EACpEN,EAAAA,EAAAA,KAAC+I,EAAAA,EAAG,CAAC7H,QAAQ,MAAMd,SAAU,GAAGE,SAAC,kBAIjCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACE,QAASkB,EAAa1E,UAChCN,EAAAA,EAAAA,KAACkJ,EAAAA,EAAK,YAIZlJ,EAAAA,EAAAA,KAACmJ,EAAAA,GAAM,CACLZ,cAAeA,EACftB,iBAAkBA,GAClBmC,SAAU,SAACC,GACTzG,QAAQC,IAAIwG,GAtBH,SAACA,GAChBzG,QAAQC,IAAIwG,GACZtE,EAAQsE,EACV,CAoBQD,CAASC,EACX,EAAE/I,SAED,SAAAI,GAAA,IAAG2I,EAAM3I,EAAN2I,OAAQC,EAAY5I,EAAZ4I,aAAcC,EAAM7I,EAAN6I,OAAQC,EAAO9I,EAAP8I,QAASC,EAAa/I,EAAb+I,cAAa,OACtDlG,EAAAA,EAAAA,MAACmG,EAAAA,GAAI,CACHN,SAAU,SAACpG,GACTJ,QAAQC,IAAIG,GACZsG,EAAatG,EACf,EAAE1C,SAAA,EAEFN,EAAAA,EAAAA,KAAC2J,EAAAA,EAAa,CAAArJ,UACZN,EAAAA,EAAAA,KAAC4J,EAAAA,EAAS,CACR9G,KAAG,EACH+G,MAAO,CACL3J,QAAS,OACT4J,cAAe,SACfd,eAAgB,iBAChB1I,UAEFiD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE3J,SAAA,EACzBN,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNlK,QAAQ,WACRmK,MAAOd,EAAQrG,SAAWoH,QAAQhB,EAAOpG,SACzCqH,WAAYhB,EAAQrG,SAAWoG,EAAOpG,QACtCsH,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,EACA4D,aAAclC,EAAOlG,QACrByF,WAAS,OAIb5I,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNlK,QAAQ,WACRmK,MAAOd,EAAQlG,SAAWiH,QAAQhB,EAAOjG,SACzCkH,WAAYhB,EAAQlG,SAAWiG,EAAOjG,QACtCmH,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,EACAiB,WAAS,EACTiC,WAAY,CACVC,UAAW,IAEbS,aAAclC,EAAO/F,aAIzBtD,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNgB,WAAS,EACTjJ,KAAM,EACNkJ,YAAY,UACZC,aAAclC,EAAOf,QACrBuB,MAAO,CAAE2B,MAAO,QAChBlB,MAAOd,EAAQlB,SAAWiC,QAAQhB,EAAOjB,SACzCkC,WAAYhB,EAAQlB,SAAWiB,EAAOjB,QACtCmC,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,OAIJ3H,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,SACd8C,GAAqB,OAAXA,GAAmBA,EAAO0D,OAAS,IAC5C9G,EAAAA,EAAAA,KAAC+L,GAAAA,EAAY,CACXC,UAAQ,EACRhF,GAAG,gBACHiF,QAAS7I,GAAqB,OAAXA,GAAmBA,EAAO0D,OAAS,GAAK1D,EAC3D8I,eAAgB,SAACC,GAAM,OAAKA,EAAOpM,IAAI,EACvCqM,qBAAsB,SAACD,EAAQxE,GAAK,OAAKwE,EAAOpM,OAAS4H,EAAM5H,IAAI,EACnEsM,uBAAqB,EAErBd,cAAY7E,EAAAA,EAAAA,GACPtD,EAAOqD,QAAO,SAACzD,GAAC,OAAKqG,EAAOsC,eAAe5E,SAAS/D,EAAEjD,KAAK,KAEhEuM,cAAe,SAACC,EAAGC,GACjB,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,GACtB/C,EAAc,iBAAkB+C,EAClC,EACA/B,SAAU,SAAC8B,EAAGC,GACZ,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,GACtB/C,EAAc,iBAAkB+C,EAClC,EACAE,YAAa,SAACC,GAAM,OAClB3M,EAAAA,EAAAA,KAACoK,EAAAA,GAASwC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVxM,QAAQ,WACRkK,MAAM,gBACNiB,YAAY,SACZhB,MAAOd,EAAQmC,gBAAkBpB,QAAQhB,EAAOoC,gBAChDnB,WAAYhB,EAAQmC,gBAAkBpC,EAAOoC,iBAC7C,cAQhB3L,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAAnL,UACZN,EAAAA,EAAAA,KAAC0L,EAAAA,EAAM,CAAC7H,KAAK,SAAS5C,MAAM,UAASX,SAAC,eAInC,MAKjB,CCrLO,SAASuM,GAAkB/M,GAAkE,IAAD+E,EAA9DC,EAAMhF,EAANgF,OAAQC,EAAOjF,EAAPiF,QAASC,EAAYlF,EAAZkF,aAAcC,EAAYnF,EAAZmF,aAClEjD,GAD6FlC,EAAbgM,eACpC7J,EAAAA,EAAAA,UAAS,KAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDkD,EAAchD,EAAA,GAAEiD,EAAiBjD,EAAA,GAClCkD,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,SACX,GAAG,IAIH,IAAMpC,GAASqC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMtC,OAAOuC,IAAI,IACjDtC,GAAWoC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrC,SAASsC,IAAI,KAE3DhD,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIqC,EACd,GAAG,CAACA,KAEJvC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIO,GAEZ,IAAMoD,EAAcH,KAAKC,MAAMT,aAAaC,QAAQ,qBAAoC,cAElFW,GAAMC,EAAAA,EAAAA,GAAO,IAAIC,IAAIH,EAAYI,MAAM,MAAM7D,KAAI,SAACC,GAAC,OAAK6D,OAAO7D,EAAE4D,MAAM,OAAO,GAAG,MAEvFzB,EAAkB/B,GAAUA,EAAO0D,OAAS,GAAK1D,EAAOqD,QAAO,SAACzD,GAAC,OAAKyD,EAAOM,SAAS/D,EAAEgE,GAAG,IAC7F,GAAG,CAAC5D,KAEJT,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIQ,EACd,GAAG,CAACA,KAEJV,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIoC,EACd,GAAG,CAACA,IAEJ,IAAMgC,EAAmBC,EAAAA,KAAaC,OAAKtC,EAAA,CACzC9E,KAAMmH,EAAAA,KAAaE,SAAS,oBAC5BhE,OAAQ8D,EAAAA,KAAaE,SAAS,sBAC9B/D,SAAU6D,EAAAA,KAAaE,SAAS,wBAChC9D,QAAS4D,EAAAA,KAENG,QAAQ,WAAY,6BACpBC,KAAK,gBAAiB,0BAA0B,SAAUK,GACzD,OAAIA,IAAU1C,CAIhB,IACCmC,SAAS,4BACZiB,MAAOnB,EAAAA,KAEJmB,MAAM,yBACNhB,QAAQ,iCAAkC,yBAC1CD,SAAS,qBACZkB,QAASpB,EAAAA,KAAaE,SAAS,yBAAsBvG,EAAAA,EAAAA,GAAAgE,EAAC,SAC9CqC,EAAAA,KAAaE,SAAS,wBAAqBvG,EAAAA,EAAAA,GAAAgE,EAAC,WAC1CqC,EAAAA,KAAaE,SAAS,yBAAuBvC,IAGnD0D,EAAgB,CACpBxI,KAAM,GACNsI,MAAO,GACP/E,QAAS,GACTF,OAAQ,GACRC,SAAU,GACViF,QAAS,GACTE,eAAgB,CAAC,EACjBC,WAAYpC,KAAKC,MAAMT,aAAaC,QAAQ,qBAAyB,IAQvE,OACEvC,EAAAA,EAAAA,MAACmF,EAAAA,EAAM,CAACC,KAAM7D,EAAQ8D,WAAS,EAAAtI,SAAA,EAC7BN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACC,UAAU,+BAA8BxI,UACnDiD,EAAAA,EAAAA,MAACwF,EAAAA,EAAG,CAAC7I,QAAQ,OAAO8I,eAAe,gBAAgBC,WAAW,SAAQ3I,SAAA,EACpEN,EAAAA,EAAAA,KAAC+I,EAAAA,EAAG,CAAC7H,QAAQ,MAAMd,SAAU,GAAGE,SAAC,iBAIjCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACE,QAASkB,EAAa1E,UAChCN,EAAAA,EAAAA,KAACkJ,EAAAA,EAAK,YAIZlJ,EAAAA,EAAAA,KAACmJ,EAAAA,GAAM,CACLZ,cAAeA,EACftB,iBAAkBA,EAClBmC,SAAU,SAACC,GACTzG,QAAQC,IAAIwG,GAtBH,SAACA,GAChBzG,QAAQC,IAAIwG,GACZtE,EAAQsE,EACV,CAoBQD,CAASC,EACX,EAAE/I,SAED,SAAAI,GAAA,IAAG4I,EAAY5I,EAAZ4I,aAAcC,EAAM7I,EAAN6I,OAAQC,EAAO9I,EAAP8I,QAASC,EAAa/I,EAAb+I,cAAa,OAC9ClG,EAAAA,EAAAA,MAACmG,EAAAA,GAAI,CACHN,SAAU,SAACpG,GACTJ,QAAQC,IAAIG,GACZsG,EAAatG,EACf,EAAE1C,SAAA,EAEFN,EAAAA,EAAAA,KAAC2J,EAAAA,EAAa,CAAArJ,UACZN,EAAAA,EAAAA,KAAC4J,EAAAA,EAAS,CACR9G,KAAG,EACH+G,MAAO,CACL3J,QAAS,OACT4J,cAAe,SACfd,eAAgB,iBAChB1I,UAEFiD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE3J,SAAA,EACzBN,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,OACLsK,MAAM,OACNlK,QAAQ,WACRmK,MAAOd,EAAQzJ,MAAQwK,QAAQhB,EAAOxJ,MACtCyK,WAAYhB,EAAQzJ,MAAQwJ,EAAOxJ,KACnC0K,SAAU,SAACC,GACTjB,EAAc,OAAQiB,EAAMC,OAAOhD,MACrC,EACAiB,WAAS,EACTkE,UAAQ,OAIZ9M,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,QACLsK,MAAM,QACNlK,QAAQ,WACRmK,MAAOd,EAAQnB,OAASkC,QAAQhB,EAAOlB,OACvCmC,WAAYhB,EAAQnB,OAASkB,EAAOlB,MACpCoC,SAAU,SAACC,GACT,EAEF9B,WAAS,EACTkE,UAAQ,OAIZvJ,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,SAAA,EACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNlK,QAAQ,WACRmK,MAAOd,EAAQlG,SAAWiH,QAAQhB,EAAOjG,SACzCkH,WAAYhB,EAAQlG,SAAWiG,EAAOjG,QACtCmH,SAAU,SAACC,GACT,EAEF9B,WAAS,EACTiC,WAAY,CACVC,UAAW,IAEbzG,GAAI,CACF0G,aAAc,QAEhB+B,UAAQ,IAGT5H,GAAqC,OAAnBA,GAA2BA,EAAe4B,OAAS,IACpE9G,EAAAA,EAAAA,KAAC+L,GAAAA,EAAY,CACX/E,GAAG,gBACHiF,QACE/G,GACmB,OAAnBA,GACAA,EAAe4B,OAAS,GACxB5B,EAEFgH,eAAgB,SAACC,GAAM,OAAKA,EAAOpM,IAAI,EACvCuM,cAAe,SAACC,EAAGC,GACjB,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,EAExB,EACA/B,SAAU,SAAC8B,EAAGC,GACZ,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,EAExB,EACAE,YAAa,SAACC,GAAM,OAClB3M,EAAAA,EAAAA,KAACoK,EAAAA,GAASwC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVxM,QAAQ,WACRkK,MAAM,gBACNiB,YAAY,SACZhB,MAAOd,EAAQpG,QAAUmH,QAAQhB,EAAOnG,QACxCoH,WAAYhB,EAAQpG,QAAUmG,EAAOnG,OACrC0J,UAAQ,IACR,EAEJzI,GAAI,CACF0G,aAAc,QAEhB+B,UAAQ,IAIXzJ,GAAyB,OAAbA,GAAqBA,EAASyD,OAAS,IAClD9G,EAAAA,EAAAA,KAAC+L,GAAAA,EAAY,CACX/E,GAAG,gBACHiF,QAAS5I,GAAyB,OAAbA,GAAqBA,EAASyD,OAAS,GAAKzD,EACjE6I,eAAgB,SAACC,GAAM,OAAKA,EAAOpM,IAAI,EACvCuM,cAAe,SAACC,EAAGC,GACjB,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,EAExB,EACA/B,SAAU,SAAC8B,EAAGC,GACZ,IAAMC,EAAWF,EAAE5B,OAAOhD,MAC1B/E,QAAQC,IAAI4J,EAAUD,EAExB,EACAE,YAAa,SAACC,GAAM,OAClB3M,EAAAA,EAAAA,KAACoK,EAAAA,GAASwC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVxM,QAAQ,WACRkK,MAAM,kBACNiB,YAAY,WACZhB,MAAOd,EAAQnG,UAAYkH,QAAQhB,EAAOlG,UAC1CmH,WAAYhB,EAAQnG,UAAYkG,EAAOlG,SACvCyJ,UAAQ,IACR,EAEJA,UAAQ,QAKd9M,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNgB,WAAS,EACTjJ,KAAM,EACNkJ,YAAY,UACZC,aAAa,GACb1B,MAAO,CAAE2B,MAAO,QAChBlB,MAAOd,EAAQlB,SAAWiC,QAAQhB,EAAOjB,SACzCkC,WAAYhB,EAAQlB,SAAWiB,EAAOjB,QACtCmC,SAAU,SAACC,GACT,EAEFoC,UAAQ,cAMlB9M,EAAAA,EAAAA,KAACyL,EAAAA,EAAa,CAAAnL,UACZN,EAAAA,EAAAA,KAAC0L,EAAAA,EAAM,CAAC7H,KAAK,SAAS5C,MAAM,UAASX,SAAC,eAInC,MAKjB,C,OCrQO,SAASyM,GAAgBjN,GAAkE,IAAD+E,EAA9DC,EAAMhF,EAANgF,OAAiBE,GAAFlF,EAAPiF,QAAqBjF,EAAZkF,cAAcC,EAAYnF,EAAZmF,aAAc6G,EAAahM,EAAbgM,cAUxEvD,EAAgB,CACpBxI,KAHE+L,EANF/L,KAUAsI,MAJEyD,EALFzD,MAUA/E,QALEwI,EAJFxI,QAUAF,OANE0I,EAHF1I,OAUAC,SAPEyI,EAFFzI,SAUAiF,QAREwD,EADFxD,SAYF1F,QAAQC,IAAI0F,GAEZ,IAAMnF,GAASqC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMtC,OAAOuC,IAAI,IACjDtC,GAAWoC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMrC,SAASsC,IAAI,IAE3D3D,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDkD,EAAchD,EAAA,GAAEiD,EAAiBjD,EAAA,GAClCkD,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAASG,EAAAA,EAAAA,UACTH,EAASI,EAAAA,EAAAA,UAET5C,QAAQC,IAAIiJ,EACd,GAAG,KAEHnJ,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIqC,EACd,GAAG,CAACA,KAEJvC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIO,GAEZ,IAAMoD,EAAcH,KAAKC,MAAMT,aAAaC,QAAQ,qBAAoC,cAElFW,GAAMC,EAAAA,EAAAA,GAAO,IAAIC,IAAIH,EAAYI,MAAM,MAAM7D,KAAI,SAACC,GAAC,OAAK6D,OAAO7D,EAAE4D,MAAM,OAAO,GAAG,MAEvFzB,EAAkB/B,GAAUA,EAAO0D,OAAS,GAAK1D,EAAOqD,QAAO,SAACzD,GAAC,OAAKyD,EAAOM,SAAS/D,EAAEgE,GAAG,IAC7F,GAAG,CAAC5D,KAEJT,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIQ,EACd,GAAG,CAACA,KAEJV,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIoC,EACd,GAAG,CAACA,IAEJ,IAAMgC,EAAmBC,EAAAA,KAAaC,OAAKtC,EAAA,CACzC9E,KAAMmH,EAAAA,KAAaE,SAAS,oBAC5BhE,OAAQ8D,EAAAA,KAAaE,SAAS,sBAC9B/D,SAAU6D,EAAAA,KAAaE,SAAS,wBAChC9D,QAAS4D,EAAAA,KAENG,QAAQ,WAAY,6BACpBC,KAAK,gBAAiB,0BAA0B,SAAUK,GACzD,OAAIA,IAAU1C,CAIhB,IACCmC,SAAS,4BACZiB,MAAOnB,EAAAA,KAEJmB,MAAM,yBACNhB,QAAQ,iCAAkC,yBAC1CD,SAAS,qBACZkB,QAASpB,EAAAA,KAAaE,SAAS,yBAAsBvG,EAAAA,EAAAA,GAAAgE,EAAC,SAC9CqC,EAAAA,KAAaE,SAAS,wBAAqBvG,EAAAA,EAAAA,GAAAgE,EAAC,WAC1CqC,EAAAA,KAAaE,SAAS,yBAAuBvC,IAQzD,OACEtB,EAAAA,EAAAA,MAACmF,EAAAA,EAAM,CAACC,KAAM7D,EAAQ8D,WAAS,EAAAtI,SAAA,EAC7BN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAW,CAACC,UAAU,+BAA8BxI,UACnDiD,EAAAA,EAAAA,MAACwF,EAAAA,EAAG,CAAC7I,QAAQ,OAAO8I,eAAe,gBAAgBC,WAAW,SAAQ3I,SAAA,EACpEN,EAAAA,EAAAA,KAAC+I,EAAAA,EAAG,CAAC7H,QAAQ,MAAMd,SAAU,GAAGE,SAAC,kBAIjCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACE,QAASkB,EAAa1E,UAChCN,EAAAA,EAAAA,KAACkJ,EAAAA,EAAK,YAIZlJ,EAAAA,EAAAA,KAACmJ,EAAAA,GAAM,CACLZ,cAAeA,EACftB,iBAAkBA,EAClBmC,SAAU,SAACC,GACTzG,QAAQC,IAAIwG,EAEd,EAAE/I,SAED,SAAAI,GAAA,IAAG2I,EAAM3I,EAAN2I,OAAsBE,GAAF7I,EAAZ4I,aAAoB5I,EAAN6I,QAAQC,EAAO9I,EAAP8I,QAASC,EAAa/I,EAAb+I,cAAa,OACtDzJ,EAAAA,EAAAA,KAAC0J,EAAAA,GAAI,CACHN,SAAU,SAACpG,GACTJ,QAAQC,IAAIG,EAEd,EAAE1C,UAEFN,EAAAA,EAAAA,KAAC2J,EAAAA,EAAa,CAAArJ,UACZN,EAAAA,EAAAA,KAAC4J,EAAAA,EAAS,CACR9G,KAAG,EACH+G,MAAO,CACL3J,QAAS,OACT4J,cAAe,SACfd,eAAgB,iBAChB1I,UAEFiD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE3J,SAAA,EACzBN,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,OACLsK,MAAM,OACNlK,QAAQ,WACRmK,MAAOd,EAAQzJ,MAAQwK,QAAQhB,EAAOxJ,MACtCyK,WAAYhB,EAAQzJ,MAAQwJ,EAAOxJ,KACnC0K,SAAU,SAACC,GACTjB,EAAc,OAAQiB,EAAMC,OAAOhD,MACrC,EACAiB,WAAS,EACT2C,aAAclC,EAAOtJ,KACrB+M,UAAQ,OAIZ9M,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,QACLsK,MAAM,QACNlK,QAAQ,WACRmK,MAAOd,EAAQnB,OAASkC,QAAQhB,EAAOlB,OACvCmC,WAAYhB,EAAQnB,OAASkB,EAAOlB,MACpCoC,SAAU,SAACC,GACTjB,EAAc,QAASiB,EAAMC,OAAOhD,MACtC,EACAiB,WAAS,EACT2C,aAAclC,EAAOhB,MACrByE,UAAQ,OAIZvJ,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,SAAA,EACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNlK,QAAQ,WACRmK,MAAOd,EAAQlG,SAAWiH,QAAQhB,EAAOjG,SACzCkH,WAAYhB,EAAQlG,SAAWiG,EAAOjG,QACtCmH,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,EACAiB,WAAS,EACTiC,WAAY,CACVC,UAAW,IAEbzG,GAAI,CACF0G,aAAc,QAEhBQ,aAAclC,EAAO/F,QACrBwJ,UAAQ,IAGT5H,GAAqC,OAAnBA,GAA2BA,EAAe4B,OAAS,IACpE9G,EAAAA,EAAAA,KAAC+L,GAAAA,EAAY,CACX/E,GAAG,gBACHiF,QACE/G,GACmB,OAAnBA,GACAA,EAAe4B,OAAS,GACxB5B,EAEFgH,eAAgB,SAACC,GAAM,OAAKA,EAAOpM,IAAI,EACvCiN,UAAQ,EACRzB,aAAcrG,EAAeuB,QAAO,SAACzD,GAAC,OAAKA,EAAEjD,OAASsJ,EAAOjG,MAAM,IAAE,GACrEsJ,YAAa,SAACC,GAAM,OAClB3M,EAAAA,EAAAA,KAACoK,EAAAA,GAASwC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVxM,QAAQ,WACRkK,MAAM,gBACNiB,YAAY,SACZhB,MAAOd,EAAQpG,QAAUmH,QAAQhB,EAAOnG,QACxCoH,WAAYhB,EAAQpG,QAAUmG,EAAOnG,OACrCmI,aAAclC,EAAO4D,YACrBH,UAAQ,IACR,EAEJzI,GAAI,CACF0G,aAAc,UAKnB1H,GAAyB,OAAbA,GAAqBA,EAASyD,OAAS,IAClD9G,EAAAA,EAAAA,KAAC+L,GAAAA,EAAY,CACX/E,GAAG,gBACHiF,QAAS5I,GAAyB,OAAbA,GAAqBA,EAASyD,OAAS,GAAKzD,EACjE6I,eAAgB,SAACC,GAAM,OAAKA,EAAOpM,IAAI,EACvCwL,aAAclI,EAASoD,QAAO,SAACzD,GAAC,OAAKA,EAAEjD,OAASsJ,EAAOhG,QAAQ,IAAE,GACjE2J,UAAQ,EACRN,YAAa,SAACC,GAAM,OAClB3M,EAAAA,EAAAA,KAACoK,EAAAA,GAASwC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJD,GAAM,IACVxM,QAAQ,WACRkK,MAAM,kBACNiB,YAAY,WACZhB,MAAOd,EAAQnG,UAAYkH,QAAQhB,EAAOlG,UAC1CmH,WAAYhB,EAAQnG,UAAYkG,EAAOlG,SACvCkI,aAAclC,EAAO6D,cACrBJ,UAAQ,IACR,QAMV9M,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE7J,UACfN,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACRrK,KAAK,UACLsK,MAAM,UACNgB,WAAS,EACTjJ,KAAM,EACNkJ,YAAY,UACZzB,MAAO,CAAE2B,MAAO,QAChBlB,MAAOd,EAAQlB,SAAWiC,QAAQhB,EAAOjB,SACzCkC,WAAYhB,EAAQlB,SAAWiB,EAAOjB,QACtCmC,SAAU,SAACC,GACTjB,EAAc,UAAWiB,EAAMC,OAAOhD,MACxC,EACA4D,aAAclC,EAAOf,QACrBwE,UAAQ,cAWb,MAKjB,CAEA,I,4DCtPcK,EAAAA,GAAAA,GAAY,CACxB7L,QAAS,CACP8L,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,wBAsVZ,OAjVA,WACE,IAAMzM,GAAQ2M,EAAAA,GAAAA,KACdvL,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApC8C,EAAM5C,EAAA,GAAEsL,EAAStL,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMwL,GAAAtL,EAAAA,EAAAA,GAAAG,EAAA,GAA1CoL,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAoC3L,EAAAA,EAAAA,UAAS,IAAG4L,GAAA1L,EAAAA,EAAAA,GAAAyL,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0C/L,EAAAA,EAAAA,UAAS,CAAC,GAAEgM,GAAA9L,EAAAA,EAAAA,GAAA6L,EAAA,GAA/ClC,EAAamC,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,GAAqBC,EAAAA,EAAAA,MAErBC,IAF8ClM,EAAAA,EAAAA,GAAAgM,EAAA,GAA7B,GACTG,UAC8BrM,EAAAA,EAAAA,UAAS,KAAGsM,GAAApM,EAAAA,EAAAA,GAAAkM,EAAA,GAA3CG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCzM,EAAAA,EAAAA,WAAS,GAAM0M,GAAAxM,EAAAA,EAAAA,GAAAuM,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0E7M,EAAAA,EAAAA,UAAS,IAAG8M,GAAA5M,EAAAA,EAAAA,GAAA2M,EAAA,GAA/EE,EAA6BD,EAAA,GAAEE,EAAgCF,EAAA,IAEtEpM,EAAAA,EAAAA,YAAU,WAkCR,GACC,IAEH,IAAMyC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,kBAAgB,WACdF,EAAS8J,EAAAA,EAAAA,SACX,GAAG,IAEH,IAAM/L,GAAUsC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMvC,QAAQwC,IAAI,IAEnDwJ,GAAeC,EAAAA,EAAAA,UAAQ,WAG3B,OAFAxM,QAAQC,IAAI2L,GAEe,KAAvBA,EAAYa,OACPlM,EAGeA,EAAQsD,QAC9B,SAACyD,GAAI,OACHA,EAAKnK,KAAKuP,cAAcvI,SAASyH,EAAYa,OAAOC,gBACpDpF,EAAKyB,eAAe4D,KAAK,KAAKD,cAAcvI,SAASyH,EAAYa,OAAOC,cAAc,GAI5F,GAAG,CAACd,EAAarL,IAEXqM,EAAiBC,EAAAA,OAAa,MAE9BC,IAAiBC,EAAAA,EAAAA,cAAY,WACjCnC,GAAU,GACVO,EAAc,MAChB,IAEMlM,IAAkB8N,EAAAA,EAAAA,cAAY,SAACC,GACnCpC,GAAU,GACVO,EAAc,QACdG,EAAiB0B,EACnB,IAEM7N,IAAkB4N,EAAAA,EAAAA,cAAY,SAACC,GACnCpC,GAAU,GACVO,EAAc,QACdG,EAAiB0B,EACnB,IAEM9N,IAAoB6N,EAAAA,EAAAA,cAAY,SAACC,GACrCpC,GAAU,GACVO,EAAc,UACdG,EAAiB0B,EACnB,IAEMC,IAAoBF,EAAAA,EAAAA,cAAY,WACpCnC,GAAU,GACVO,EAAc,IACdG,EAAiB,CAAC,EACpB,KAEAvL,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAImM,EACd,GAAG,CAACA,IAEJ,IAAMc,GAAe,eAAAhQ,GAAAyH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO2B,EAAQ0G,GAAY,IAAAC,EAAA,OAAAxI,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE7B,OADpB4F,GAAa,GACb/K,QAAQC,IAAIwG,GAAQxB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGKkI,EAAAA,EAAAA,KAAW,GAADnP,OAC5BoP,gCAA6B,yBAAAtD,EAAAA,EAAAA,GAAA,GAE3BvD,GAEL,CACE8G,QAAS,CACP,eAAgB,mBAChB,8BAA+B,+BAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAfKH,EAAQnI,EAAAuI,KAgBdxN,QAAQC,IAAImN,EAASrK,MAEC,2BAAlBqK,EAASrK,KACXsJ,EAAiC5F,EAAO/F,UAExC2L,EAAiC,IACjCzB,GAAU,GACVO,EAAc,IACd3I,EAAS8J,EAAAA,EAAAA,WACVrH,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwI,GAAAxI,EAAA,SAEDjF,QAAQ0H,MAAKzC,EAAAwI,IAAQ,QAED,OAFCxI,EAAAC,KAAA,GAErB6F,GAAa,GAAO9F,EAAAyI,OAAA,6BAAAzI,EAAAI,OAAA,GAAAP,EAAA,yBAEvB,gBApCoBQ,EAAAqI,GAAA,OAAAzQ,EAAAqI,MAAA,KAAAC,UAAA,KAsCfoI,GAAgB,eAAA9P,GAAA6G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgJ,EAAOpH,EAAQ0G,GAAY,IAAAC,EAAA,OAAAxI,EAAAA,EAAAA,KAAAI,MAAA,SAAA8I,GAAA,cAAAA,EAAA5I,KAAA4I,EAAA3I,MAAA,OAED,OADjD4F,GAAa,GACb/K,QAAQC,IAAIwG,EAAQyC,EAAeiE,GAAcW,EAAA5I,KAAA,EAAA4I,EAAA3I,KAAA,EAGxBkI,EAAAA,EAAAA,KAAW,GAADnP,OAC5BoP,gCAA6B,8BAAAtD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAE3Bd,GACAzC,GAAM,IACT0G,aAAAA,IAEF,CACEI,QAAS,CACP,eAAgB,mBAChB,8BAA+B,+BAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAjBKH,EAAQU,EAAAN,KAkBdxN,QAAQC,IAAImN,EAASrK,MAErB6H,GAAU,GACVO,EAAc,IACdG,EAAiB,CAAC,GAClB9I,EAAS8J,EAAAA,EAAAA,UAAyBwB,EAAA3I,KAAA,iBAAA2I,EAAA5I,KAAA,GAAA4I,EAAAL,GAAAK,EAAA,SAElC9N,QAAQ0H,MAAKoG,EAAAL,IAAQ,QAED,OAFCK,EAAA5I,KAAA,GAErB6F,GAAa,GAAO+C,EAAAJ,OAAA,6BAAAI,EAAAzI,OAAA,GAAAwI,EAAA,yBAEvB,gBAlCqBE,EAAAC,GAAA,OAAAlQ,EAAAyH,MAAA,KAAAC,UAAA,KAoChByI,GAAkB,eAAAlQ,GAAA4G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqJ,EAAOzH,GAAM,IAAA2G,EAAA,OAAAxI,EAAAA,EAAAA,KAAAI,MAAA,SAAAmJ,GAAA,cAAAA,EAAAjJ,KAAAiJ,EAAAhJ,MAAA,OAEH,OADnC4F,GAAa,GACb/K,QAAQC,IAAIwG,EAAQyC,GAAeiF,EAAAjJ,KAAA,EAAAiJ,EAAAhJ,KAAA,EAGVkI,EAAAA,EAAAA,KAAW,GAADnP,OAC5BoP,gCAA6B,gCAAAtD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAE3Bd,GACAzC,GAEL,CACE8G,QAAS,CACP,eAAgB,mBAChB,8BAA+B,+BAC/B,+BAAgC,oCAChC,+BACE,gUACF,mCAAoC,UAGxC,KAAD,EAhBKH,EAAQe,EAAAX,KAiBdxN,QAAQC,IAAImN,EAASrK,MAErB6H,GAAU,GACVO,EAAc,IACdG,EAAiB,CAAC,GAClB9I,EAAS8J,EAAAA,EAAAA,UAAyB6B,EAAAhJ,KAAA,iBAAAgJ,EAAAjJ,KAAA,GAAAiJ,EAAAV,GAAAU,EAAA,SAElCnO,QAAQ0H,MAAKyG,EAAAV,IAAQ,QAED,OAFCU,EAAAjJ,KAAA,GAErB6F,GAAa,GAAOoD,EAAAT,OAAA,6BAAAS,EAAA9I,OAAA,GAAA6I,EAAA,yBAEvB,gBAjCuBE,GAAA,OAAArQ,EAAAwH,MAAA,KAAAC,UAAA,KAmClB6I,IAActB,EAAAA,EAAAA,cAAY,SAACjF,GAAW,IAADwG,EACzCtO,QAAQC,IAAI6H,EAAMC,OAAOhD,MAAO6H,EAAgBA,EAAe2B,SAEzC,QAAtBD,EAAA1B,EAAe2B,eAAO,IAAAD,GAAtBA,EAAwBE,QAExB3C,EAAe/D,EAAMC,OAAOhD,MAC9B,IAMA,OACEpE,EAAAA,EAAAA,MAAC8N,GAAAA,EAAa,CAACzQ,MAAOA,EAAMN,SAAA,EAC1BN,EAAAA,EAAAA,KAACsR,EAAAA,EAAQ,CAACjN,GAAI,CAAEpD,MAAO,OAAQsQ,OAAQ,SAAC3Q,GAAK,OAAKA,EAAM2Q,OAAOC,OAAS,CAAC,GAAI7I,KAAM+E,EAAUpN,UAC3FN,EAAAA,EAAAA,KAACyR,EAAAA,EAAgB,CAACxQ,MAAM,cAGzB6D,GAAyB,QAAfgJ,GACT9N,EAAAA,EAAAA,KAAC4E,GAAe,CACdE,OAAQA,EACRC,QAAS+K,GACT9K,aAAc6K,GACd5K,aAAc+J,IAEd,KAEHlK,GAAyB,SAAfgJ,GACT9N,EAAAA,EAAAA,KAAC6L,GAAgB,CACf/G,OAAQA,EACRC,QAASyL,GACTxL,aAAc6K,GACd/D,cAAeA,IAEf,KAEHhH,GAAyB,SAAfgJ,GACT9N,EAAAA,EAAAA,KAAC+M,GAAgB,CACfjI,OAAQA,EACRE,aAAc6K,GACd/D,cAAeA,IAEf,KAEHhH,GAAyB,WAAfgJ,GACT9N,EAAAA,EAAAA,KAAC6M,GAAkB,CACjB/H,OAAQA,EACRC,QAAS8L,GACT7L,aAAc6K,GACd/D,cAAeA,IAEf,MAEJ9L,EAAAA,EAAAA,KAAC+J,EAAAA,GAAI,CAAAzJ,UACHiD,EAAAA,EAAAA,MAACmO,EAAAA,EAAI,CAACrN,GAAI,CAAEE,UAAW,QAASjE,SAAA,EAC9BN,EAAAA,EAAAA,KAAC2R,GAAAA,EAAW,CAAArR,UACViD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CACH5J,QAAQ,WACRyR,QAAQ,OACRC,aAAa,KACb3R,QAAQ,OACR8I,eAAe,gBACfC,WAAW,SAAQ3I,SAAA,EAEnBN,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACE,QAAQ,KAAKE,WAAY,IAAKY,MAAM,UAASX,SAAC,kBAI1DiD,EAAAA,EAAAA,MAACwG,EAAAA,GAAI,CACH/F,KAAK,QACLU,UAAU,OACVL,GAAI,CAAEyN,EAAG,UAAW5R,QAAS,OAAQ+I,WAAY,UAAW3I,SAAA,CAE3DsO,GACC5O,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CACR/F,GAAI,CAAE0N,GAAI,EAAGC,KAAM,GACnBhO,KAAK,QACLsH,YAAY,uBACZT,WAAY,CAAE,aAAc,wBAC5BoH,WAAS,EACTtK,MAAO6G,EACP/D,SAAUwG,GACV9Q,QAAQ,WACRkK,MAAM,WAEN,MACJrK,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,MAAM,YAAYC,UAAU,MAAKrD,UACxCN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CACT3C,MAAM,UACN4C,KAAK,SACL,aAAW,SACXC,QAnFG,WACnB+K,GAAgB,SAACqD,GAAU,OAAMA,CAAU,GAC7C,EAiFwC5R,UAEtBN,EAAAA,EAAAA,KAACmS,EAAAA,IAAU,CAACnO,KAAK,cAIrBhE,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACC,MAAM,cAAcC,UAAU,MAAKrD,UAC1CN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC3C,MAAM,YAAY,aAAW,SAAS6C,QAAS4L,GAAepP,UACxEN,EAAAA,EAAAA,KAACoS,EAAAA,IAAQ,CAACpO,KAAK,sBAOzBhE,EAAAA,EAAAA,KAACqS,GAAAA,EAAO,KAERrS,EAAAA,EAAAA,KAAC0B,EAAe,CACdE,aAAcuN,EACdtN,gBAAiBA,GACjBC,kBAAmBA,GACnBC,gBAAiBA,YAO7B,C","sources":["layouts/student/studentTableNew.js","layouts/student/modals/studentAddModal.js","layouts/student/modals/studentEditModal.js","layouts/student/modals/studentDeleteModal.js","layouts/student/modals/studentViewModal.js","layouts/student/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { Box, Button, Typography, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Visibility, Edit, Delete } from \"@mui/icons-material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { IconEye, IconEditCircle, IconEdit, IconTrash } from \"@tabler/icons\";\r\n\r\nfunction StudentModule({ name }) {\r\n  return (\r\n    <Typography display=\"block\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n      {name}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"rgb(17, 25, 54)\",\r\n    color: \"#fff\",\r\n    padding: \"16px\",\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nexport default function StudentTableNew({\r\n  filtereddata,\r\n  onOpenEditModal,\r\n  onOpenDeleteModal,\r\n  onOpenViewModal,\r\n}) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const [columns] = useState([\r\n    { Header: \"s.no\", accessor: \"sno\", align: \"left\" },\r\n    { Header: \"student name\", accessor: \"student name\", align: \"left\" },\r\n    { Header: \"series\", accessor: \"series\", align: \"left\" },\r\n    { Header: \"standard\", accessor: \"standard\", align: \"left\" },\r\n    { Header: \"contact\", accessor: \"contact\", align: \"center\" },\r\n    { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(rows);\r\n  }, [rows]);\r\n\r\n  useEffect(() => {\r\n    let row = [];\r\n    console.log(filtereddata);\r\n\r\n    if (filtereddata && filtereddata !== null) {\r\n      row = filtereddata.map((v, i) => ({\r\n        sno: (\r\n          <Typography color=\"text\" variant=\"h6\" fontSize={\"16px\"} fontWeight={400}>\r\n            {i + 1}\r\n          </Typography>\r\n        ),\r\n        student: <StudentModule name={`${v.name}`} />,\r\n        series: <StudentModule name={`${v.series}`} />,\r\n        standard: <StudentModule name={`${v.standard}`} />,\r\n        contact: <StudentModule name={`${v.contact}`} />,\r\n        action: (\r\n          <>\r\n            <Tooltip title=\"View\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenViewModal(v)}>\r\n                <IconEye size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Edit\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenEditModal(v)}>\r\n                <IconEditCircle size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n              <IconButton color=\"primary\" type=\"button\" onClick={() => onOpenDeleteModal(v)}>\r\n                <IconTrash size=\"24px\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ),\r\n      }));\r\n    }\r\n\r\n    setRows(row);\r\n  }, [filtereddata]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 700, boxShadow: \"none\" }} size=\"small\" aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align={columns[0].align}>S.No</StyledTableCell>\r\n            <StyledTableCell align={columns[1].align}>Student</StyledTableCell>\r\n            <StyledTableCell align={columns[2].align}>Series</StyledTableCell>\r\n            <StyledTableCell align={columns[2].align}>Standard</StyledTableCell>\r\n            <StyledTableCell align={columns[3].align}>Contact</StyledTableCell>\r\n            <StyledTableCell align={columns[4].align}>Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows &&\r\n            rows.map((row, i) => (\r\n              <StyledTableRow key={filtereddata[i].name}>\r\n                <StyledTableCell component=\"th\" scope=\"row\" align={columns[0].align}>\r\n                  {row.sno}\r\n                </StyledTableCell>\r\n                <StyledTableCell align={columns[1].align}>{row.student}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.series}</StyledTableCell>\r\n                <StyledTableCell align={columns[2].align}>{row.standard}</StyledTableCell>\r\n                <StyledTableCell align={columns[3].align}>{row.contact}</StyledTableCell>\r\n                <StyledTableCell align={columns[4].align}>{row.action}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nfunction decryptObject(ciphertext, secretKey) {\r\n  // Decrypt the object using AES\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, secretKey);\r\n  const plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n  console.log(plaintext);\r\n  return JSON.parse(plaintext);\r\n}\r\n\r\nexport function StudentAddModal({ isOpen, onClose, onCloseEmpty, errorContact }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n  }, []);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const key = localStorage.getItem(\"key_for_access\");\r\n  const login_role_data = localStorage.getItem(\"access_role_data\");\r\n  const decryptedObject = decryptObject(login_role_data, key);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    // const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n    const inputString = decryptedObject[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n  }, [standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", async function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n    series: \"\",\r\n    standard: \"\",\r\n    address: \"\",\r\n    student_school: {},\r\n    created_by: decryptedObject[\"id\"],\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      variant=\"outlined\"\r\n                      error={touched.name && Boolean(errors.name)}\r\n                      helperText={touched.name && errors.name}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"name\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <FormHelperText sx={{ color: \"red\" }}>\r\n                      {errorContact && \"Contact Already Exists\"}\r\n                    </FormHelperText>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                    />\r\n\r\n                    {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Series</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-series\"\r\n                          value={values.series}\r\n                          label=\"Series\"\r\n                          error={touched.series && Boolean(errors.series)}\r\n                          helperText={touched.series && errors.series}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"series\", event.target.value);\r\n                          }}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {filteredSeries &&\r\n                            filteredSeries.length > 0 &&\r\n                            filteredSeries.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                        </Select>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errors.series && touched.series ? errors.series : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    )}\r\n\r\n                    {standard && standard !== null && standard.length > 0 && (\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Standard</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-standard\"\r\n                          value={values.standard}\r\n                          label=\"Standard\"\r\n                          error={touched.standard && Boolean(errors.standard)}\r\n                          helperText={touched.standard && errors.standard}\r\n                          onChange={(event) => {\r\n                            setFieldValue(\"standard\", event.target.value);\r\n                          }}\r\n                          sx={{\r\n                            marginBottom: \"16px\",\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {standard &&\r\n                            standard.length > 0 &&\r\n                            standard.map((v) => <MenuItem value={v}>{v.name}</MenuItem>)}\r\n                        </Select>\r\n                        <FormHelperText sx={{ color: \"red\" }}>\r\n                          {errors.standard && touched.standard ? errors.standard : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue=\"\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentAddModal;\r\n","import { useLayoutEffect, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  student: yup.string().required(\"Student is required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n    .required(\"Phone number is required\"),\r\n  address: yup.string().required(\"Address is required\"),\r\n  student_series: yup.array().min(1, \"Please select at least one option\"),\r\n});\r\n\r\nexport function StudentEditModal({ isOpen, onClose, onCloseEmpty, editModalData }) {\r\n  // eslint-disable-next-line camelcase\r\n  const { name, contact, address, student_series } = editModalData;\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n  }, []);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    // if (series && series !== null && series.length !== 0) {\r\n    //   setNames(series.map((v) => v.name));\r\n    // }\r\n  }, [series]);\r\n\r\n  const initialValues = {\r\n    student: name,\r\n    contact,\r\n    address,\r\n    // eslint-disable-next-line camelcase\r\n    student_series,\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(initialValues);\r\n  }, [initialValues]);\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Edit Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"student\"\r\n                      label=\"Student\"\r\n                      variant=\"outlined\"\r\n                      error={touched.student && Boolean(errors.student)}\r\n                      helperText={touched.student && errors.student}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"student\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.student}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue={values.address}\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    {series && series !== null && series.length > 0 && (\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"tags-standard\"\r\n                        options={series && series !== null && series.length > 0 && series}\r\n                        getOptionLabel={(option) => option.name}\r\n                        isOptionEqualToValue={(option, value) => option.name === value.name}\r\n                        filterSelectedOptions\r\n                        // eslint-disable-next-line camelcase\r\n                        defaultValue={[\r\n                          ...series.filter((v) => values.student_series.includes(v.name)),\r\n                        ]}\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"student_series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          setFieldValue(\"student_series\", newInputValue);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"standard\"\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.student_series && Boolean(errors.student_series)}\r\n                            helperText={touched.student_series && errors.student_series}\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentEditModal;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nexport function StudentDeleteModal({ isOpen, onClose, onCloseEmpty, errorContact, editModalData }) {\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n  }, []);\r\n\r\n  // const [names, setNames] = useState();\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n  }, [standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    contact: \"\",\r\n    series: \"\",\r\n    standard: \"\",\r\n    address: \"\",\r\n    student_school: {},\r\n    created_by: JSON.parse(localStorage.getItem(\"access_role_data\"))[\"id\"],\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            Add Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      variant=\"outlined\"\r\n                      error={touched.name && Boolean(errors.name)}\r\n                      helperText={touched.name && errors.name}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"name\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        // setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        // setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      disabled\r\n                    />\r\n\r\n                    {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                      <Autocomplete\r\n                        id=\"tags-standard\"\r\n                        options={\r\n                          filteredSeries &&\r\n                          filteredSeries !== null &&\r\n                          filteredSeries.length > 0 &&\r\n                          filteredSeries\r\n                        }\r\n                        getOptionLabel={(option) => option.name}\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          // setFieldValue(\"series\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          // setFieldValue(\"series\", newInputValue);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.series && Boolean(errors.series)}\r\n                            helperText={touched.series && errors.series}\r\n                            disabled\r\n                          />\r\n                        )}\r\n                        sx={{\r\n                          marginBottom: \"16px\",\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    )}\r\n\r\n                    {standard && standard !== null && standard.length > 0 && (\r\n                      <Autocomplete\r\n                        id=\"tags-standard\"\r\n                        options={standard && standard !== null && standard.length > 0 && standard}\r\n                        getOptionLabel={(option) => option.name}\r\n                        onInputChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          // setFieldValue(\"standard\", newInputValue);\r\n                        }}\r\n                        onChange={(e, newInputValue) => {\r\n                          const newValue = e.target.value;\r\n                          console.log(newValue, newInputValue);\r\n                          // setFieldValue(\"standard\", newInputValue);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Select Standard\"\r\n                            placeholder=\"Standard\"\r\n                            error={touched.standard && Boolean(errors.standard)}\r\n                            helperText={touched.standard && errors.standard}\r\n                            disabled\r\n                          />\r\n                        )}\r\n                        disabled\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      defaultValue=\"\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        // setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentDeleteModal;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { FormGroup, IconButton, TextField, Box } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { seriesActions } from \"slices/series\";\r\nimport { standardActions } from \"slices/standard\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState } from \"react\";\r\nimport { values } from \"lodash\";\r\n// import CustomizedHook from \"./selectComponent\";\r\n\r\nexport function StudentViewModal({ isOpen, onClose, onCloseEmpty, errorContact, editModalData }) {\r\n  const {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series_name,\r\n    standard: standard_name,\r\n    address,\r\n  } = editModalData;\r\n\r\n  const initialValues = {\r\n    name,\r\n    email,\r\n    contact,\r\n    series: series_name,\r\n    standard: standard_name,\r\n    address,\r\n  };\r\n\r\n  console.log(initialValues);\r\n\r\n  const series = useSelector((state) => state.series.data);\r\n  const standard = useSelector((state) => state.standard.data);\r\n\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(seriesActions.getAll());\r\n    dispatch(standardActions.getAll());\r\n\r\n    console.log(editModalData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(filteredSeries);\r\n  }, [filteredSeries]);\r\n\r\n  useEffect(() => {\r\n    console.log(series);\r\n\r\n    const inputString = JSON.parse(localStorage.getItem(\"access_role_data\"))[\"school_series\"];\r\n\r\n    const filter = [...new Set(inputString.split(\", \").map((v) => Number(v.split(\"|-|\")[0])))];\r\n\r\n    setFilteredSeries(series && series.length > 0 && series.filter((v) => filter.includes(v.id)));\r\n  }, [series]);\r\n\r\n  useEffect(() => {\r\n    console.log(standard);\r\n  }, [standard]);\r\n\r\n  useEffect(() => {\r\n    console.log(errorContact);\r\n  }, [errorContact]);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    series: yup.string().required(\"Series is required\"),\r\n    standard: yup.string().required(\"Standard is required\"),\r\n    contact: yup\r\n      .string()\r\n      .matches(/^\\d{10}$/, \"Phone number is not valid\")\r\n      .test(\"contact-check\", \"Contact Already Exists\", function (value) {\r\n        if (value === errorContact) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n      .required(\"Phone number is required\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"Invalid email address\")\r\n      .matches(/^[a-zA-Z0-9._%+-]+@gmail\\.com$/, \"Invalid Gmail address\")\r\n      .required(\"Email is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n    series: yup.object().required(\"Series is required\"),\r\n    standard: yup.object().required(\"Standard is required\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values);\r\n    // onClose(values);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} fullWidth>\r\n      <DialogTitle className=\"flex justify-content-between\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box padding=\"8px\" fontSize={18}>\r\n            View Student\r\n          </Box>\r\n\r\n          <IconButton onClick={onCloseEmpty}>\r\n            <Close />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          console.log(values);\r\n          // onSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            onSubmit={(v) => {\r\n              console.log(v);\r\n              // handleSubmit(v);\r\n            }}\r\n          >\r\n            <DialogContent>\r\n              <FormGroup\r\n                row\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      variant=\"outlined\"\r\n                      error={touched.name && Boolean(errors.name)}\r\n                      helperText={touched.name && errors.name}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"name\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.name}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      error={touched.email && Boolean(errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"email\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      defaultValue={values.email}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"contact\"\r\n                      label=\"Contact\"\r\n                      variant=\"outlined\"\r\n                      error={touched.contact && Boolean(errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"contact\", event.target.value);\r\n                      }}\r\n                      fullWidth\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                      }}\r\n                      sx={{\r\n                        marginBottom: \"16px\",\r\n                      }}\r\n                      defaultValue={values.contact}\r\n                      disabled\r\n                    />\r\n\r\n                    {filteredSeries && filteredSeries !== null && filteredSeries.length > 0 && (\r\n                      <Autocomplete\r\n                        id=\"tags-standard\"\r\n                        options={\r\n                          filteredSeries &&\r\n                          filteredSeries !== null &&\r\n                          filteredSeries.length > 0 &&\r\n                          filteredSeries\r\n                        }\r\n                        getOptionLabel={(option) => option.name}\r\n                        readOnly\r\n                        defaultValue={filteredSeries.filter((v) => v.name === values.series)[0]}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Select Series\"\r\n                            placeholder=\"Series\"\r\n                            error={touched.series && Boolean(errors.series)}\r\n                            helperText={touched.series && errors.series}\r\n                            defaultValue={values.series_name}\r\n                            disabled\r\n                          />\r\n                        )}\r\n                        sx={{\r\n                          marginBottom: \"16px\",\r\n                        }}\r\n                      />\r\n                    )}\r\n\r\n                    {standard && standard !== null && standard.length > 0 && (\r\n                      <Autocomplete\r\n                        id=\"tags-standard\"\r\n                        options={standard && standard !== null && standard.length > 0 && standard}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue={standard.filter((v) => v.name === values.standard)[0]}\r\n                        readOnly\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            label=\"Select Standard\"\r\n                            placeholder=\"Standard\"\r\n                            error={touched.standard && Boolean(errors.standard)}\r\n                            helperText={touched.standard && errors.standard}\r\n                            defaultValue={values.standard_name}\r\n                            disabled\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      multiline\r\n                      rows={6}\r\n                      placeholder=\"Address\"\r\n                      style={{ width: \"100%\" }}\r\n                      error={touched.address && Boolean(errors.address)}\r\n                      helperText={touched.address && errors.address}\r\n                      onChange={(event) => {\r\n                        setFieldValue(\"address\", event.target.value);\r\n                      }}\r\n                      defaultValue={values.address}\r\n                      disabled\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </FormGroup>\r\n            </DialogContent>\r\n            {/* <DialogActions>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions> */}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default StudentViewModal;\r\n","import React, { useLayoutEffect, useState, useMemo, useCallback, useEffect } from \"react\";\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { useMaterialUIController } from \"context\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { studentActions } from \"slices/student\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport StudentTableNew from \"./studentTableNew\";\r\nimport { StudentAddModal } from \"./modals/studentAddModal\";\r\nimport { StudentEditModal } from \"./modals/studentEditModal\";\r\nimport { StudentDeleteModal } from \"./modals/studentDeleteModal\";\r\nimport { StudentViewModal } from \"./modals/studentViewModal\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { IconSearch, IconPlus } from \"@tabler/icons\";\r\nimport {\r\n  Button,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip,\r\n  Paper,\r\n  InputBase,\r\n} from \"@mui/material\";\r\n\r\n// Create a custom theme with the desired color\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#673ab7\", // purple\r\n    },\r\n    secondary: {\r\n      main: \"rgb(33, 150, 243)\", // blue\r\n    },\r\n  },\r\n});\r\n\r\nfunction Student() {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [whichModal, setWhichModal] = useState(\"\");\r\n  const [editModalData, setEditModalData] = useState({});\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [errorMessageContactToAddModal, setErrorMessageContactToAddModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/+918639693342/AUTOGEN2/INFOPB\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY3/918639693342/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // var requestOptions = {\r\n    //   method: \"GET\",\r\n    //   redirect: \"follow\",\r\n    // };\r\n    // fetch(\r\n    //   \"https://2factor.in/API/V1/e6d1f0ea-fa33-11ed-addf-0200cd936042/SMS/VERIFY/f18eaa75-fa37-11ed-addf-0200cd936042/487638\",\r\n    //   requestOptions\r\n    // )\r\n    //   .then((response) => response.text())\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  useLayoutEffect(() => {\r\n    dispatch(studentActions.getAll());\r\n  }, []);\r\n\r\n  const student = useSelector((state) => state.student.data);\r\n\r\n  const filteredData = useMemo(() => {\r\n    console.log(searchQuery);\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      return student;\r\n    }\r\n\r\n    const filteredStudent = student.filter(\r\n      (item) =>\r\n        item.name.toLowerCase().includes(searchQuery.trim().toLowerCase()) ||\r\n        item.student_series.join(\" \").toLowerCase().includes(searchQuery.trim().toLowerCase())\r\n    );\r\n\r\n    return filteredStudent;\r\n  }, [searchQuery, student]);\r\n\r\n  const searchInputRef = React.useRef(null);\r\n\r\n  const onOpenAddModal = useCallback(() => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"add\");\r\n  });\r\n\r\n  const onOpenEditModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"edit\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenViewModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"view\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onOpenDeleteModal = useCallback((val) => {\r\n    setIsOpen(true);\r\n    setWhichModal(\"delete\");\r\n    setEditModalData(val);\r\n  });\r\n\r\n  const onCloseEmptyModal = useCallback(() => {\r\n    setIsOpen(false);\r\n    setWhichModal(\"\");\r\n    setEditModalData({});\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(errorMessageContactToAddModal);\r\n  }, [errorMessageContactToAddModal]);\r\n\r\n  const onCloseAddModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-form`,\r\n        {\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      if (response.data === \"Contact already exists\") {\r\n        setErrorMessageContactToAddModal(values.contact);\r\n      } else {\r\n        setErrorMessageContactToAddModal(\"\");\r\n        setIsOpen(false);\r\n        setWhichModal(\"\");\r\n        dispatch(studentActions.getAll());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseEditModal = async (values, checkedItems) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData, checkedItems);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-edit-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n          checkedItems,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(studentActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onCloseDeleteModal = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values, editModalData);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/student/submit-delete-form`,\r\n        {\r\n          ...editModalData,\r\n          ...values,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"https://app.infopublisher.in\",\r\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            \"Access-Control-Allow-Headers\":\r\n              \"Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Origin, X-Requested-With, Content-Type, Accept, Authorization, access-control-allow-credentials,access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,content-type\",\r\n            \"Access-Control-Allow-Credentials\": \"true\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n\r\n      setIsOpen(false);\r\n      setWhichModal(\"\");\r\n      setEditModalData({});\r\n      dispatch(studentActions.getAll());\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchTable = useCallback((event) => {\r\n    console.log(event.target.value, searchInputRef, searchInputRef.current);\r\n\r\n    searchInputRef.current?.focus();\r\n\r\n    setSearchQuery(event.target.value);\r\n  });\r\n\r\n  const toggleSearch = () => {\r\n    setIsSearchOpen((prevSearch) => !prevSearch);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {isOpen && whichModal === \"add\" ? (\r\n        <StudentAddModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseAddModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          errorContact={errorMessageContactToAddModal}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"edit\" ? (\r\n        <StudentEditModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseEditModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"view\" ? (\r\n        <StudentViewModal\r\n          isOpen={isOpen}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpen && whichModal === \"delete\" ? (\r\n        <StudentDeleteModal\r\n          isOpen={isOpen}\r\n          onClose={onCloseDeleteModal}\r\n          onCloseEmpty={onCloseEmptyModal}\r\n          editModalData={editModalData}\r\n        />\r\n      ) : null}\r\n\r\n      <Grid>\r\n        <Card sx={{ boxShadow: \"none\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              variant=\"gradient\"\r\n              bgcolor=\"info\"\r\n              borderRadius=\"lg\"\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"h3\" fontWeight={500} color=\"primary\">\r\n                Student List\r\n              </Typography>\r\n\r\n              <Grid\r\n                size=\"small\"\r\n                component=\"form\"\r\n                sx={{ p: \"2px 0px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                {isSearchOpen ? (\r\n                  <TextField\r\n                    sx={{ ml: 1, flex: 1 }}\r\n                    size=\"small\"\r\n                    placeholder=\"Search this table...\"\r\n                    inputProps={{ \"aria-label\": \"search this table...\" }}\r\n                    autoFocus\r\n                    value={searchQuery}\r\n                    onChange={searchTable}\r\n                    variant=\"standard\"\r\n                    label=\"Search\"\r\n                  />\r\n                ) : null}\r\n                <Tooltip title=\"Search...\" placement=\"top\">\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    aria-label=\"search\"\r\n                    onClick={toggleSearch}\r\n                  >\r\n                    <IconSearch size=\"24px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Add Student\" placement=\"top\">\r\n                  <IconButton color=\"secondary\" aria-label=\"delete\" onClick={onOpenAddModal}>\r\n                    <IconPlus size=\"27px\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <Divider />\r\n\r\n          <StudentTableNew\r\n            filtereddata={filteredData}\r\n            onOpenEditModal={onOpenEditModal}\r\n            onOpenDeleteModal={onOpenDeleteModal}\r\n            onOpenViewModal={onOpenViewModal}\r\n          />\r\n        </Card>\r\n      </Grid>\r\n      {/* <Footer /> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n"],"names":["StudentModule","_ref","name","_jsx","Typography","display","variant","fontSize","fontWeight","children","StyledTableCell","styled","TableCell","_ref2","_ref3","theme","_defineProperty","concat","tableCellClasses","backgroundColor","color","padding","StyledTableRow","TableRow","_ref4","palette","action","hover","border","StudentTableNew","_ref5","filtereddata","onOpenEditModal","onOpenDeleteModal","onOpenViewModal","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","Header","accessor","align","columns","useEffect","console","log","row","map","v","i","sno","student","series","standard","contact","_jsxs","_Fragment","Tooltip","title","placement","IconButton","type","onClick","IconEye","size","IconEditCircle","IconTrash","TableContainer","Table","sx","minWidth","boxShadow","TableHead","TableBody","component","scope","StudentAddModal","_yup$object$shape","isOpen","onClose","onCloseEmpty","errorContact","filteredSeries","setFilteredSeries","dispatch","useDispatch","useLayoutEffect","seriesActions","standardActions","useSelector","state","data","key","localStorage","getItem","decryptedObject","ciphertext","secretKey","plaintext","CryptoJS","toString","JSON","parse","decryptObject","inputString","filter","_toConsumableArray","Set","split","Number","length","includes","id","validationSchema","yup","shape","required","matches","test","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","wrap","_context","prev","next","abrupt","stop","_x","apply","arguments","email","address","initialValues","student_school","created_by","Dialog","open","fullWidth","DialogTitle","className","Box","justifyContent","alignItems","Close","Formik","onSubmit","values","handleSubmit","errors","touched","setFieldValue","Form","DialogContent","FormGroup","style","flexDirection","Grid","container","spacing","item","xs","TextField","label","error","Boolean","helperText","onChange","event","target","FormHelperText","inputProps","maxLength","marginBottom","FormControl","InputLabel","Select","labelId","MenuItem","multiline","placeholder","defaultValue","width","DialogActions","Button","student_series","min","StudentEditModal","editModalData","Autocomplete","multiple","options","getOptionLabel","option","isOptionEqualToValue","filterSelectedOptions","onInputChange","e","newInputValue","newValue","renderInput","params","_objectSpread","StudentDeleteModal","disabled","StudentViewModal","readOnly","series_name","standard_name","createTheme","primary","main","secondary","useTheme","setIsOpen","_useState4","isLoading","setIsLoading","_useState5","_useState6","whichModal","setWhichModal","_useState7","_useState8","setEditModalData","_useMaterialUIControl","useMaterialUIController","_useState9","darkMode","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","isSearchOpen","setIsSearchOpen","_useState13","_useState14","errorMessageContactToAddModal","setErrorMessageContactToAddModal","studentActions","filteredData","useMemo","trim","toLowerCase","join","searchInputRef","React","onOpenAddModal","useCallback","val","onCloseEmptyModal","onCloseAddModal","checkedItems","response","axios","process","headers","sent","t0","finish","_x2","onCloseEditModal","_callee2","_context2","_x3","_x4","onCloseDeleteModal","_callee3","_context3","_x5","searchTable","_searchInputRef$curre","current","focus","ThemeProvider","Backdrop","zIndex","drawer","CircularProgress","Card","CardContent","bgcolor","borderRadius","p","ml","flex","autoFocus","prevSearch","IconSearch","IconPlus","Divider"],"sourceRoot":""}